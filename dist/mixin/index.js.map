{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.js","webpack:///webpack/bootstrap b45a13640c20dfafc911","webpack:///./node_modules/rxjs/_esm5/util/root.js","webpack:///./node_modules/rxjs/_esm5/util/isFunction.js","webpack:///./node_modules/rxjs/_esm5/util/isObject.js","webpack:///./node_modules/rxjs/_esm5/util/tryCatch.js","webpack:///./node_modules/rxjs/_esm5/Subscription.js","webpack:///./node_modules/rxjs/_esm5/Subscriber.js","webpack:///./node_modules/rxjs/_esm5/util/toSubscriber.js","webpack:///./node_modules/rxjs/_esm5/util/noop.js","webpack:///./node_modules/rxjs/_esm5/util/pipe.js","webpack:///./node_modules/rxjs/_esm5/util/isPromise.js","webpack:///./node_modules/rxjs/_esm5/util/subscribeToResult.js","webpack:///./node_modules/rxjs/_esm5/operators/takeUntil.js","webpack:///./src/common.js","webpack:///./node_modules/rxjs/_esm5/observable/FromEventObservable.js","webpack:///./node_modules/rxjs/_esm5/util/isScheduler.js","webpack:///./node_modules/rxjs/_esm5/operators/mergeMap.js","webpack:///./node_modules/rxjs/_esm5/util/identity.js","webpack:///./node_modules/rxjs/_esm5/operators/mergeAll.js","webpack:///./node_modules/rxjs/_esm5/observable/merge.js","webpack:///./node_modules/rxjs/_esm5/operators/map.js","webpack:///./node_modules/rxjs/_esm5/observable/dom/AjaxObservable.js","webpack:///./node_modules/rxjs/_esm5/operators/catchError.js","webpack:///./node_modules/rxjs/_esm5/operators/tap.js","webpack:///./node_modules/rxjs/_esm5/operators/distinctUntilChanged.js","webpack:///./node_modules/rxjs/_esm5/operators/filter.js","webpack:///./node_modules/rxjs/_esm5/operators/mapTo.js","webpack:///./node_modules/rxjs/_esm5/util/not.js","webpack:///./node_modules/rxjs/_esm5/operators/partition.js","webpack:///./node_modules/rxjs/_esm5/operators/pairwise.js","webpack:///./node_modules/rxjs/_esm5/operators/refCount.js","webpack:///./node_modules/rxjs/_esm5/operators/multicast.js","webpack:///./node_modules/rxjs/_esm5/operators/share.js","webpack:///./node_modules/rxjs/_esm5/observable/PromiseObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/IteratorObservable.js","webpack:///./node_modules/rxjs/_esm5/operators/concatAll.js","webpack:///./node_modules/rxjs/_esm5/observable/concat.js","webpack:///./node_modules/rxjs/_esm5/operators/startWith.js","webpack:///./node_modules/rxjs/_esm5/operators/switchMap.js","webpack:///./node_modules/rxjs/_esm5/operators/withLatestFrom.js","webpack:///./node_modules/rxjs/_esm5/operators/take.js","webpack:///./node_modules/rxjs/_esm5/operators/zip.js","webpack:///./node_modules/rxjs/_esm5/operators/concatMap.js","webpack:///./node_modules/rxjs/_esm5/util/isNumeric.js","webpack:///./node_modules/rxjs/_esm5/util/isDate.js","webpack:///./node_modules/qd-set/esm/index.js","webpack:///./node_modules/hy-component/src/component.js","webpack:///./node_modules/rxjs/_esm5/util/isArray.js","webpack:///./node_modules/rxjs/_esm5/util/errorObject.js","webpack:///./node_modules/rxjs/_esm5/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/_esm5/Observer.js","webpack:///./node_modules/rxjs/_esm5/symbol/rxSubscriber.js","webpack:///./node_modules/rxjs/_esm5/symbol/observable.js","webpack:///./node_modules/rxjs/_esm5/Observable.js","webpack:///./node_modules/rxjs/_esm5/util/ObjectUnsubscribedError.js","webpack:///./node_modules/rxjs/_esm5/SubjectSubscription.js","webpack:///./node_modules/rxjs/_esm5/Subject.js","webpack:///./node_modules/rxjs/_esm5/scheduler/Action.js","webpack:///./node_modules/rxjs/_esm5/scheduler/AsyncAction.js","webpack:///./node_modules/rxjs/_esm5/scheduler/QueueAction.js","webpack:///./node_modules/rxjs/_esm5/Scheduler.js","webpack:///./node_modules/rxjs/_esm5/scheduler/AsyncScheduler.js","webpack:///./node_modules/rxjs/_esm5/scheduler/QueueScheduler.js","webpack:///./node_modules/rxjs/_esm5/scheduler/queue.js","webpack:///./node_modules/rxjs/_esm5/Notification.js","webpack:///./node_modules/rxjs/_esm5/operators/observeOn.js","webpack:///./node_modules/rxjs/_esm5/ReplaySubject.js","webpack:///./node_modules/hy-component/src/rxjs.js","webpack:///./node_modules/attr-types/array.js","webpack:///./node_modules/attr-types/bool.js","webpack:///./node_modules/attr-types/number.js","webpack:///./node_modules/attr-types/regex.js","webpack:///./node_modules/attr-types/string.js","webpack:///./node_modules/rxjs/_esm5/OuterSubscriber.js","webpack:///./node_modules/rxjs/_esm5/util/isArrayLike.js","webpack:///./node_modules/rxjs/_esm5/symbol/iterator.js","webpack:///./node_modules/rxjs/_esm5/InnerSubscriber.js","webpack:///./src/url.js","webpack:///./src/mixin/constants.js","webpack:///./node_modules/rxjs/_esm5/observable/DeferObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/defer.js","webpack:///./node_modules/rxjs/_esm5/observable/fromEvent.js","webpack:///./node_modules/rxjs/_esm5/observable/ScalarObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/EmptyObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/ArrayObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/dom/ajax.js","webpack:///./node_modules/rxjs/_esm5/observable/ConnectableObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/of.js","webpack:///./node_modules/rxjs/_esm5/observable/ArrayLikeObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/FromObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/from.js","webpack:///./node_modules/rxjs/_esm5/observable/NeverObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/never.js","webpack:///./src/mixin/operators.js","webpack:///./src/mixin/methods.js","webpack:///./src/mixin/scrolling.js","webpack:///./src/mixin/history.js","webpack:///./node_modules/rxjs/_esm5/util/ArgumentOutOfRangeError.js","webpack:///./src/mixin/fetching.js","webpack:///./src/mixin/script-hack.js","webpack:///./src/mixin/update.js","webpack:///./node_modules/rxjs/_esm5/scheduler/async.js","webpack:///./node_modules/rxjs/_esm5/observable/TimerObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/timer.js","webpack:///./src/mixin/events.js","webpack:///./src/mixin/event-listeners.js","webpack:///./src/mixin/setup.js","webpack:///./src/mixin/index.js","webpack:///(webpack)/buildin/global.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","global","_root","__window","window","__self","WorkerGlobalScope","__global","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","TypeError","create","constructor","value","writable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","isFunction","x","isObject","_typeof","tryCatcher","tryCatchTarget","apply","arguments","e","errorObject","tryCatch","fn","flattenUnsubscriptionErrors","errors","reduce","errs","err","concat","UnsubscriptionError","isTrustedSubscriber","obj","Subscriber_Subscriber","rxSubscriber","toSubscriber","nextOrObserver","error","complete","empty","noop","pipeFromArray","fns","length","input","prev","rxjs__classCallCheck","rxjs__possibleConstructorReturn","rxjs__inherits","isPromise","subscribe","then","subscribeToResult","outerSubscriber","result","outerValue","outerIndex","destination","InnerSubscriber","closed","Observable_Observable","_isScalar","next","syncErrorThrowable","isArrayLike","len","setTimeout","iterator_iterator","iterator","item","done","observable_observable","obs","msg","takeUntil","notifier","source","lift","TakeUntilOperator","matchesAncestors","selector","curr","document","documentElement","matches","parentNode","isExternal","_ref","protocol","host","location","undefined","isHash","_ref2","hash","origin","pathname","getScrollHeight","h","b","body","sh","getScrollTop","pageYOffset","scrollTop","fragmentFromString","strHTML","createRange","createContextualFragment","isNodeStyleEventEmitter","sourceObj","addListener","removeListener","isJQueryStyleEventEmitter","on","off","isNodeList","FromEventObservable_toString","isHTMLCollection","isEventTarget","addEventListener","removeEventListener","isScheduler","schedule","mergeMap","project","resultSelector","concurrent","Number","POSITIVE_INFINITY","MergeMapOperator","identity","mergeAll","merge","observables","_i","scheduler","last","pop","ArrayObservable_ArrayObservable","map","thisArg","MapOperator","getCORSRequest","XMLHttpRequest","XDomainRequest","Error","getXMLHttpRequest","progId","progIds","ActiveXObject","ajaxGet","url","headers","AjaxObservable","method","ajaxPost","ajaxDelete","ajaxPut","ajaxPatch","ajaxGetJSON","mapResponse","responseType","parseXhrResponse","xhr","response","JSON","parse","responseText","responseXML","catchError","operator","CatchOperator","caught","tap","DoOperator","distinctUntilChanged","compare","keySelector","DistinctUntilChangedOperator","filter","predicate","FilterOperator","mapTo","MapToOperator","not","pred","notPred","partition","pairwise","PairwiseOperator","refCount","RefCountOperator","multicast","subjectOrSubjectFactory","subjectFactory","MulticastOperator","connectable","connectableObservableDescriptor","shareSubjectFactory","Subject_Subject","share","dispatchNext","arg","subscriber","dispatchError","getIterator","IteratorObservable_StringIterator","IteratorObservable_ArrayIterator","toLength","isNaN","numberIsFinite","sign","Math","floor","abs","maxSafeInteger","isFinite","valueAsNumber","concatAll","from","of","startWith","array","ScalarObservable","EmptyObservable","switchMap","SwitchMapOperator","withLatestFrom","args","WithLatestFromOperator","methods__classCallCheck","methods__possibleConstructorReturn","methods__inherits","_defineProperty","key","scrolling__classCallCheck","scrolling__possibleConstructorReturn","scrolling__inherits","history__defineProperty","history__classCallCheck","history__possibleConstructorReturn","history__inherits","take","count","take_TakeOperator","zip","zipStatic","ZipOperator","fetching__classCallCheck","fetching__possibleConstructorReturn","fetching__inherits","concatMap","script_hack__classCallCheck","script_hack__possibleConstructorReturn","script_hack__inherits","update__classCallCheck","update__possibleConstructorReturn","update__inherits","isNumeric","val","isArray","parseFloat","isDate","Date","events__classCallCheck","events__possibleConstructorReturn","events__inherits","event_listeners__classCallCheck","event_listeners__possibleConstructorReturn","event_listeners__inherits","setup__classCallCheck","setup__possibleConstructorReturn","setup__inherits","mixin__classCallCheck","mixin__possibleConstructorReturn","mixin__inherits","_Set","Set","size","a","indexOf","has","add","push","delete","t","splice","clear","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","COMPONENT_FEATURE_TESTS","sSymbol","Symbol","sRoot","sState","process","env","requestIdleCallback","f","cancelIdleCallback","clearTimeout","Component","componentMixin","C","_C","_class","getPrototypeOf","el","state","defaults","assign","setupProperties","setupShadowDOM","eventName","data","componentName","event","CustomEvent","dispatchEvent","_this2","sideEffects","keys","forEach","sideEffect","setupProperty","_this3","set","oldValue","setInternalState","getRoot","getEl","Array","__extends","__","_super","toString","join","stack","message","Subscription__typeof","Subscription_Subscription","Subscription","unsubscribe","_parent","_parents","_subscriptions","_unsubscribe","hasErrors","_a","index","remove","trial","sub","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","parent","for","Subscriber__typeof","Subscriber___extends","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","isStopped","trustedSubscriber","Subscriber_SafeSubscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","context","bind","_context","__tryOrSetError","__tryOrUnsub","_this","wrappedComplete","$$observable","observable","Observable","_subscribe","sink","_trySubscribe","PromiseCtor","Rx","config","Promise","resolve","reject","pipe","operations","toPromise","ObjectUnsubscribedError___extends","ObjectUnsubscribedError","SubjectSubscription___extends","SubjectSubscription","subject","observers","subscriberIndex","Subject___extends","SubjectSubscriber","Subject","hasError","thrownError","Subject_AnonymousSubject","copy","slice","asObservable","AnonymousSubject","Action___extends","Action","work","delay","AsyncAction___extends","AsyncAction_AsyncAction","AsyncAction","pending","id","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","QueueAction___extends","QueueAction","Scheduler","SchedulerAction","now","AsyncScheduler___extends","AsyncScheduler","active","scheduled","action","shift","QueueScheduler___extends","QueueScheduler","queue","Notification_Notification","Notification","kind","hasValue","observe","observer","do","accept","toObservable","throw","createNext","undefinedValueNotification","createError","createComplete","completeNotification","observeOn___extends","observeOn_ObserveOnSubscriber","ObserveOnSubscriber","dispatch","notification","scheduleMessage","ObserveOnMessage","ReplaySubject___extends","ReplaySubject_ReplaySubject","ReplaySubject","bufferSize","windowTime","_events","_bufferSize","_windowTime","_getNow","ReplayEvent","_trimBufferThenGetEvents","eventsCount","spliceCount","time","max","rxjs__createClass","_get","receiver","Function","desc","getOwnPropertyDescriptor","rxjs_rxjsMixin","opts","subjects","disconnect","types","array_array","attr","trim","replace","split","stringify","bool","attr2","number","regex","match","RegExp","r","string","OuterSubscriber___extends","OuterSubscriber","notifyNext","innerValue","innerIndex","innerSub","notifyError","notifyComplete","Set_1","Map_1","Map","getOwnPropertyNames","InnerSubscriber___extends","takeUntil___extends","takeUntil_TakeUntilSubscriber","TakeUntilSubscriber","url_URL","URL","base","doc","implementation","createHTMLDocument","baseElement","createElement","href","head","appendChild","anchorElement","test","_anchorElement","hostname","port","search","oldURL","webkitURL","mozURL","createObjectURL","blob","revokeObjectURL","Element","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","PUSH","DeferObservable___extends","DeferObservable","observableFactory","DeferObservable_DeferSubscriber","DeferSubscriber","tryDefer","_callFactory","defer","FromEventObservable___extends","FromEventObservable_FromEventObservable","FromEventObservable","options","setupSubscription","handler","source_1","source_2","source_3","fromEvent","ScalarObservable___extends","EmptyObservable___extends","ArrayObservable___extends","ArrayObservable","mergeMap___extends","mergeMap_MergeMapSubscriber","MergeMapSubscriber","hasCompleted","buffer","_tryNext","_innerSub","ish","_notifyResultSelector","map___extends","MapSubscriber","AjaxObservable___extends","urlOrRequest","request","async","createXHR","crossDomain","withCredentials","timeout","prop","AjaxObservable_AjaxSubscriber","post","put","patch","getJSON","AjaxSubscriber","FormData","serializeBody","send","AjaxResponse","_b","user","password","setupEvents","open","setHeaders","contentType","splitIndex","substring","encodeURI","setRequestHeader","xhrTimeout","progressSubscriber","AjaxTimeoutError","xhrReadyStateChange","readyState","status_1","status","AjaxError","ontimeout","upload","xhrProgress_1","onprogress","xhrError_1","onerror","onreadystatechange","abort","originalEvent","ajax","catchError___extends","catchError_CatchSubscriber","CatchSubscriber","err2","tap___extends","tap_DoSubscriber","DoSubscriber","safeSubscriber","distinctUntilChanged___extends","distinctUntilChanged_DistinctUntilChangedSubscriber","DistinctUntilChangedSubscriber","hasKey","y","Boolean","filter___extends","FilterSubscriber","mapTo___extends","MapToSubscriber","pairwise___extends","PairwiseSubscriber","hasPrev","refCount___extends","_refCount","refCounter","RefCountSubscriber","connection","connect","sharedConnection","_connection","ConnectableObservable___extends","ConnectableObservable_ConnectableObservable","ConnectableObservable","_isComplete","getSubject","_subject","ConnectableSubscriber","connectableProto","PromiseObservable___extends","PromiseObservable_PromiseObservable","PromiseObservable","promise","IteratorObservable___extends","IteratorObservable","return","StringIterator","str","idx","charAt","ArrayIterator","arr","pow","ArrayLikeObservable___extends","ArrayLikeObservable_ArrayLikeObservable","ArrayLikeObservable","arrayLike","FromObservable__typeof","FromObservable___extends","FromObservable_FromObservable","FromObservable","switchMap___extends","switchMap_SwitchMapSubscriber","SwitchMapSubscriber","innerSubscription","_tryNotifyNext","withLatestFrom___extends","withLatestFrom_WithLatestFromSubscriber","WithLatestFromSubscriber","toRespond","values","found","_tryProject","NeverObservable___extends","NeverObservable_NeverObservable","NeverObservable","never","operators_unsubscribeWhen","pauser$","paused","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","methods__createClass","methods_helperMixin","anchor","hrefRegex","_ref$event","metaKey","ctrlKey","shouldLoadAnchor","_ref3","_ref4","prevPathname","_ref4$","_ref4$$url","type","scrolling__createClass","scrolling_scrollMixin","getElementById","substr","scrollIntoView","scroll","pageXOffset","histId","history","userHasScrolled","scrollHashIntoView","style","minHeight","scrollHeight","scrollRestoration","restoreScrollPostion","history__createClass","history_historyMixin","_scrollMixin","_ref$url","title","currState","nextState","replaceState","pushState","saveScrollPosition","ArgumentOutOfRangeError___extends","ArgumentOutOfRangeError","take___extends","TakeOperator","total","TakeSubscriber","zip___extends","zip_ZipSubscriber","ZipSubscriber","iterators","zip_StaticArrayIterator","StaticIterator","zip_ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","nextResult","StaticArrayIterator","ZipBufferIterator","isComplete","fetching__slicedToArray","fetching__createClass","fetching_fetchMixin","latestPrefetch","prefetch$","getFetch$","fetch","animPromise","script_hack__slicedToArray","script_hack__createClass","script_hack_scriptMixin","replaceEls","scripts","docfrag","querySelectorAll","scriptSelector","script","pair","previousSibling","removeChild","ref","originalWrite","write","_len","_key","temp","innerHTML","childNodes","node","insertBefore","nextSibling","src","insertScript","update__slicedToArray","update__createClass","update_updateMixin","_scriptMixin","fragment","querySelector","textContent","replaceIds","getElementsByTagName","tagName","getTitle","getReplaceElements","some","replaceElMissing","tempRemoveScriptTags","elements","oldElement","replaceChild","replaceContentByIds","replaceContentWholesale","updateHistoryTitle","rewriteURLs","replaceContent","rewriteURL","rewriteURLSrcSet","rewriteURLList","setAttribute","getAttribute","_this4","_this5","async_async","TimerObservable___extends","TimerObservable_TimerObservable","TimerObservable","dueTime","period","initialDelay","timer","events__createClass","events_eventMixin","duration","waitUntil","fireEvent","detail","back","event_listeners__createClass","event_listeners_eventListenersMixin","links","WeakSet","pushNext","pushSubject","hintNext","hintSubject","addLink","link","passive","addListeners","addedNode","linkSelector","removeLink","removeListeners","removedNode","mutationObserver","MutationObserver","mutations","childList","subtree","addedNodes","removedNodes","currentTarget","setup__slicedToArray","setup__createClass","setup_setupObservablesMixin","_eventListenersMixin","q","cacheNr","push$","isPushEvent","preventDefault","saveScrollHistoryState","pop$","reload$","_merge$pipe$map","initialHref","_url","isHashChange","obs$","_merge$pipe$map2","hash$","page$","fetch$","hint$","isHintEvent","compareContext","_ref5","recoverIfResponse","updateHistoryState","onStart","getResponse","_fetch$$pipe","_ref6","_fetch$$pipe2","fetchOk$","fetchError$","responseToContent","onReady","updateDOM","onAfter","manageScrollPostion","onDOMError","reinsertScriptTags","onError","onLoad","updateHistoryStateHash","onNetworkError","onProgress","setupEventListeners","MIXIN_FEATURE_TESTS","mixin_pushStateMixin","mixin__createClass","mixin__get","arr2","DocumentFragment","_setupObservablesMixi","orig","setupObservables","g","eval"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyPushState\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyPushState\"] = factory();\n\telse\n\t\troot[\"hyPushState\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*!\n * Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyPushState\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyPushState\"] = factory();\n\telse\n\t\troot[\"hyPushState\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return _root; });\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n/*@__PURE__*/(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n\n//# sourceMappingURL=root.js.map\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(2)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// CONCATENATED MODULE: ./node_modules/qd-set/esm/index.js\nvar _Set = typeof Set !== 'undefined' && new Set([1]).size === 1 ? Set : function () {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  a = a.filter(function (x, i) {\n    return i === a.indexOf(x);\n  });\n  a.size = a.length;\n  a.has = function (x) {\n    return a.indexOf(x) > -1;\n  };\n  a.add = function (x) {\n    if (!a.has(x)) {\n      a.size++;a.push(x);\n    }return a;\n  };\n  a.delete = function (x) {\n    var t = void 0;if (t = a.has(x)) {\n      a.size--;a.splice(a.indexOf(x), 1);\n    }return t;\n  };\n  a.clear = function () {\n    while (a.pop()) {}a.size = 0;\n  };\n  return a;\n};\n\n\n// CONCATENATED MODULE: ./node_modules/hy-component/src/component.js\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// # src / component.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n// Licensed under MIT\n\n// import 'core-js/fn/array/for-each';\n// import 'core-js/fn/object/assign';\n// import 'core-js/fn/object/define-property';\n// import 'core-js/fn/object/keys';\n\n\n\n\n\nvar COMPONENT_FEATURE_TESTS = new _Set([\"customevent\"]);\n\nvar sSymbol = Symbol || function (x) {\n  return \"_\" + x;\n};\nvar sRoot = sSymbol(\"sroot\");\nvar sState = sSymbol(\"state\");\n\nwindow.process = window.process || {};\nwindow.process.env = window.process.env || {};\n\nwindow.requestIdleCallback = window.requestIdleCallback || function (f) {\n  return window.setTimeout(f, 0);\n};\nwindow.cancelIdleCallback = window.cancelIdleCallback || window.clearTimeout;\n\nvar Component = function Component() {\n  _classCallCheck(this, Component);\n};\n\nvar componentMixin = function componentMixin() {\n  var C = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Component;\n  return function (_C) {\n    _inherits(_class, _C);\n\n    function _class() {\n      _classCallCheck(this, _class);\n\n      return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    _createClass(_class, [{\n      key: \"setupComponent\",\n      value: function setupComponent(el, state) {\n        var defaults = this.constructor.defaults;\n\n\n        if (false) {\n          var _constructor = this.constructor,\n              componentName = _constructor.componentName,\n              sideEffects = _constructor.sideEffects;\n\n          if (!componentName) {\n            console.warn(\"Component needs to have a name, e.g. `my-tag`. To set a name, provide a static getter called `componentName`.\");\n          }\n          if (!defaults) {\n            console.warn(\"No default properties provided. Implement a static getter called `defaults`.\");\n          }\n          if (!sideEffects) {\n            console.warn(\"No side effects provided. Implement a static getter called `sideEffects`.\");\n          }\n        }\n\n        this[sState] = Object.assign({}, defaults, state);\n        this.setupProperties(this);\n        this[sRoot] = this.setupShadowDOM(el);\n      }\n    }, {\n      key: \"setupShadowDOM\",\n      value: function setupShadowDOM(el) {\n        return el;\n      }\n    }, {\n      key: \"connectComponent\",\n      value: function connectComponent() {}\n    }, {\n      key: \"disconnectComponent\",\n      value: function disconnectComponent() {}\n    }, {\n      key: \"adoptComponent\",\n      value: function adoptComponent() {}\n    }, {\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this[sRoot];\n      }\n    }, {\n      key: \"getEl\",\n      value: function getEl() {\n        return this[sRoot];\n      }\n    }, {\n      key: \"fireEvent\",\n      value: function fireEvent(eventName, data) {\n        var componentName = this.constructor.componentName;\n\n        var event = new CustomEvent(componentName + \"-\" + eventName, data);\n        this.el.dispatchEvent(event);\n      }\n    }, {\n      key: \"setInternalState\",\n      value: function setInternalState(key, value) {\n        this[sState][key] = value;\n      }\n    }, {\n      key: \"setupProperties\",\n      value: function setupProperties() {\n        var _this2 = this;\n\n        var sideEffects = this.constructor.sideEffects;\n\n\n        Object.keys(this[sState]).forEach(function (key) {\n          var sideEffect = sideEffects[key];\n          _this2.setupProperty(key, sideEffect);\n        });\n      }\n    }, {\n      key: \"setupProperty\",\n      value: function setupProperty(key, sideEffect) {\n        var _this3 = this;\n\n        Object.defineProperty(this, key, {\n          get: function get() {\n            return _this3[sState][key];\n          },\n          set: function set(value) {\n            var oldValue = _this3[sState][key];\n            _this3.setInternalState(key, value);\n            if (sideEffect) sideEffect.call(_this3, value, oldValue);\n          },\n          enumerable: true,\n          configurable: true\n        });\n      }\n    }, {\n      key: \"sroot\",\n      get: function get() {\n        return this.getRoot();\n      }\n    }, {\n      key: \"el\",\n      get: function get() {\n        return this.getEl();\n      }\n    }]);\n\n    return _class;\n  }(C);\n};\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/util/root.js\nvar root = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isFunction.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isArray.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar isArray = Array.isArray || function (x) {\n  return x && typeof x.length === 'number';\n};\n//# sourceMappingURL=isArray.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isObject.js\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isObject(x) {\n    return x != null && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/errorObject.js\n// typeof any so that it we don't have to cast when comparing a result to the error object\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/tryCatch.js\n/** PURE_IMPORTS_START ._errorObject PURE_IMPORTS_END */\n\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    } catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n;\n//# sourceMappingURL=tryCatch.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/UnsubscriptionError.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ? errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) {\n            return i + 1 + \") \" + err.toString();\n        }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error);\n//# sourceMappingURL=UnsubscriptionError.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/Subscription.js\nvar Subscription__typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/** PURE_IMPORTS_START ._util_isArray,._util_isObject,._util_isFunction,._util_tryCatch,._util_errorObject,._util_UnsubscriptionError PURE_IMPORTS_END */\n\n\n\n\n\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription_Subscription = /*@__PURE__*/ /*@__PURE__*/function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this,\n            _parent = _a._parent,\n            _parents = _a._parents,\n            _unsubscribe = _a._unsubscribe,\n            _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            var trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    var trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        } else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || teardown === Subscription.EMPTY) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown === 'undefined' ? 'undefined' : Subscription__typeof(teardown)) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                } else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                        var tmp = subscription;\n                        subscription = new Subscription();\n                        subscription._subscriptions = [tmp];\n                    }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this,\n            _parent = _a._parent,\n            _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        } else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        } else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription());\n    return Subscription;\n}();\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) {\n        return errs.concat(err instanceof UnsubscriptionError ? err.errors : err);\n    }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/Observer.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar empty = {\n    closed: true,\n    next: function next(value) {},\n    error: function error(err) {\n        throw err;\n    },\n    complete: function complete() {}\n};\n//# sourceMappingURL=Observer.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/symbol/rxSubscriber.js\n/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\n\nvar _Symbol = root[\"a\" /* root */].Symbol;\nvar rxSubscriber = typeof _Symbol === 'function' && typeof _Symbol.for === 'function' ?\n/*@__PURE__*/_Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nvar $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/Subscriber.js\nvar Subscriber__typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/** PURE_IMPORTS_START ._util_isFunction,._Subscription,._Observer,._symbol_rxSubscriber PURE_IMPORTS_END */\nvar Subscriber___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber_Subscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    Subscriber___extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = empty;\n                    break;\n                }\n                if ((typeof destinationOrNext === 'undefined' ? 'undefined' : Subscriber__typeof(destinationOrNext)) === 'object') {\n                    // HACK(benlesh): To resolve an issue where Node users may have multiple\n                    // copies of rxjs in their node_modules directory.\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        var trustedSubscriber = destinationOrNext[rxSubscriber]();\n                        this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        this.destination = trustedSubscriber;\n                        trustedSubscriber.add(this);\n                    } else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new Subscriber_SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new Subscriber_SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber] = function () {\n        return this;\n    };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    /** @deprecated internal use only */Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this,\n            _parent = _a._parent,\n            _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_Subscription);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar Subscriber_SafeSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    Subscriber___extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        } else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                } else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            } else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            } else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function wrappedComplete() {\n                    return _this._complete.call(_this._context);\n                };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                } else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            } else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        } catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        } catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    /** @deprecated internal use only */SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber_Subscriber);\nfunction isTrustedSubscriber(obj) {\n    return obj instanceof Subscriber_Subscriber || 'syncErrorThrowable' in obj && obj[rxSubscriber];\n}\n//# sourceMappingURL=Subscriber.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/toSubscriber.js\n/** PURE_IMPORTS_START .._Subscriber,.._symbol_rxSubscriber,.._Observer PURE_IMPORTS_END */\n\n\n\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber]) {\n            return nextOrObserver[rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_Subscriber(empty);\n    }\n    return new Subscriber_Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/symbol/observable.js\n/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\n\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var _Symbol = context.Symbol;\n    if (typeof _Symbol === 'function') {\n        if (_Symbol.observable) {\n            $$observable = _Symbol.observable;\n        } else {\n            $$observable = _Symbol('observable');\n            _Symbol.observable = $$observable;\n        }\n    } else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nvar observable_observable = /*@__PURE__*/getSymbolObservable(root[\"a\" /* root */]);\n/**\n * @deprecated use observable instead\n */\nvar $$observable = observable_observable;\n//# sourceMappingURL=observable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/noop.js\n/* tslint:disable:no-empty */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction noop() {}\n//# sourceMappingURL=noop.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/pipe.js\n/** PURE_IMPORTS_START ._noop PURE_IMPORTS_END */\n\n/* tslint:enable:max-line-length */\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\n/* @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) {\n            return fn(prev);\n        }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/Observable.js\n/** PURE_IMPORTS_START ._util_root,._util_toSubscriber,._symbol_observable,._util_pipe PURE_IMPORTS_END */\n\n\n\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable_Observable = /*@__PURE__*/ /*@__PURE__*/function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        } else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        } catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root[\"a\" /* root */].Rx && root[\"a\" /* root */].Rx.config && root[\"a\" /* root */].Rx.config.Promise) {\n                PromiseCtor = root[\"a\" /* root */].Rx.config.Promise;\n            } else if (root[\"a\" /* root */].Promise) {\n                PromiseCtor = root[\"a\" /* root */].Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    } catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                } else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    /** @deprecated internal use only */Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root[\"a\" /* root */].Rx && root[\"a\" /* root */].Rx.config && root[\"a\" /* root */].Rx.config.Promise) {\n                PromiseCtor = root[\"a\" /* root */].Rx.config.Promise;\n            } else if (root[\"a\" /* root */].Promise) {\n                PromiseCtor = root[\"a\" /* root */].Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) {\n                return value = x;\n            }, function (err) {\n                return reject(err);\n            }, function () {\n                return resolve(value);\n            });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}();\n//# sourceMappingURL=Observable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/ObjectUnsubscribedError.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar ObjectUnsubscribedError___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ObjectUnsubscribedError___extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error);\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/SubjectSubscription.js\n/** PURE_IMPORTS_START ._Subscription PURE_IMPORTS_END */\nvar SubjectSubscription___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    SubjectSubscription___extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_Subscription);\n//# sourceMappingURL=SubjectSubscription.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/Subject.js\n/** PURE_IMPORTS_START ._Observable,._Subscriber,._Subscription,._util_ObjectUnsubscribedError,._SubjectSubscription,._symbol_rxSubscriber PURE_IMPORTS_END */\nvar Subject___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    Subject___extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_Subscriber);\n/**\n * @class Subject<T>\n */\nvar Subject_Subject = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    Subject___extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new Subject_AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        } else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    /** @deprecated internal use only */Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        } else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_Subscription.EMPTY;\n        } else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_Subscription.EMPTY;\n        } else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new Subject_AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_Observable);\n/**\n * @class AnonymousSubject<T>\n */\nvar Subject_AnonymousSubject = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    Subject___extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    /** @deprecated internal use only */AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        } else {\n            return Subscription_Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject_Subject);\n//# sourceMappingURL=Subject.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/scheduler/Action.js\n/** PURE_IMPORTS_START .._Subscription PURE_IMPORTS_END */\nvar Action___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    Action___extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription_Subscription);\n//# sourceMappingURL=Action.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/scheduler/AsyncAction.js\n/** PURE_IMPORTS_START .._util_root,._Action PURE_IMPORTS_END */\nvar AsyncAction___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction_AsyncAction = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    AsyncAction___extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return root[\"a\" /* root */].setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root[\"a\" /* root */].clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        } else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        } catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    /** @deprecated internal use only */AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action);\n//# sourceMappingURL=AsyncAction.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/scheduler/QueueAction.js\n/** PURE_IMPORTS_START ._AsyncAction PURE_IMPORTS_END */\nvar QueueAction___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    QueueAction___extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return delay > 0 || this.closed ? _super.prototype.execute.call(this, state, delay) : this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if (delay !== null && delay > 0 || delay === null && this.delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction_AsyncAction);\n//# sourceMappingURL=QueueAction.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/Scheduler.js\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = /*@__PURE__*/ /*@__PURE__*/function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () {\n        return +new Date();\n    };\n    return Scheduler;\n}();\n//# sourceMappingURL=Scheduler.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/scheduler/AsyncScheduler.js\n/** PURE_IMPORTS_START .._Scheduler PURE_IMPORTS_END */\nvar AsyncScheduler___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar AsyncScheduler = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    AsyncScheduler___extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler);\n//# sourceMappingURL=AsyncScheduler.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/scheduler/QueueScheduler.js\n/** PURE_IMPORTS_START ._AsyncScheduler PURE_IMPORTS_END */\nvar QueueScheduler___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar QueueScheduler = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    QueueScheduler___extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        _super.apply(this, arguments);\n    }\n    return QueueScheduler;\n}(AsyncScheduler);\n//# sourceMappingURL=QueueScheduler.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/scheduler/queue.js\n/** PURE_IMPORTS_START ._QueueAction,._QueueScheduler PURE_IMPORTS_END */\n\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\nvar queue = /*@__PURE__*/new QueueScheduler(QueueAction);\n//# sourceMappingURL=queue.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/Notification.js\n/** PURE_IMPORTS_START ._Observable PURE_IMPORTS_END */\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification_Notification = /*@__PURE__*/ /*@__PURE__*/function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        } else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_Observable.of(this.value);\n            case 'E':\n                return Observable_Observable.throw(this.error);\n            case 'C':\n                return Observable_Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}();\n//# sourceMappingURL=Notification.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/observeOn.js\n/** PURE_IMPORTS_START .._Subscriber,.._Notification PURE_IMPORTS_END */\nvar observeOn___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nvar ObserveOnOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new observeOn_ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar observeOn_ObserveOnSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    observeOn___extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification,\n            destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_Subscriber);\nvar ObserveOnMessage = /*@__PURE__*/ /*@__PURE__*/function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}();\n//# sourceMappingURL=observeOn.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/ReplaySubject.js\n/** PURE_IMPORTS_START ._Subject,._scheduler_queue,._Subscription,._operators_observeOn,._util_ObjectUnsubscribedError,._SubjectSubscription PURE_IMPORTS_END */\nvar ReplaySubject___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject_ReplaySubject = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ReplaySubject___extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) {\n            bufferSize = Number.POSITIVE_INFINITY;\n        }\n        if (windowTime === void 0) {\n            windowTime = Number.POSITIVE_INFINITY;\n        }\n        _super.call(this);\n        this.scheduler = scheduler;\n        this._events = [];\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var now = this._getNow();\n        this._events.push(new ReplayEvent(now, value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    /** @deprecated internal use only */ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _events = this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        } else if (this.hasError) {\n            subscription = Subscription_Subscription.EMPTY;\n        } else if (this.isStopped) {\n            subscription = Subscription_Subscription.EMPTY;\n        } else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new observeOn_ObserveOnSubscriber(subscriber, scheduler));\n        }\n        var len = _events.length;\n        for (var i = 0; i < len && !subscriber.closed; i++) {\n            subscriber.next(_events[i].value);\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        } else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if (now - _events[spliceCount].time < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject_Subject);\nvar ReplayEvent = /*@__PURE__*/ /*@__PURE__*/function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}();\n//# sourceMappingURL=ReplaySubject.js.map\n// CONCATENATED MODULE: ./node_modules/hy-component/src/rxjs.js\nvar rxjs__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction rxjs__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction rxjs__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction rxjs__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / rxjs.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n// Licensed under MIT\n\n\n\n\nvar rxjs_rxjsMixin = function rxjsMixin(C) {\n  return function (_C) {\n    rxjs__inherits(_class, _C);\n\n    function _class() {\n      rxjs__classCallCheck(this, _class);\n\n      return rxjs__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    rxjs__createClass(_class, [{\n      key: \"setupComponent\",\n      value: function setupComponent(el, opts) {\n        var _this2 = this;\n\n        var sideEffects = {};\n\n        this.subjects = {};\n        this.subjects.disconnect = new Subject_Subject();\n        this.subjects.document = new ReplaySubject_ReplaySubject();\n\n        Object.keys(this.constructor.types).map(function (key) {\n          _this2.subjects[key] = new ReplaySubject_ReplaySubject(1);\n          sideEffects[key] = function (x) {\n            return _this2.subjects[key].next(x);\n          };\n        });\n\n        Object.defineProperty(this.constructor, \"sideEffects\", {\n          get: function get() {\n            return sideEffects;\n          },\n          set: function set() {},\n          enumerable: true,\n          configurable: true\n        });\n\n        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), \"setupComponent\", this).call(this, el, opts);\n      }\n    }, {\n      key: \"connectComponent\",\n      value: function connectComponent() {\n        var _this3 = this;\n\n        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), \"connectComponent\", this).call(this);\n        this.subjects.document.next(document);\n        Object.keys(this.constructor.types).map(function (key) {\n          return _this3.subjects[key].next(_this3[key]);\n        });\n      }\n    }, {\n      key: \"disconnectComponent\",\n      value: function disconnectComponent() {\n        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), \"disconnectComponent\", this).call(this);\n        this.subjects.disconnect.next({});\n      }\n    }, {\n      key: \"adaptComponent\",\n      value: function adaptComponent() {\n        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), \"adaptComponent\", this).call(this);\n        this.subjects.document.next(document);\n      }\n    }]);\n\n    return _class;\n  }(C);\n};\n// CONCATENATED MODULE: ./node_modules/attr-types/array.js\nvar array_array = function array(attr) {\n  if (attr == null) return null;\n\n  var str = attr.trim().replace(/^\\[?(.*?)\\]?$/, '$1').split(',').map(function (x) {\n    return x.trim();\n  });\n\n  return str || null;\n};\n\narray_array.stringify = function (a) {\n  return a && a.length > 0 ? a.join(',') : null;\n};\n\n/* harmony default export */ var attr_types_array = (array_array);\n// CONCATENATED MODULE: ./node_modules/attr-types/array-of.js\n\n\nvar array_of_arrayOf = function arrayOf(type) {\n  var f = function f(attr) {\n    if (attr == null) return null;\n    var a = array_array(attr).map(type);\n    if (a.reduce(function (r, x) {\n      return r && x !== null;\n    }, true)) {\n      return a;\n    }\n    return null;\n  };\n\n  f.stringify = function (a) {\n    var a2 = a && a.map && a.map(type.stringify);\n    if (a2 && a2.reduce(function (r, x) {\n      return r && x !== null;\n    }, true)) {\n      return array_array.stringify(a2);\n    }\n    return null;\n  };\n\n  return f;\n};\n\n/* harmony default export */ var array_of = (array_of_arrayOf);\n// CONCATENATED MODULE: ./node_modules/attr-types/bool.js\nvar bool = function bool(attr) {\n  if (attr == null) return false;\n  var attr2 = attr.trim && attr.trim() || attr;\n  return !(attr2 === 'false' || attr2 === 'null' || attr2 === 'undefined' || attr2 === '0' || attr2 === false);\n};\n\nbool.stringify = function (b) {\n  return b ? '' : null;\n};\n\n/* harmony default export */ var attr_types_bool = (bool);\n// CONCATENATED MODULE: ./node_modules/attr-types/number.js\nvar number = function number(attr) {\n  if (attr == null) return null;\n  return Number(attr);\n};\n\nnumber.stringify = function (n) {\n  if (n == null) return null;\n  return \"\" + n;\n};\n\n/* harmony default export */ var attr_types_number = (number);\n// CONCATENATED MODULE: ./node_modules/attr-types/one-of.js\nvar oneOf = function oneOf(alts) {\n  var f = function f(attr) {\n    if (attr == null) return null;\n\n    var i = alts.indexOf(attr);\n    if (false) {\n      console.warn('\\'' + attr + '\\' is not \\'oneOf\\': ' + alts.join(', '));\n    }\n\n    return i > -1 ? alts[i] : null;\n  };\n\n  f.stringify = function (o) {\n    return alts.indexOf(o) !== -1 ? o : null;\n  };\n\n  return f;\n};\n\n/* harmony default export */ var one_of = (oneOf);\n// CONCATENATED MODULE: ./node_modules/attr-types/regex.js\nvar regex = function regex(attr) {\n  if (attr == null) return null;\n  var attr2 = attr.trim && attr.trim() || attr;\n  var match = attr2.match(/^\\/?(.*?)(\\/([gimy]*))?$/);\n  return new RegExp(match[1], match[3]);\n};\n\nregex.stringify = function (r) {\n  return r && r.toString() || null;\n};\n\n/* harmony default export */ var attr_types_regex = (regex);\n// CONCATENATED MODULE: ./node_modules/attr-types/string.js\nvar string = function string(attr) {\n  return attr;\n};\n\nstring.stringify = function (s) {\n  return s;\n};\n\n/* harmony default export */ var attr_types_string = (string);\n// CONCATENATED MODULE: ./node_modules/attr-types/index.js\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var attr_types = ({\n  array: array_array, arrayOf: array_of_arrayOf, bool: bool, number: number, oneOf: oneOf, regex: regex, string: string\n});\n// CONCATENATED MODULE: ./node_modules/hy-component/src/types.js\n\n\n\n/* harmony default export */ var types = ({\n  array: array_array,\n  arrayOf: array_of_arrayOf,\n  bool: bool,\n  number: number,\n  oneOf: oneOf,\n  regex: regex,\n  string: string\n});\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/OuterSubscriber.js\n/** PURE_IMPORTS_START ._Subscriber PURE_IMPORTS_END */\nvar OuterSubscriber___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    OuterSubscriber___extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=OuterSubscriber.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isArrayLike.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar isArrayLike = function isArrayLike(x) {\n  return x && typeof x.length === 'number';\n};\n//# sourceMappingURL=isArrayLike.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isPromise.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/symbol/iterator.js\n/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\n\nfunction symbolIteratorPonyfill(root) {\n    var _Symbol = root.Symbol;\n    if (typeof _Symbol === 'function') {\n        if (!_Symbol.iterator) {\n            _Symbol.iterator = _Symbol('iterator polyfill');\n        }\n        return _Symbol.iterator;\n    } else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nvar iterator_iterator = /*@__PURE__*/symbolIteratorPonyfill(root[\"a\" /* root */]);\n/**\n * @deprecated use iterator instead\n */\nvar $$iterator = iterator_iterator;\n//# sourceMappingURL=iterator.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/InnerSubscriber.js\n/** PURE_IMPORTS_START ._Subscriber PURE_IMPORTS_END */\nvar InnerSubscriber___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    InnerSubscriber___extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=InnerSubscriber.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/subscribeToResult.js\n/** PURE_IMPORTS_START ._root,._isArrayLike,._isPromise,._isObject,.._Observable,.._symbol_iterator,.._InnerSubscriber,.._symbol_observable PURE_IMPORTS_END */\n\n\n\n\n\n\n\n\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        } else {\n            destination.syncErrorThrowable = true;\n            return result.subscribe(destination);\n        }\n    } else if (isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    } else if (isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) {\n            return destination.error(err);\n        }).then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root[\"a\" /* root */].setTimeout(function () {\n                throw err;\n            });\n        });\n        return destination;\n    } else if (result && typeof result[iterator_iterator] === 'function') {\n        var iterator = result[iterator_iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    } else if (result && typeof result[observable_observable] === 'function') {\n        var obs = result[observable_observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        } else {\n            return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    } else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\" + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\n//# sourceMappingURL=subscribeToResult.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/takeUntil.js\n/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar takeUntil___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil(notifier) {\n    return function (source) {\n        return source.lift(new TakeUntilOperator(notifier));\n    };\n}\nvar TakeUntilOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new takeUntil_TakeUntilSubscriber(subscriber, this.notifier));\n    };\n    return TakeUntilOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar takeUntil_TakeUntilSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    takeUntil___extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.add(subscribeToResult(this, notifier));\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber);\n//# sourceMappingURL=takeUntil.js.map\n// CONCATENATED MODULE: ./src/url.js\n// # src / url.js\n// Copyright 2013 Erik Arvidsson\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar url_URL = window.URL;\n\nif (!url_URL || !url_URL.prototype || !(\"href\" in url_URL.prototype)) {\n  url_URL = function URL(url, base) {\n    if (!url) throw new TypeError(\"Invalid argument\");\n\n    var doc = document.implementation.createHTMLDocument(\"\");\n    if (base) {\n      var baseElement = doc.createElement(\"base\");\n      baseElement.href = base;\n      doc.head.appendChild(baseElement);\n    }\n    var anchorElement = doc.createElement(\"a\");\n    anchorElement.href = url;\n    doc.body.appendChild(anchorElement);\n\n    if (anchorElement.protocol === \":\" || !/:/.test(anchorElement.href)) throw new TypeError(\"Invalid URL\");\n\n    Object.defineProperty(this, \"_anchorElement\", { value: anchorElement });\n  };\n\n  url_URL.prototype = {\n    toString: function toString() {\n      return this.href;\n    },\n\n    get href() {\n      return this._anchorElement.href;\n    },\n    set href(value) {\n      this._anchorElement.href = value;\n    },\n\n    get protocol() {\n      return this._anchorElement.protocol;\n    },\n    set protocol(value) {\n      this._anchorElement.protocol = value;\n    },\n\n    /* NOT IMPLEMENTED\n    get username() {\n      return this._anchorElement.username;\n    },\n    set username(value) {\n      this._anchorElement.username = value;\n    },\n     get password() {\n      return this._anchorElement.password;\n    },\n    set password(value) {\n      this._anchorElement.password = value;\n    },\n     get origin() {\n      return this._anchorElement.origin;\n    }, */\n\n    get host() {\n      return this._anchorElement.host;\n    },\n    set host(value) {\n      this._anchorElement.host = value;\n    },\n\n    get hostname() {\n      return this._anchorElement.hostname;\n    },\n    set hostname(value) {\n      this._anchorElement.hostname = value;\n    },\n\n    get port() {\n      return this._anchorElement.port;\n    },\n    set port(value) {\n      this._anchorElement.port = value;\n    },\n\n    get pathname() {\n      return this._anchorElement.pathname;\n    },\n    set pathname(value) {\n      this._anchorElement.pathname = value;\n    },\n\n    get search() {\n      return this._anchorElement.search;\n    },\n    set search(value) {\n      this._anchorElement.search = value;\n    },\n\n    get hash() {\n      return this._anchorElement.hash;\n    },\n    set hash(value) {\n      this._anchorElement.hash = value;\n    }\n  };\n\n  var oldURL = window.URL || window.webkitURL || window.mozURL;\n\n  url_URL.createObjectURL = function (blob) {\n    return oldURL.createObjectURL.apply(oldURL, arguments);\n  };\n\n  url_URL.revokeObjectURL = function (url) {\n    return oldURL.revokeObjectURL.apply(oldURL, arguments);\n  };\n\n  Object.defineProperty(url_URL.prototype, \"toString\", { enumerable: false });\n}\n// CONCATENATED MODULE: ./src/common.js\n// # src / common.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nvar matches = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.msMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.oMatchesSelector;\n\n// Checks if this element or any of its parents matches a given `selector`.\nfunction matchesAncestors(selector) {\n  var curr = this;\n  while (curr !== document && curr !== document.documentElement) {\n    if (matches.call(curr, selector)) return curr;\n    curr = curr.parentNode;\n  }\n  return null;\n}\n\n// Consider a URL external if either the protocol, hostname or port is different.\nfunction isExternal(_ref) {\n  var protocol = _ref.protocol,\n      host = _ref.host;\n  var location = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location;\n\n  return protocol !== location.protocol || host !== location.host;\n}\n\nfunction isHash(_ref2) {\n  var hash = _ref2.hash,\n      origin = _ref2.origin,\n      pathname = _ref2.pathname;\n  var location = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location;\n\n  return hash !== \"\" && origin === location.origin && pathname === location.pathname;\n}\n\nfunction getScrollHeight() {\n  var h = document.documentElement;\n  var b = document.body;\n  var sh = \"scrollHeight\";\n  return h[sh] || b[sh];\n}\n\nfunction getScrollLeft() {\n  return window.pageXOffset || document.body.scrollLeft;\n}\n\nfunction getScrollTop() {\n  return window.pageYOffset || document.body.scrollTop;\n}\n\nfunction fragmentFromString(strHTML) {\n  return document.createRange().createContextualFragment(strHTML);\n}\n// CONCATENATED MODULE: ./src/mixin/constants.js\n// # src / mixin / constants.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// These are some 'types' that we use throught the component.\n// Going with strings here instead of classes + instanceof / dynamic dispatch for simplicity.\nvar INIT = \"init\";\nvar HINT = \"hint\";\nvar PUSH = \"push\";\nvar POP = \"pop\";\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/DeferObservable.js\n/** PURE_IMPORTS_START .._Observable,.._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar DeferObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar DeferObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    DeferObservable___extends(DeferObservable, _super);\n    function DeferObservable(observableFactory) {\n        _super.call(this);\n        this.observableFactory = observableFactory;\n    }\n    /**\n     * Creates an Observable that, on subscribe, calls an Observable factory to\n     * make an Observable for each new Observer.\n     *\n     * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n     * is subscribed.\n     * </span>\n     *\n     * <img src=\"./img/defer.png\" width=\"100%\">\n     *\n     * `defer` allows you to create the Observable only when the Observer\n     * subscribes, and create a fresh Observable for each Observer. It waits until\n     * an Observer subscribes to it, and then it generates an Observable,\n     * typically with an Observable factory function. It does this afresh for each\n     * subscriber, so although each subscriber may think it is subscribing to the\n     * same Observable, in fact each subscriber gets its own individual\n     * Observable.\n     *\n     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n     * var clicksOrInterval = Rx.Observable.defer(function () {\n     *   if (Math.random() > 0.5) {\n     *     return Rx.Observable.fromEvent(document, 'click');\n     *   } else {\n     *     return Rx.Observable.interval(1000);\n     *   }\n     * });\n     * clicksOrInterval.subscribe(x => console.log(x));\n     *\n     * // Results in the following behavior:\n     * // If the result of Math.random() is greater than 0.5 it will listen\n     * // for clicks anywhere on the \"document\"; when document is clicked it\n     * // will log a MouseEvent object to the console. If the result is less\n     * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n     *\n     * @see {@link create}\n     *\n     * @param {function(): SubscribableOrPromise} observableFactory The Observable\n     * factory function to invoke for each Observer that subscribes to the output\n     * Observable. May also return a Promise, which will be converted on the fly\n     * to an Observable.\n     * @return {Observable} An Observable whose Observers' subscriptions trigger\n     * an invocation of the given Observable factory function.\n     * @static true\n     * @name defer\n     * @owner Observable\n     */\n    DeferObservable.create = function (observableFactory) {\n        return new DeferObservable(observableFactory);\n    };\n    /** @deprecated internal use only */DeferObservable.prototype._subscribe = function (subscriber) {\n        return new DeferObservable_DeferSubscriber(subscriber, this.observableFactory);\n    };\n    return DeferObservable;\n}(Observable_Observable);\nvar DeferObservable_DeferSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    DeferObservable___extends(DeferSubscriber, _super);\n    function DeferSubscriber(destination, factory) {\n        _super.call(this, destination);\n        this.factory = factory;\n        this.tryDefer();\n    }\n    DeferSubscriber.prototype.tryDefer = function () {\n        try {\n            this._callFactory();\n        } catch (err) {\n            this._error(err);\n        }\n    };\n    DeferSubscriber.prototype._callFactory = function () {\n        var result = this.factory();\n        if (result) {\n            this.add(subscribeToResult(this, result));\n        }\n    };\n    return DeferSubscriber;\n}(OuterSubscriber);\n//# sourceMappingURL=DeferObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/defer.js\n/** PURE_IMPORTS_START ._DeferObservable PURE_IMPORTS_END */\n\nvar defer = DeferObservable.create;\n//# sourceMappingURL=defer.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/FromEventObservable.js\n/** PURE_IMPORTS_START .._Observable,.._util_tryCatch,.._util_isFunction,.._util_errorObject,.._Subscription PURE_IMPORTS_END */\nvar FromEventObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\nvar FromEventObservable_toString = Object.prototype.toString;\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && FromEventObservable_toString.call(sourceObj) === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && FromEventObservable_toString.call(sourceObj) === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventObservable_FromEventObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    FromEventObservable___extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n        this.options = options;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * `fromEvent` accepts as a first argument event target, which is an object with methods\n     * for registering event handler functions. As a second argument it takes string that indicates\n     * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n     * which are described in detail below. If your event target does not match any of the ones listed,\n     * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n     * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n     * handler functions have different names, but they all accept a string describing event type\n     * and function itself, which will be called whenever said event happens.\n     *\n     * Every time resulting Observable is subscribed, event handler function will be registered\n     * to event target on given event type. When that event fires, value\n     * passed as a first argument to registered function will be emitted by output Observable.\n     * When Observable is unsubscribed, function will be unregistered from event target.\n     *\n     * Note that if event target calls registered function with more than one argument, second\n     * and following arguments will not appear in resulting stream. In order to get access to them,\n     * you can pass to `fromEvent` optional project function, which will be called with all arguments\n     * passed to event handler. Output Observable will then emit value returned by project function,\n     * instead of the usual value.\n     *\n     * Remember that event targets listed below are checked via duck typing. It means that\n     * no matter what kind of object you have and no matter what environment you work in,\n     * you can safely use `fromEvent` on that object if it exposes described methods (provided\n     * of course they behave as was described above). So for example if Node.js library exposes\n     * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n     * a good choice.\n     *\n     * If the API you use is more callback then event handler oriented (subscribed\n     * callback function fires only once and thus there is no need to manually\n     * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n     * instead.\n     *\n     * `fromEvent` supports following types of event targets:\n     *\n     * **DOM EventTarget**\n     *\n     * This is an object with `addEventListener` and `removeEventListener` methods.\n     *\n     * In the browser, `addEventListener` accepts - apart from event type string and event\n     * handler function arguments - optional third parameter, which is either an object or boolean,\n     * both used for additional configuration how and when passed function will be called. When\n     * `fromEvent` is used with event target of that type, you can provide this values\n     * as third parameter as well.\n     *\n     * **Node.js EventEmitter**\n     *\n     * An object with `addListener` and `removeListener` methods.\n     *\n     * **JQuery-style event target**\n     *\n     * An object with `on` and `off` methods\n     *\n     * **DOM NodeList**\n     *\n     * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n     *\n     * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n     * it contains and install event handler function in every of them. When returned Observable\n     * is unsubscribed, function will be removed from all Nodes.\n     *\n     * **DOM HtmlCollection**\n     *\n     * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n     * installed and removed in each of elements.\n     *\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * // Results in:\n     * // MouseEvent object logged to console every time a click\n     * // occurs on the document.\n     *\n     *\n     * @example <caption>Use addEventListener with capture option</caption>\n     * var clicksInDocument = Rx.Observable.fromEvent(document, 'click', true); // note optional configuration parameter\n     *                                                                          // which will be passed to addEventListener\n     * var clicksInDiv = Rx.Observable.fromEvent(someDivInDocument, 'click');\n     *\n     * clicksInDocument.subscribe(() => console.log('document'));\n     * clicksInDiv.subscribe(() => console.log('div'));\n     *\n     * // By default events bubble UP in DOM tree, so normally\n     * // when we would click on div in document\n     * // \"div\" would be logged first and then \"document\".\n     * // Since we specified optional `capture` option, document\n     * // will catch event when it goes DOWN DOM tree, so console\n     * // will log \"document\" and then \"div\".\n     *\n     * @see {@link bindCallback}\n     * @see {@link bindNodeCallback}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOM EventTarget, Node.js\n     * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        } else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function unsubscribe() {\n                return source_1.removeEventListener(eventName, handler, options);\n            };\n        } else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function unsubscribe() {\n                return source_2.off(eventName, handler);\n            };\n        } else if (isNodeStyleEventEmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function unsubscribe() {\n                return source_3.removeListener(eventName, handler);\n            };\n        } else {\n            throw new TypeError('Invalid event target');\n        }\n        subscriber.add(new Subscription_Subscription(unsubscribe));\n    };\n    /** @deprecated internal use only */FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch(selector).apply(void 0, args);\n            if (result === errorObject) {\n                subscriber.error(errorObject.e);\n            } else {\n                subscriber.next(result);\n            }\n        } : function (e) {\n            return subscriber.next(e);\n        };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable_Observable);\n//# sourceMappingURL=FromEventObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/fromEvent.js\n/** PURE_IMPORTS_START ._FromEventObservable PURE_IMPORTS_END */\n\nvar fromEvent = FromEventObservable_FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/ScalarObservable.js\n/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\nvar ScalarObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ScalarObservable___extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done,\n            value = state.value,\n            subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        } else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_Observable);\n//# sourceMappingURL=ScalarObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/EmptyObservable.js\n/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\nvar EmptyObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    EmptyObservable___extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    /** @deprecated internal use only */EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        } else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_Observable);\n//# sourceMappingURL=EmptyObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isScheduler.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/ArrayObservable.js\n/** PURE_IMPORTS_START .._Observable,._ScalarObservable,._EmptyObservable,.._util_isScheduler PURE_IMPORTS_END */\nvar ArrayObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable_ArrayObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ArrayObservable___extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        } else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        } else if (len === 1) {\n            return new ScalarObservable(array[0], scheduler);\n        } else {\n            return new EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array,\n            index = state.index,\n            count = state.count,\n            subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        } else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_Observable);\n//# sourceMappingURL=ArrayObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/mergeMap.js\n/** PURE_IMPORTS_START .._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar mergeMap___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return function mergeMapOperatorFunction(source) {\n        if (typeof resultSelector === 'number') {\n            concurrent = resultSelector;\n            resultSelector = null;\n        }\n        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\n    };\n}\nvar MergeMapOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new mergeMap_MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar mergeMap_MergeMapSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    mergeMap___extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        } else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        } catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        } else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        } catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        } else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber);\n//# sourceMappingURL=mergeMap.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/identity.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/mergeAll.js\n/** PURE_IMPORTS_START ._mergeMap,.._util_identity PURE_IMPORTS_END */\n\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return mergeMap(identity, null, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/merge.js\n/** PURE_IMPORTS_START .._Observable,._ArrayObservable,.._util_isScheduler,.._operators_mergeAll PURE_IMPORTS_END */\n\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    } else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(new ArrayObservable_ArrayObservable(observables, scheduler));\n}\n//# sourceMappingURL=merge.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/map.js\n/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar map___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    map___extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        } catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=map.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/dom/AjaxObservable.js\n/** PURE_IMPORTS_START .._.._util_root,.._.._util_tryCatch,.._.._util_errorObject,.._.._Observable,.._.._Subscriber,.._.._operators_map PURE_IMPORTS_END */\nvar AjaxObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\nfunction getCORSRequest() {\n    if (root[\"a\" /* root */].XMLHttpRequest) {\n        return new root[\"a\" /* root */].XMLHttpRequest();\n    } else if (!!root[\"a\" /* root */].XDomainRequest) {\n        return new root[\"a\" /* root */].XDomainRequest();\n    } else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root[\"a\" /* root */].XMLHttpRequest) {\n        return new root[\"a\" /* root */].XMLHttpRequest();\n    } else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root[\"a\" /* root */].ActiveXObject(progId)) {\n                        break;\n                    }\n                } catch (e) {}\n            }\n            return new root[\"a\" /* root */].ActiveXObject(progId);\n        } catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nfunction ajaxGet(url, headers) {\n    if (headers === void 0) {\n        headers = null;\n    }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\n;\nfunction ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\n;\nfunction ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\n;\nfunction ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\n;\nfunction ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n}\n;\nvar mapResponse = /*@__PURE__*/map(function (x, index) {\n    return x.response;\n});\nfunction ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url: url,\n        responseType: 'json',\n        headers: headers\n    }));\n}\n;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar AjaxObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    AjaxObservable___extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        _super.call(this);\n        var request = {\n            async: true,\n            createXHR: function createXHR() {\n                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n            },\n            crossDomain: false,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        } else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    /** @deprecated internal use only */AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxObservable_AjaxSubscriber(subscriber, this.request);\n    };\n    /**\n     * Creates an observable for an Ajax request with either a request object with\n     * url, headers, etc or a string for a URL.\n     *\n     * @example\n     * source = Rx.Observable.ajax('/products');\n     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n     *\n     * @param {string|Object} request Can be one of the following:\n     *   A string of the URL to make the Ajax call.\n     *   An object with the following properties\n     *   - url: URL of the request\n     *   - body: The body of the request\n     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n     *   - async: Whether the request is async\n     *   - headers: Optional headers\n     *   - crossDomain: true if a cross domain request, else false\n     *   - createXHR: a function to override if you need to use an alternate\n     *   XMLHttpRequest implementation.\n     *   - resultSelector: a function to use to alter the output value type of\n     *   the Observable. Gets {@link AjaxResponse} as an argument.\n     * @return {Observable} An observable sequence containing the XMLHttpRequest.\n     * @static true\n     * @name ajax\n     * @owner Observable\n    */\n    AjaxObservable.create = function () {\n        var create = function create(urlOrRequest) {\n            return new AjaxObservable(urlOrRequest);\n        };\n        create.get = ajaxGet;\n        create.post = ajaxPost;\n        create.delete = ajaxDelete;\n        create.put = ajaxPut;\n        create.patch = ajaxPatch;\n        create.getJSON = ajaxGetJSON;\n        return create;\n    }();\n    return AjaxObservable;\n}(Observable_Observable);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AjaxObservable_AjaxSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    AjaxObservable___extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        _super.call(this, destination);\n        this.request = request;\n        this.done = false;\n        var headers = request.headers = request.headers || {};\n        // force CORS if requested\n        if (!request.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        // ensure content type is set\n        if (!('Content-Type' in headers) && !(root[\"a\" /* root */].FormData && request.body instanceof root[\"a\" /* root */].FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        // properly serialize body\n        request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n        this.send();\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this,\n            xhr = _a.xhr,\n            request = _a.request,\n            destination = _a.destination;\n        var response = new AjaxResponse(e, xhr, request);\n        destination.next(response);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this,\n            request = _a.request,\n            _b = _a.request,\n            user = _b.user,\n            method = _b.method,\n            url = _b.url,\n            async = _b.async,\n            password = _b.password,\n            headers = _b.headers,\n            body = _b.body;\n        var createXHR = request.createXHR;\n        var xhr = tryCatch(createXHR).call(request);\n        if (xhr === errorObject) {\n            this.error(errorObject.e);\n        } else {\n            this.xhr = xhr;\n            // set up the events before open XHR\n            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n            // You need to add the event listeners before calling open() on the request.\n            // Otherwise the progress events will not fire.\n            this.setupEvents(xhr, request);\n            // open XHR\n            var result = void 0;\n            if (user) {\n                result = tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n            } else {\n                result = tryCatch(xhr.open).call(xhr, method, url, async);\n            }\n            if (result === errorObject) {\n                this.error(errorObject.e);\n                return null;\n            }\n            // timeout, responseType and withCredentials can be set once the XHR is open\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            // set headers\n            this.setHeaders(xhr, headers);\n            // finally send the request\n            result = body ? tryCatch(xhr.send).call(xhr, body) : tryCatch(xhr.send).call(xhr);\n            if (result === errorObject) {\n                this.error(errorObject.e);\n                return null;\n            }\n        }\n        return xhr;\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        } else if (root[\"a\" /* root */].FormData && body instanceof root[\"a\" /* root */].FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) {\n                    return encodeURI(key) + \"=\" + encodeURI(body[key]);\n                }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            var _a = xhrTimeout,\n                subscriber = _a.subscriber,\n                progressSubscriber = _a.progressSubscriber,\n                request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n        }\n        ;\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                var _xhrProgress_;\n                _xhrProgress_ = function xhrProgress_1(e) {\n                    var progressSubscriber = _xhrProgress_.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                if (root[\"a\" /* root */].XDomainRequest) {\n                    xhr.onprogress = _xhrProgress_;\n                } else {\n                    xhr.upload.onprogress = _xhrProgress_;\n                }\n                _xhrProgress_.progressSubscriber = progressSubscriber;\n            }\n            var _xhrError_;\n            _xhrError_ = function xhrError_1(e) {\n                var _a = _xhrError_,\n                    progressSubscriber = _a.progressSubscriber,\n                    subscriber = _a.subscriber,\n                    request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                subscriber.error(new AjaxError('ajax error', this, request));\n            };\n            xhr.onerror = _xhrError_;\n            _xhrError_.request = request;\n            _xhrError_.subscriber = this;\n            _xhrError_.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            var _a = xhrReadyStateChange,\n                subscriber = _a.subscriber,\n                progressSubscriber = _a.progressSubscriber,\n                request = _a.request;\n            if (this.readyState === 4) {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = this.responseType === 'text' ? this.response || this.responseText : this.response;\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                if (200 <= status_1 && status_1 < 300) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                } else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n                }\n            }\n        }\n        ;\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this,\n            done = _a.done,\n            xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber_Subscriber);\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nvar AjaxResponse = /*@__PURE__*/ /*@__PURE__*/function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxResponse;\n}();\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nvar AjaxError = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    AjaxObservable___extends(AjaxError, _super);\n    function AjaxError(message, xhr, request) {\n        _super.call(this, message);\n        this.message = message;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxError;\n}(Error);\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            if ('response' in xhr) {\n                //IE does not support json as responseType, parse it internally\n                return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n            } else {\n                // HACK(benlesh): TypeScript shennanigans\n                // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n                return JSON.parse(xhr.responseText || 'null');\n            }\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            // HACK(benlesh): TypeScript shennanigans\n            // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n            return 'response' in xhr ? xhr.response : xhr.responseText;\n    }\n}\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nvar AjaxTimeoutError = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    AjaxObservable___extends(AjaxTimeoutError, _super);\n    function AjaxTimeoutError(xhr, request) {\n        _super.call(this, 'ajax timeout', xhr, request);\n    }\n    return AjaxTimeoutError;\n}(AjaxError);\n//# sourceMappingURL=AjaxObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/dom/ajax.js\n/** PURE_IMPORTS_START ._AjaxObservable PURE_IMPORTS_END */\n\nvar ajax = AjaxObservable.create;\n//# sourceMappingURL=ajax.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/catchError.js\n/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar catchError___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nfunction catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        var operator = new CatchOperator(selector);\n        var caught = source.lift(operator);\n        return operator.caught = caught;\n    };\n}\nvar CatchOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new catchError_CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar catchError_CatchSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    catchError___extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            } catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber);\n//# sourceMappingURL=catchError.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/tap.js\n/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar tap___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nfunction tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nvar DoOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new tap_DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar tap_DoSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    tap___extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber_Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        } else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        } else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        } else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=tap.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/distinctUntilChanged.js\n/** PURE_IMPORTS_START .._Subscriber,.._util_tryCatch,.._util_errorObject PURE_IMPORTS_END */\nvar distinctUntilChanged___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return function (source) {\n        return source.lift(new DistinctUntilChangedOperator(compare, keySelector));\n    };\n}\nvar DistinctUntilChangedOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new distinctUntilChanged_DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar distinctUntilChanged_DistinctUntilChangedSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    distinctUntilChanged___extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch(this.keySelector)(value);\n            if (key === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch(this.compare)(this.key, key);\n            if (result === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        } else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=distinctUntilChanged.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/filter.js\n/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar filter___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    filter___extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        } catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=filter.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/mapTo.js\n/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar mapTo___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo(value) {\n    return function (source) {\n        return source.lift(new MapToOperator(value));\n    };\n}\nvar MapToOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    mapTo___extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        _super.call(this, destination);\n        this.value = value;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=mapTo.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/not.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction not(pred, thisArg) {\n    function notPred() {\n        return !notPred.pred.apply(notPred.thisArg, arguments);\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\n//# sourceMappingURL=not.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/partition.js\n/** PURE_IMPORTS_START .._util_not,._filter PURE_IMPORTS_END */\n\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nfunction partition(predicate, thisArg) {\n    return function (source) {\n        return [filter(predicate, thisArg)(source), filter(not(predicate, thisArg))(source)];\n    };\n}\n//# sourceMappingURL=partition.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/pairwise.js\n/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar pairwise___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nfunction pairwise() {\n    return function (source) {\n        return source.lift(new PairwiseOperator());\n    };\n}\nvar PairwiseOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function PairwiseOperator() {}\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar PairwiseSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    pairwise___extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasPrev = false;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        } else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=pairwise.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/refCount.js\n/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar refCount___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nfunction refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nvar RefCountOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}();\nvar RefCountSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    refCount___extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    /** @deprecated internal use only */RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=refCount.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/ConnectableObservable.js\n/** PURE_IMPORTS_START .._Subject,.._Observable,.._Subscriber,.._Subscription,.._operators_refCount PURE_IMPORTS_END */\nvar ConnectableObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable_ConnectableObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ConnectableObservable___extends(ConnectableObservable, _super);\n    function ConnectableObservable( /** @deprecated internal use only */source,\n    /** @deprecated internal use only */subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        /** @deprecated internal use only */this._refCount = 0;\n        this._isComplete = false;\n    }\n    /** @deprecated internal use only */ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    /** @deprecated internal use only */ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_Subscription();\n            connection.add(this.source.subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_Subscription.EMPTY;\n            } else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable_Observable);\nvar connectableProto = ConnectableObservable_ConnectableObservable.prototype;\nvar connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ConnectableObservable___extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated internal use only */ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(SubjectSubscriber);\nvar ConnectableObservable_RefCountOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new ConnectableObservable_RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}();\nvar ConnectableObservable_RefCountSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ConnectableObservable___extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    /** @deprecated internal use only */RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=ConnectableObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/multicast.js\n/** PURE_IMPORTS_START .._observable_ConnectableObservable PURE_IMPORTS_END */\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        } else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar MulticastOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}();\n//# sourceMappingURL=multicast.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/share.js\n/** PURE_IMPORTS_START ._multicast,._refCount,.._Subject PURE_IMPORTS_END */\n\n\n\nfunction shareSubjectFactory() {\n    return new Subject_Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return function (source) {\n        return refCount()(multicast(shareSubjectFactory)(source));\n    };\n}\n;\n//# sourceMappingURL=share.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/of.js\n/** PURE_IMPORTS_START ._ArrayObservable PURE_IMPORTS_END */\n\nvar of = ArrayObservable_ArrayObservable.of;\n//# sourceMappingURL=of.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/PromiseObservable.js\n/** PURE_IMPORTS_START .._util_root,.._Observable PURE_IMPORTS_END */\nvar PromiseObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PromiseObservable_PromiseObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    PromiseObservable___extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {PromiseLike<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    /** @deprecated internal use only */PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            } else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                }).then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root[\"a\" /* root */].setTimeout(function () {\n                        throw err;\n                    });\n                });\n            }\n        } else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            } else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                }).then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root[\"a\" /* root */].setTimeout(function () {\n                        throw err;\n                    });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable_Observable);\nfunction dispatchNext(arg) {\n    var value = arg.value,\n        subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err,\n        subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/IteratorObservable.js\n/** PURE_IMPORTS_START .._util_root,.._Observable,.._symbol_iterator PURE_IMPORTS_END */\nvar IteratorObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IteratorObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    IteratorObservable___extends(IteratorObservable, _super);\n    function IteratorObservable(iterator, scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n        if (iterator == null) {\n            throw new Error('iterator cannot be null.');\n        }\n        this.iterator = getIterator(iterator);\n    }\n    IteratorObservable.create = function (iterator, scheduler) {\n        return new IteratorObservable(iterator, scheduler);\n    };\n    IteratorObservable.dispatch = function (state) {\n        var index = state.index,\n            hasError = state.hasError,\n            iterator = state.iterator,\n            subscriber = state.subscriber;\n        if (hasError) {\n            subscriber.error(state.error);\n            return;\n        }\n        var result = iterator.next();\n        if (result.done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(result.value);\n        state.index = index + 1;\n        if (subscriber.closed) {\n            if (typeof iterator.return === 'function') {\n                iterator.return();\n            }\n            return;\n        }\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */IteratorObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this,\n            iterator = _a.iterator,\n            scheduler = _a.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\n                index: index, iterator: iterator, subscriber: subscriber\n            });\n        } else {\n            do {\n                var result = iterator.next();\n                if (result.done) {\n                    subscriber.complete();\n                    break;\n                } else {\n                    subscriber.next(result.value);\n                }\n                if (subscriber.closed) {\n                    if (typeof iterator.return === 'function') {\n                        iterator.return();\n                    }\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return IteratorObservable;\n}(Observable_Observable);\nvar IteratorObservable_StringIterator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function StringIterator(str, idx, len) {\n        if (idx === void 0) {\n            idx = 0;\n        }\n        if (len === void 0) {\n            len = str.length;\n        }\n        this.str = str;\n        this.idx = idx;\n        this.len = len;\n    }\n    StringIterator.prototype[iterator_iterator] = function () {\n        return this;\n    };\n    StringIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.str.charAt(this.idx++)\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return StringIterator;\n}();\nvar IteratorObservable_ArrayIterator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function ArrayIterator(arr, idx, len) {\n        if (idx === void 0) {\n            idx = 0;\n        }\n        if (len === void 0) {\n            len = toLength(arr);\n        }\n        this.arr = arr;\n        this.idx = idx;\n        this.len = len;\n    }\n    ArrayIterator.prototype[iterator_iterator] = function () {\n        return this;\n    };\n    ArrayIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return ArrayIterator;\n}();\nfunction getIterator(obj) {\n    var i = obj[iterator_iterator];\n    if (!i && typeof obj === 'string') {\n        return new IteratorObservable_StringIterator(obj);\n    }\n    if (!i && obj.length !== undefined) {\n        return new IteratorObservable_ArrayIterator(obj);\n    }\n    if (!i) {\n        throw new TypeError('object is not iterable');\n    }\n    return obj[iterator_iterator]();\n}\nvar maxSafeInteger = /*@__PURE__*/Math.pow(2, 53) - 1;\nfunction toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) {\n        return 0;\n    }\n    if (len === 0 || !numberIsFinite(len)) {\n        return len;\n    }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) {\n        return 0;\n    }\n    if (len > maxSafeInteger) {\n        return maxSafeInteger;\n    }\n    return len;\n}\nfunction numberIsFinite(value) {\n    return typeof value === 'number' && root[\"a\" /* root */].isFinite(value);\n}\nfunction sign(value) {\n    var valueAsNumber = +value;\n    if (valueAsNumber === 0) {\n        return valueAsNumber;\n    }\n    if (isNaN(valueAsNumber)) {\n        return valueAsNumber;\n    }\n    return valueAsNumber < 0 ? -1 : 1;\n}\n//# sourceMappingURL=IteratorObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/ArrayLikeObservable.js\n/** PURE_IMPORTS_START .._Observable,._ScalarObservable,._EmptyObservable PURE_IMPORTS_END */\nvar ArrayLikeObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayLikeObservable_ArrayLikeObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ArrayLikeObservable___extends(ArrayLikeObservable, _super);\n    function ArrayLikeObservable(arrayLike, scheduler) {\n        _super.call(this);\n        this.arrayLike = arrayLike;\n        this.scheduler = scheduler;\n        if (!scheduler && arrayLike.length === 1) {\n            this._isScalar = true;\n            this.value = arrayLike[0];\n        }\n    }\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\n        var length = arrayLike.length;\n        if (length === 0) {\n            return new EmptyObservable();\n        } else if (length === 1) {\n            return new ScalarObservable(arrayLike[0], scheduler);\n        } else {\n            return new ArrayLikeObservable(arrayLike, scheduler);\n        }\n    };\n    ArrayLikeObservable.dispatch = function (state) {\n        var arrayLike = state.arrayLike,\n            index = state.index,\n            length = state.length,\n            subscriber = state.subscriber;\n        if (subscriber.closed) {\n            return;\n        }\n        if (index >= length) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(arrayLike[index]);\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this,\n            arrayLike = _a.arrayLike,\n            scheduler = _a.scheduler;\n        var length = arrayLike.length;\n        if (scheduler) {\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\n            });\n        } else {\n            for (var i = 0; i < length && !subscriber.closed; i++) {\n                subscriber.next(arrayLike[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayLikeObservable;\n}(Observable_Observable);\n//# sourceMappingURL=ArrayLikeObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/FromObservable.js\nvar FromObservable__typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/** PURE_IMPORTS_START .._util_isArray,.._util_isArrayLike,.._util_isPromise,._PromiseObservable,._IteratorObservable,._ArrayObservable,._ArrayLikeObservable,.._symbol_iterator,.._Observable,.._operators_observeOn,.._symbol_observable PURE_IMPORTS_END */\nvar FromObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromObservable_FromObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    FromObservable___extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        _super.call(this, null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 10 20 30\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 3 6 12 24 48 96 192 384 768 1536\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[observable_observable] === 'function') {\n                if (ish instanceof Observable_Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            } else if (isArray(ish)) {\n                return new ArrayObservable_ArrayObservable(ish, scheduler);\n            } else if (isPromise(ish)) {\n                return new PromiseObservable_PromiseObservable(ish, scheduler);\n            } else if (typeof ish[iterator_iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable(ish, scheduler);\n            } else if (isArrayLike(ish)) {\n                return new ArrayLikeObservable_ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && (typeof ish === 'undefined' ? 'undefined' : FromObservable__typeof(ish)) || ish) + ' is not observable');\n    };\n    /** @deprecated internal use only */FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[observable_observable]().subscribe(subscriber);\n        } else {\n            return ish[observable_observable]().subscribe(new observeOn_ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable_Observable);\n//# sourceMappingURL=FromObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/from.js\n/** PURE_IMPORTS_START ._FromObservable PURE_IMPORTS_END */\n\nvar from = FromObservable_FromObservable.create;\n//# sourceMappingURL=from.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/concatAll.js\n/** PURE_IMPORTS_START ._mergeAll PURE_IMPORTS_END */\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll() {\n  return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/concat.js\n/** PURE_IMPORTS_START .._util_isScheduler,._of,._from,.._operators_concatAll PURE_IMPORTS_END */\n\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    if (observables.length === 1 || observables.length === 2 && isScheduler(observables[1])) {\n        return from(observables[0]);\n    }\n    return concatAll()(of.apply(void 0, observables));\n}\n//# sourceMappingURL=concat.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/startWith.js\n/** PURE_IMPORTS_START .._observable_ArrayObservable,.._observable_ScalarObservable,.._observable_EmptyObservable,.._observable_concat,.._util_isScheduler PURE_IMPORTS_END */\n\n\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        } else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len === 1) {\n            return concat(new ScalarObservable(array[0], scheduler), source);\n        } else if (len > 1) {\n            return concat(new ArrayObservable_ArrayObservable(array, scheduler), source);\n        } else {\n            return concat(new EmptyObservable(scheduler), source);\n        }\n    };\n}\n//# sourceMappingURL=startWith.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/switchMap.js\n/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar switchMap___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return function switchMapOperatorFunction(source) {\n        return source.lift(new SwitchMapOperator(project, resultSelector));\n    };\n}\nvar SwitchMapOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new switchMap_SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar switchMap_SwitchMapSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    switchMap___extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        } catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    /** @deprecated internal use only */SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        } else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        } catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber);\n//# sourceMappingURL=switchMap.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/withLatestFrom.js\n/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar withLatestFrom___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        var observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nvar WithLatestFromOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new withLatestFrom_WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar withLatestFrom_WithLatestFromSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    withLatestFrom___extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        _super.call(this, destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        var len = observables.length;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            this.add(subscribeToResult(this, observable, observable, i));\n        }\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            } else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        } catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber);\n//# sourceMappingURL=withLatestFrom.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/NeverObservable.js\n/** PURE_IMPORTS_START .._Observable,.._util_noop PURE_IMPORTS_END */\nvar NeverObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar NeverObservable_NeverObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    NeverObservable___extends(NeverObservable, _super);\n    function NeverObservable() {\n        _super.call(this);\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer.\n     *\n     * <span class=\"informal\">An Observable that never emits anything.</span>\n     *\n     * <img src=\"./img/never.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that emits\n     * neither values nor errors nor the completion notification. It can be used\n     * for testing purposes or for composing with other Observables. Please note\n     * that by never emitting a complete notification, this Observable keeps the\n     * subscription from being disposed automatically. Subscriptions need to be\n     * manually disposed.\n     *\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n     * function info() {\n     *   console.log('Will not be called');\n     * }\n     * var result = Rx.Observable.never().startWith(7);\n     * result.subscribe(x => console.log(x), info, info);\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @return {Observable} A \"never\" Observable: never emits anything.\n     * @static true\n     * @name never\n     * @owner Observable\n     */\n    NeverObservable.create = function () {\n        return new NeverObservable();\n    };\n    /** @deprecated internal use only */NeverObservable.prototype._subscribe = function (subscriber) {\n        noop();\n    };\n    return NeverObservable;\n}(Observable_Observable);\n//# sourceMappingURL=NeverObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/never.js\n/** PURE_IMPORTS_START ._NeverObservable PURE_IMPORTS_END */\n\nvar never = NeverObservable_NeverObservable.create;\n//# sourceMappingURL=never.js.map\n// CONCATENATED MODULE: ./src/mixin/operators.js\n// # src / mixin / operators.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n\n// ### Observable extensions\n// #### Unsubscribe when\n// This operator unsubscribes from the source observable when `pauser$` emits a truthy value,\n// and re-subscribes when it emits a falsy value.\nvar operators_unsubscribeWhen = function unsubscribeWhen(pauser$) {\n  return function (source) {\n    if (false) throw Error();\n    return pauser$.pipe(switchMap(function (paused) {\n      return paused ? never() : source;\n    }));\n  };\n};\n\n// #### Custom subscribe\n// A custom subscribe function that will `recover` from an error and log it to the console.\n// This is a line of last defense to make sure the entire pipeline/page doesn't crash.\n/*\nfunction subscribe(ne, er, co) {\n  let res = this;\n  if (process.env.DEBUG) res = this.pipe(tap({ error: e => console.error(e) }));\n  return res\n    .pipe(catchError((e, c) => c))\n    .subscribe(ne, er, co);\n}\n*/\n// CONCATENATED MODULE: ./src/mixin/methods.js\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar methods__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction methods__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction methods__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction methods__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / methods.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n\n\n// ## Functions\n// What you will notice about the following helper functions is that many make reference to `this`.\n// This is because they are invoked with the `::` operator, binding `this` to the component,\n// effectively turning them into (private) methods. Since the final export is a mixin,\n// we want to avoid potentially conflicting names as much as possible.\n\nvar methods_helperMixin = function helperMixin(C) {\n  return function (_C) {\n    methods__inherits(_class, _C);\n\n    function _class() {\n      methods__classCallCheck(this, _class);\n\n      return methods__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    methods__createClass(_class, [{\n      key: \"histId\",\n\n      // Returns an identifier to mark frames on the history stack.\n      value: function histId() {\n        return this.el.id || this.constructor.componentName;\n      }\n\n      // ### Event filters\n\n    }, {\n      key: \"shouldLoadAnchor\",\n      value: function shouldLoadAnchor(anchor, hrefRegex) {\n        return anchor && anchor.target === \"\" && (!hrefRegex || anchor.href.search(hrefRegex) !== -1);\n      }\n    }, {\n      key: \"isPushEvent\",\n      value: function isPushEvent(_ref) {\n        var url = _ref.url,\n            anchor = _ref.anchor,\n            _ref$event = _ref.event,\n            metaKey = _ref$event.metaKey,\n            ctrlKey = _ref$event.ctrlKey;\n\n        return !metaKey && !ctrlKey && this.shouldLoadAnchor(anchor, this.hrefRegex) && !isExternal(url, this);\n      }\n    }, {\n      key: \"isHintEvent\",\n      value: function isHintEvent(_ref2) {\n        var url = _ref2.url,\n            anchor = _ref2.anchor;\n\n        return this.shouldLoadAnchor(anchor, this.hrefRegex) && !isExternal(url, this) && !isHash(url, this);\n      }\n\n      // Determines if a pair of context's constitutes a hash change (vs. a page chagne)\n      // We take as a hash change when the pathname of the URLs is the same,\n      // and the `hash` isn't empty.\n\n    }, {\n      key: \"isHashChange\",\n      value: function isHashChange(_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            prevPathname = _ref4[0].url.pathname,\n            _ref4$ = _ref4[1],\n            _ref4$$url = _ref4$.url,\n            pathname = _ref4$$url.pathname,\n            hash = _ref4$$url.hash,\n            type = _ref4$.type;\n\n        return pathname === prevPathname && (type === POP || type === PUSH && hash !== \"\");\n      }\n    }]);\n\n    return _class;\n  }(C);\n};\n// CONCATENATED MODULE: ./src/mixin/scrolling.js\nvar scrolling__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction scrolling__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction scrolling__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction scrolling__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / scrolling.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n\n// ### Managing scroll positions\n// The following functions deal with managing the scroll position of the site.\n\nvar scrolling_scrollMixin = function scrollMixin(C) {\n  return function (_C) {\n    scrolling__inherits(_class, _C);\n\n    function _class() {\n      scrolling__classCallCheck(this, _class);\n\n      return scrolling__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    scrolling__createClass(_class, [{\n      key: \"scrollHashIntoView\",\n\n      // Given a hash, find the element of the same id on the page, and scroll it into view.\n      // If no hash is provided, scroll to the top instead.\n      value: function scrollHashIntoView(hash) {\n        if (hash) {\n          var el = document.getElementById(hash.substr(1));\n          if (el) el.scrollIntoView();else if (false) console.warn(\"Can't find element with id \" + hash);\n        } else window.scroll(window.pageXOffset, 0);\n      }\n\n      // Takes the current history state, and restores the scroll position.\n\n    }, {\n      key: \"restoreScrollPostion\",\n      value: function restoreScrollPostion() {\n        var id = this.histId(); // TODO\n        var state = window.history.state && window.history.state[id] || {};\n\n        // If the user has already moved the scroll position, we don't want to force the old position\n        var userHasScrolled = getScrollTop() != 0;\n        if (state.scrollTop != null && !userHasScrolled) {\n          // TODO: we set the min-height to ensure that we can scroll to the position that will\n          // eventually be occupied by the same content as before.\n          document.body.style.minHeight = state.scrollHeight;\n          window.scroll(window.pageXOffset, state.scrollTop);\n          /* document.body.style.minHeight = ''; */\n        } else if (state.hash) {\n          this.scrollHashIntoView(window.location.hash);\n        }\n      }\n\n      // TODO\n\n    }, {\n      key: \"manageScrollPostion\",\n      value: function manageScrollPostion(_ref) {\n        var type = _ref.type,\n            hash = _ref.url.hash;\n\n        if (type === PUSH) {\n          this.scrollHashIntoView(hash);\n        }\n\n        if (type === POP && this.scrollRestoration) {\n          this.restoreScrollPostion();\n        }\n      }\n    }, {\n      key: \"saveScrollPosition\",\n      value: function saveScrollPosition(state) {\n        var id = this.histId();\n        return Object.assign(state, _defineProperty({}, id, Object.assign(state[id] || {}, {\n          scrollTop: getScrollTop(),\n          scrollHeight: getScrollHeight()\n        })));\n      }\n    }]);\n\n    return _class;\n  }(C);\n};\n// CONCATENATED MODULE: ./src/mixin/history.js\nvar history__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction history__defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction history__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction history__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction history__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / history.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// ## Overview\n// This file contains helper funtions related to managing the History API.\n\n// ## Imports\n\n\n\n\n\nvar history_historyMixin = function historyMixin(C) {\n  return function (_scrollMixin) {\n    history__inherits(_class, _scrollMixin);\n\n    function _class() {\n      history__classCallCheck(this, _class);\n\n      return history__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    history__createClass(_class, [{\n      key: \"updateHistoryState\",\n\n      // ## Update History state\n      // add a new entry on the history stack, assuming the href is differnt.\n      value: function updateHistoryState(_ref) {\n        var type = _ref.type,\n            replace = _ref.replace,\n            _ref$url = _ref.url,\n            href = _ref$url.href,\n            hash = _ref$url.hash;\n\n        if ((type === PUSH || type === INIT) && !isExternal(this)) {\n          var id = this.histId();\n          var method = replace || href === window.location.href ? \"replaceState\" : \"pushState\";\n          var state = Object.assign(window.history.state || {}, history__defineProperty({}, id, { hash: !!hash }));\n          window.history[method](state, document.title, href);\n        }\n      }\n    }, {\n      key: \"updateHistoryStateHash\",\n      value: function updateHistoryStateHash(_ref2) {\n        var type = _ref2.type,\n            url = _ref2.url;\n        var hash = url.hash,\n            href = url.href;\n\n\n        if (type === PUSH && !isExternal(this)) {\n          var id = this.histId();\n          var currState = Object.assign(window.history.state, history__defineProperty({}, id, Object.assign(window.history.state[id], { hash: true })));\n          var nextState = history__defineProperty({}, id, { hash: true });\n          window.history.replaceState(currState, document.title, window.location.href);\n          window.history.pushState(nextState, document.title, href);\n        }\n\n        this.scrollHashIntoView(hash);\n      }\n    }, {\n      key: \"updateHistoryTitle\",\n      value: function updateHistoryTitle(_ref3) {\n        var type = _ref3.type,\n            title = _ref3.title;\n\n        document.title = title;\n\n        if (type === PUSH && !isExternal(this)) {\n          window.history.replaceState(window.history.state, title, window.location);\n        }\n      }\n    }, {\n      key: \"saveScrollHistoryState\",\n      value: function saveScrollHistoryState() {\n        if (isExternal(this)) return;\n\n        var state = this.saveScrollPosition(window.history.state || {});\n        window.history.replaceState(state, document.title, window.location);\n      }\n    }]);\n\n    return _class;\n  }(scrolling_scrollMixin(C));\n};\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/ArgumentOutOfRangeError.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar ArgumentOutOfRangeError___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ArgumentOutOfRangeError___extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var err = _super.call(this, 'argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ArgumentOutOfRangeError;\n}(Error);\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/take.js\n/** PURE_IMPORTS_START .._Subscriber,.._util_ArgumentOutOfRangeError,.._observable_EmptyObservable PURE_IMPORTS_END */\nvar take___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take(count) {\n    return function (source) {\n        if (count === 0) {\n            return new EmptyObservable();\n        } else {\n            return source.lift(new take_TakeOperator(count));\n        }\n    };\n}\nvar take_TakeOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError();\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    take___extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=take.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/zip.js\n/** PURE_IMPORTS_START .._observable_ArrayObservable,.._util_isArray,.._Subscriber,.._OuterSubscriber,.._util_subscribeToResult,.._symbol_iterator PURE_IMPORTS_END */\nvar zip___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n    };\n}\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nfunction zipStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = observables[observables.length - 1];\n    if (typeof project === 'function') {\n        observables.pop();\n    }\n    return new ArrayObservable_ArrayObservable(observables).lift(new ZipOperator(project));\n}\nvar ZipOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function ZipOperator(project) {\n        this.project = project;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new zip_ZipSubscriber(subscriber, this.project));\n    };\n    return ZipOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar zip_ZipSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    zip___extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, project, values) {\n        if (values === void 0) {\n            values = Object.create(null);\n        }\n        _super.call(this, destination);\n        this.iterators = [];\n        this.active = 0;\n        this.project = typeof project === 'function' ? project : null;\n        this.values = values;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new zip_StaticArrayIterator(value));\n        } else if (typeof value[iterator_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[iterator_iterator]()));\n        } else {\n            iterators.push(new zip_ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            } else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.project) {\n            this._tryProject(args);\n        } else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        } catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber_Subscriber);\nvar StaticIterator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}();\nvar zip_StaticArrayIterator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[iterator_iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar zip_ZipBufferIterator = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    zip___extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        _super.call(this, destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    ZipBufferIterator.prototype[iterator_iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        } else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        } else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber);\n//# sourceMappingURL=zip.js.map\n// CONCATENATED MODULE: ./src/mixin/fetching.js\nvar fetching__slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar fetching__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction fetching__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction fetching__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction fetching__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / fetching.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// ## Overview\n// This file contains helper functions related to fetching new content.\n\n// ## Imports\n\n\n\n\n\n\nvar fetching_fetchMixin = function fetchMixin(C) {\n  return function (_C) {\n    fetching__inherits(_class, _C);\n\n    function _class() {\n      fetching__classCallCheck(this, _class);\n\n      return fetching__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    fetching__createClass(_class, [{\n      key: \"recoverIfResponse\",\n\n      // ## Fetching\n      // The `ajax` method will throw when it encoutners an a 400+ status code,\n      // however these are still valid responses from the server that can be shown using this component.\n      // This assumes error pages have the same HTML strcuture as the other pages though.\n      value: function recoverIfResponse(context, error) {\n        var status = error.status,\n            xhr = error.xhr;\n\n        // If we have a response, recover and continue with the pipeline.\n\n        if (xhr && xhr.response && status > 400) {\n          return of(Object.assign(context, { response: xhr.response }));\n        }\n\n        // If we don't have a response, this is an acutal error that should be dealt with.\n        return of(Object.assign(context, { error: error }));\n      }\n\n      // This function returns the request that matches a given URL.\n      // The way the pipeline is set up,\n      // it is either the `latestPrefetch` value (when the request is already completed),\n      // or the next value on the prefetch observable (when still in progress).\n\n    }, {\n      key: \"getFetch$\",\n      value: function getFetch$(_ref, latestPrefetch, prefetch$) {\n        var href = _ref.url.href;\n\n        return href === latestPrefetch.url.href && latestPrefetch.error == null ? of(latestPrefetch) : prefetch$.pipe(take(1));\n      }\n\n      // Returns an observable that emits exactly one notice, which contains the response.\n      // It will not emit until an (optional) page transition animation completes.\n\n    }, {\n      key: \"getResponse\",\n      value: function getResponse(prefetch$, _ref2) {\n        var _ref3 = fetching__slicedToArray(_ref2, 2),\n            context = _ref3[0],\n            latestPrefetch = _ref3[1];\n\n        return this.getFetch$(context, latestPrefetch, prefetch$).pipe(map(function (fetch) {\n          return Object.assign(fetch, context);\n        }), zip(this.animPromise, function (x) {\n          return x;\n        }));\n      }\n    }]);\n\n    return _class;\n  }(C);\n};\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/concatMap.js\n/** PURE_IMPORTS_START ._mergeMap PURE_IMPORTS_END */\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap(project, resultSelector) {\n  return mergeMap(project, resultSelector, 1);\n}\n//# sourceMappingURL=concatMap.js.map\n// CONCATENATED MODULE: ./src/mixin/script-hack.js\nvar script_hack__slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar script_hack__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction script_hack__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction script_hack__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction script_hack__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / script-hack.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n// Importing the subset of RxJS functions that we are going to use.\n\n\n\n\n\n\n\n// ### Experimental script feature\n// TODO\nvar script_hack_scriptMixin = function scriptMixin(C) {\n  return function (_C) {\n    script_hack__inherits(_class, _C);\n\n    function _class() {\n      script_hack__classCallCheck(this, _class);\n\n      return script_hack__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    script_hack__createClass(_class, [{\n      key: \"tempRemoveScriptTags\",\n\n      // This function removes all script tags (as query'ed by `scriptSelector`) from the response.\n      value: function tempRemoveScriptTags(replaceEls) {\n        var _this2 = this;\n\n        var scripts = [];\n\n        replaceEls.forEach(function (docfrag) {\n          return Array.from(docfrag.querySelectorAll(_this2.scriptSelector)).forEach(function (script) {\n            var pair = [script, script.previousSibling];\n            script.parentNode.removeChild(script);\n            scripts.push(pair);\n          });\n        });\n\n        return scripts;\n      }\n\n      // Attempts to (synchronously) insert a `script` tag into the DOM, *before* a given `ref` element.\n\n    }, {\n      key: \"insertScript\",\n      value: function insertScript(_ref) {\n        var _ref2 = script_hack__slicedToArray(_ref, 2),\n            script = _ref2[0],\n            ref = _ref2[1];\n\n        // Temporarily overwrite `document.wirte` to simulate its behavior during the initial load.\n        // This only works because scripts are inserted one-at-a-time (via `concatMap`).\n        var originalWrite = document.write;\n\n        document.write = function () {\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var temp = document.createElement(\"div\");\n          temp.innerHTML = args.join();\n          Array.from(temp.childNodes).forEach(function (node) {\n            ref.parentNode.insertBefore(node, ref.nextSibling);\n          });\n        };\n\n        // If the script tag needs to fetch its source code, we insert it into the DOM,\n        // but we return an observable that only completes once the script has fired its `load` event.\n        return script.src !== \"\" ? Observable_Observable.create(function (observer) {\n          script.addEventListener(\"load\", function (x) {\n            document.write = originalWrite;\n            observer.complete(x);\n          });\n\n          script.addEventListener(\"error\", function (x) {\n            document.write = originalWrite;\n            observer.error(x);\n          });\n\n          ref.parentNode.insertBefore(script, ref.nextSibling);\n        }) : // Otherwise we insert it into the DOM and reset the `document.write` function.\n        of({}).pipe(tap(function () {\n          ref.parentNode.insertBefore(script, ref.nextSibling);\n          document.write = originalWrite;\n        }));\n      }\n\n      // Takes a list of `script`--`ref` pairs, and inserts them into the DOM one-by-one.\n\n    }, {\n      key: \"reinsertScriptTags\",\n      value: function reinsertScriptTags(context) {\n        if (!this.scriptSelector) return of(context);\n\n        var scripts = context.scripts;\n\n\n        return from(scripts).pipe(concatMap(this.insertScript.bind(this)), catchError(function (error) {\n          throw Object.assign(context, { error: error });\n        })).toPromise().then(function () {\n          return context;\n        });\n      }\n    }]);\n\n    return _class;\n  }(C);\n};\n// CONCATENATED MODULE: ./src/mixin/update.js\nvar update__slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar update__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction update__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction update__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction update__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / update.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n\n\nvar update_updateMixin = function updateMixin(C) {\n  return function (_scriptMixin) {\n    update__inherits(_class, _scriptMixin);\n\n    function _class() {\n      update__classCallCheck(this, _class);\n\n      return update__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    update__createClass(_class, [{\n      key: \"getTitle\",\n\n      // Extracts the title of the page\n      value: function getTitle(fragment) {\n        return (fragment.querySelector(\"title\") || {}).textContent;\n      }\n\n      // Extracts the elements to be replaced\n\n    }, {\n      key: \"getReplaceElements\",\n      value: function getReplaceElements(fragment) {\n        if (this.replaceIds.length > 0) {\n          return this.replaceIds.map(function (id) {\n            return fragment.getElementById(id);\n          });\n        } else if (this.el.id) {\n          return [fragment.getElementById(this.el.id)];\n        } else {\n          var index = Array.from(document.getElementsByTagName(this.el.tagName)).indexOf(this.el);\n          return [fragment.querySelectorAll(this.el.tagName)[index]];\n        }\n      }\n\n      // Takes the response string and turns it into document fragments\n      // that can be inserted into the DOM.\n\n    }, {\n      key: \"responseToContent\",\n      value: function responseToContent(context) {\n        var response = context.response;\n\n\n        var fragment = fragmentFromString(response);\n        var title = this.getTitle(fragment);\n        var replaceEls = this.getReplaceElements(fragment);\n\n        if (replaceEls.some(function (x) {\n          return x == null;\n        })) {\n          throw Object.assign(context, { replaceElMissing: true });\n        }\n\n        var scripts = this.scriptSelector ? this.tempRemoveScriptTags(replaceEls) : [];\n\n        return Object.assign(context, { title: title, replaceEls: replaceEls, scripts: scripts });\n      }\n\n      // Replaces the old elments with the new one, one-by-one.\n\n    }, {\n      key: \"replaceContentByIds\",\n      value: function replaceContentByIds(elements) {\n        this.replaceIds.map(function (id) {\n          return document.getElementById(id);\n        }).forEach(function (oldElement, i) {\n          oldElement.parentNode.replaceChild(elements[i], oldElement);\n        });\n      }\n\n      // When no `relaceIds` are set, replace the entire content of the component (slow).\n\n    }, {\n      key: \"replaceContentWholesale\",\n      value: function replaceContentWholesale(_ref) {\n        var _ref2 = update__slicedToArray(_ref, 1),\n            el = _ref2[0];\n\n        this.el.innerHTML = el.innerHTML;\n      }\n\n      // TODO: doc\n\n    }, {\n      key: \"replaceContent\",\n      value: function replaceContent(replaceEls) {\n        if (this.replaceIds.length > 0) {\n          this.replaceContentByIds(replaceEls);\n        } else {\n          this.replaceContentWholesale(replaceEls);\n        }\n      }\n\n      // TODO: doc\n\n    }, {\n      key: \"updateDOM\",\n      value: function updateDOM(context) {\n        try {\n          var replaceEls = context.replaceEls;\n\n          this.updateHistoryTitle(context);\n          if (isExternal(this)) this.rewriteURLs(replaceEls);\n          this.replaceContent(replaceEls);\n        } catch (error) {\n          throw Object.assign(context, { error: error });\n        }\n      }\n\n      // When fetching documents from an external source,\n      // relative URLs will be resolved relative to the current `window.location`.\n      // We can rewrite URL to absolute urls\n\n    }, {\n      key: \"rewriteURLs\",\n      value: function rewriteURLs(replaceEls) {\n        var _this2 = this;\n\n        replaceEls.forEach(function (el) {\n          /* console.time(); */\n          el.querySelectorAll(\"[href]\").forEach(_this2.rewriteURL(\"href\"));\n          el.querySelectorAll(\"[src]\").forEach(_this2.rewriteURL(\"src\"));\n          el.querySelectorAll(\"img[srcset]\").forEach(_this2.rewriteURLSrcSet(\"srcset\"));\n          el.querySelectorAll(\"blockquote[cite]\").forEach(_this2.rewriteURL(\"cite\"));\n          el.querySelectorAll(\"del[cite]\").forEach(_this2.rewriteURL(\"cite\"));\n          el.querySelectorAll(\"ins[cite]\").forEach(_this2.rewriteURL(\"cite\"));\n          el.querySelectorAll(\"q[cite]\").forEach(_this2.rewriteURL(\"cite\"));\n          el.querySelectorAll(\"img[longdesc]\").forEach(_this2.rewriteURL(\"longdesc\"));\n          el.querySelectorAll(\"frame[longdesc]\").forEach(_this2.rewriteURL(\"longdesc\"));\n          el.querySelectorAll(\"iframe[longdesc]\").forEach(_this2.rewriteURL(\"longdesc\"));\n          el.querySelectorAll(\"img[usemap]\").forEach(_this2.rewriteURL(\"usemap\"));\n          el.querySelectorAll(\"input[usemap]\").forEach(_this2.rewriteURL(\"usemap\"));\n          el.querySelectorAll(\"object[usemap]\").forEach(_this2.rewriteURL(\"usemap\"));\n          el.querySelectorAll(\"form[action]\").forEach(_this2.rewriteURL(\"action\"));\n          el.querySelectorAll(\"button[formaction]\").forEach(_this2.rewriteURL(\"formaction\"));\n          el.querySelectorAll(\"input[formaction]\").forEach(_this2.rewriteURL(\"formaction\"));\n          el.querySelectorAll(\"video[poster]\").forEach(_this2.rewriteURL(\"poster\"));\n          el.querySelectorAll(\"object[data]\").forEach(_this2.rewriteURL(\"data\"));\n          el.querySelectorAll(\"object[codebase]\").forEach(_this2.rewriteURL(\"codebase\"));\n          el.querySelectorAll(\"object[archive]\").forEach(_this2.rewriteURLList(\"archive\"));\n          /* console.timeEnd(); */\n          /* el.querySelectorAll(\"command[icon]\").forEach(this.rewriteURL(\"icon\")); */ // obsolte\n        });\n      }\n    }, {\n      key: \"rewriteURL\",\n      value: function rewriteURL(attr) {\n        var _this3 = this;\n\n        return function (el) {\n          try {\n            el.setAttribute(attr, new URL(el.getAttribute(attr), _this3.href).href);\n          } catch (e) {\n            if (false) console.warn(\"Couldn't rewrite URL in attribute \" + attr + \" on element\", el);\n          }\n        };\n      }\n    }, {\n      key: \"rewriteURLSrcSet\",\n      value: function rewriteURLSrcSet(attr) {\n        var _this4 = this;\n\n        return function (el) {\n          try {\n            el.setAttribute(attr, el.getAttribute(attr).split(/\\s*,\\s*/).map(function (str) {\n              var pair = str.split(/\\s+/);\n              pair[0] = new URL(pair[0], _this4.href).href;\n              return pair.join(\" \");\n            }).join(\", \"));\n          } catch (e) {\n            if (false) console.warn(\"Couldn't rewrite URLs in attribute \" + attr + \" on element\", el);\n          }\n        };\n      }\n    }, {\n      key: \"rewriteURLList\",\n      value: function rewriteURLList(attr) {\n        var _this5 = this;\n\n        return function (el) {\n          try {\n            el.setAttribute(attr, el.getAttribute(attr).split(/[\\s,]+/).map(function (str) {\n              return new URL(str, _this5.href).href;\n            }).join(\", \"));\n          } catch (e) {\n            if (false) console.warn(\"Couldn't rewrite URLs in attribute \" + attr + \" on element\", el);\n          }\n        };\n      }\n    }]);\n\n    return _class;\n  }(script_hack_scriptMixin(C));\n};\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isNumeric.js\n/** PURE_IMPORTS_START .._util_isArray PURE_IMPORTS_END */\n\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray(val) && val - parseFloat(val) + 1 >= 0;\n}\n;\n//# sourceMappingURL=isNumeric.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/scheduler/async.js\n/** PURE_IMPORTS_START ._AsyncAction,._AsyncScheduler PURE_IMPORTS_END */\n\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nvar async_async = /*@__PURE__*/new AsyncScheduler(AsyncAction_AsyncAction);\n//# sourceMappingURL=async.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isDate.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n//# sourceMappingURL=isDate.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/TimerObservable.js\n/** PURE_IMPORTS_START .._util_isNumeric,.._Observable,.._scheduler_async,.._util_isScheduler,.._util_isDate PURE_IMPORTS_END */\nvar TimerObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable_TimerObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    TimerObservable___extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) {\n            dueTime = 0;\n        }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        } else if (isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler(scheduler)) {\n            scheduler = async_async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate(dueTime) ? +dueTime - this.scheduler.now() : dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) {\n            initialDelay = 0;\n        }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index,\n            period = state.period,\n            subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        } else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    /** @deprecated internal use only */TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this,\n            period = _a.period,\n            dueTime = _a.dueTime,\n            scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_Observable);\n//# sourceMappingURL=TimerObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/timer.js\n/** PURE_IMPORTS_START ._TimerObservable PURE_IMPORTS_END */\n\nvar timer = TimerObservable_TimerObservable.create;\n//# sourceMappingURL=timer.js.map\n// CONCATENATED MODULE: ./src/mixin/events.js\nvar events__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction events__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction events__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction events__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / events.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n// ### Event functions\n// These functions are called at various points along the observable pipeline to fire events,\n// and cause other side effects.\nvar events_eventMixin = function eventMixin(C) {\n  return function (_C) {\n    events__inherits(_class, _C);\n\n    function _class() {\n      events__classCallCheck(this, _class);\n\n      return events__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    events__createClass(_class, [{\n      key: \"onStart\",\n\n      // #### On start\n      value: function onStart(context) {\n        var _this2 = this;\n\n        // By default, hy-push-state will wait at least `duration` ms before replacing the content,\n        // so that animations have enough time to finish.\n        // The behavior is encoded with a promise that resolves after `duration` ms.\n        this.animPromise = timer(this.duration);\n\n        // The `waitUntil` function lets users of this component override the animation promise.\n        // This allows for event-based code execution, rather than timing-based, which prevents hiccups\n        // and glitches when, for example, painting takes longer than expected.\n        var waitUntil = function waitUntil(promise) {\n          if (false) {\n            console.warn(\"waitUntil expects a Promise as first argument.\");\n          }\n          _this2.animPromise = promise;\n        };\n\n        this.fireEvent(\"start\", {\n          detail: Object.assign(context, { waitUntil: waitUntil })\n        });\n      }\n\n      // Example usage of `waitUntil`:\n      //\n      // ```js\n      // hyPushStateEl.addEventListener('hy-push-state-start', ({ detail }) => {\n      //   const animPromise = new Promise((resolve) => {\n      //     const anim = myContent.animate(...);\n      //     anim.addEventListener('finish', resolve);\n      //   });\n      //   detail.waitUntil(animPromise);\n      // });\n      // ```\n      // {:style=\"font-style:italic\"}\n\n      // #### Error callbacks\n      // This function handles errors while trying to insert the new content into the document.\n      // If the retrieved documened doesn't contain the ids we are looking for\n      // we can't insert the content dynamically, so we tell the browser to open the link directly.\n\n    }, {\n      key: \"onDOMError\",\n      value: function onDOMError(context) {\n        var replaceElMissing = context.replaceElMissing,\n            url = context.url;\n\n        // Ideally you should prevent this situation by adding the\n        // `no-push-state` CSS class\n        // on links to documents that don't match the expected document layout.\n        // This only serves as a fallback.\n\n        if (replaceElMissing) {\n          if (false) {\n            var ids = this.replaceIds.concat(this.el.id || []).map(function (x) {\n              return \"#\" + x;\n            }).join(\", \");\n            console.warn(\"Couldn't find one or more ids of '\" + ids + \"' in the document at '\" + window.location + \"'. Opening the link directly.\");\n          }\n\n          // To open the link directly, we first pop one entry off the browser history.\n          // We have to do this because (some) browsers won't handle the back button correctly otherwise.\n          // We then wait for a short time and change the document's location.\n          // TODO: If we didn't call `pushState` optimistically we wouldn't have to do this.\n          window.history.back();\n          setTimeout(function () {\n            document.location.href = url;\n          }, 100);\n\n          // If it's a different error, throw the generic `error` event.\n        } else {\n          if (false) console.error(context);\n          this.fireEvent(\"error\", { detail: context });\n        }\n      }\n\n      // If there is a network error during (pre-) fetching, fire `networkerror` event.\n\n    }, {\n      key: \"onNetworkError\",\n      value: function onNetworkError(context) {\n        if (false) console.error(context);\n        this.fireEvent(\"networkerror\", { detail: context });\n      }\n\n      // When using the experimental script feature,\n      // fire `scripterror` event if something goes wrong during script insertion.\n\n    }, {\n      key: \"onError\",\n      value: function onError(context) {\n        if (false) console.error(context);\n        this.fireEvent(\"error\", { detail: context });\n      }\n\n      // #### Others\n      // These event callbacks simply fire an event and pass the context as `detail`.\n\n    }, {\n      key: \"onReady\",\n      value: function onReady(context) {\n        this.fireEvent(\"ready\", { detail: context });\n      }\n    }, {\n      key: \"onAfter\",\n      value: function onAfter(context) {\n        this.fireEvent(\"after\", { detail: context });\n      }\n    }, {\n      key: \"onProgress\",\n      value: function onProgress(context) {\n        this.fireEvent(\"progress\", { detail: context });\n      }\n    }, {\n      key: \"onLoad\",\n      value: function onLoad(context) {\n        this.fireEvent(\"load\", { detail: context });\n      }\n    }]);\n\n    return _class;\n  }(C);\n};\n// CONCATENATED MODULE: ./src/mixin/event-listeners.js\nvar event_listeners__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction event_listeners__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction event_listeners__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction event_listeners__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / event-listeners.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n\nvar event_listeners_eventListenersMixin = function eventListenersMixin(C) {\n  return function (_C) {\n    event_listeners__inherits(_class, _C);\n\n    function _class() {\n      event_listeners__classCallCheck(this, _class);\n\n      return event_listeners__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    event_listeners__createClass(_class, [{\n      key: \"setupEventListeners\",\n      value: function setupEventListeners() {\n        var _this2 = this;\n\n        // #### Keeping track of links\n        // We use a `MutationObserver` to keep track of all the links inside the component,\n        // and put events on the `pushSubject` and `hintSubject` observables,\n        // but first we need to check if `MutationObserver` is available.\n        if (\"MutationObserver\" in window && \"WeakSet\" in window) {\n          // A `Set` of `Element`s.\n          // We use this to keep track of which links already have their event listeners registered.\n          var links = new WeakSet();\n\n          // Binding `next` functions to their `Subject`s,\n          // so that we can pass them as callbacks directly. This is just for convenience.\n          var pushNext = this.pushSubject.next.bind(this.pushSubject);\n          var hintNext = this.hintSubject.next.bind(this.hintSubject);\n\n          // We don't use `Observable.fromEvent` here to avoid creating too many observables.\n          // Registering an unknown number of event listeners is somewhat debatable,\n          // but we certainly don't want to make it wrose.\n          // (The number could be brought down by using an `IntersectionObserver` in the future.\n          // Also note that typically there will be an animation playing while this is happening,\n          // so the effects are not easily noticed).\n          //\n          // In any case, `MutationObserver` and `Set` help us keep track of which links are children\n          // of this component, so that we can reliably add and remove the event listeners.\n          // The function to be called for every added node:\n          var addLink = function addLink(link) {\n            if (!links.has(link)) {\n              links.add(link);\n              link.addEventListener(\"click\", pushNext);\n              link.addEventListener(\"mouseenter\", hintNext, { passive: true });\n              link.addEventListener(\"touchstart\", hintNext, { passive: true });\n              link.addEventListener(\"focus\", hintNext, { passive: true });\n\n              // When fetching resources from an external domain, rewrite the link's href,\n              // so that shift-click, etc works as expected.\n              // if (isExternal(this)) {\n              //   link.href = new URL(link.getAttribute(\"href\"), this.href).href;\n              // }\n            }\n          };\n\n          var addListeners = function addListeners(addedNode) {\n            if (addedNode instanceof Element) {\n              if (matches.call(addedNode, _this2.linkSelector)) {\n                addLink(addedNode);\n              } else {\n                Array.from(addedNode.querySelectorAll(_this2.linkSelector)).forEach(addLink);\n              }\n            }\n          };\n\n          // Next, The function to be called for every removed node.\n          // Usually the elments will be removed from the document altogher\n          // when they are removed from this component,\n          // but since we can't be sure, we remove the event listeners anyway.\n          var removeLink = function removeLink(link) {\n            links.delete(link);\n            link.removeEventListener(\"click\", pushNext);\n            link.removeEventListener(\"mouseenter\", hintNext, { passive: true });\n            link.removeEventListener(\"touchstart\", hintNext, { passive: true });\n            link.removeEventListener(\"focus\", hintNext, { passive: true });\n          };\n\n          var removeListeners = function removeListeners(removedNode) {\n            if (removedNode instanceof Element) {\n              if (matches.call(removedNode, _this2.linkSelector)) {\n                removeLink(removedNode);\n              } else {\n                Array.from(removedNode.querySelectorAll(_this2.linkSelector)).forEach(removeLink);\n              }\n            }\n          };\n\n          // An observable wrapper around the mutation observer.\n          // We're only interested in nodes entering and leaving the entire subtree of this component,\n          // but not attribute changes.\n          Observable_Observable.create(function (obs) {\n            var next = obs.next.bind(obs);\n            _this2.mutationObserver = new MutationObserver(function (mutations) {\n              return Array.from(mutations).forEach(next);\n            });\n            _this2.mutationObserver.observe(_this2.el, {\n              childList: true,\n              subtree: true\n            });\n          })\n          // For every mutation, we remove the event listeners of elements that go out of the component\n          // (if any), and add event listeners to all elements that make it into the compnent (if any).\n          .subscribe(function (_ref) {\n            var addedNodes = _ref.addedNodes,\n                removedNodes = _ref.removedNodes;\n\n            Array.from(removedNodes).forEach(removeListeners.bind(_this2));\n            Array.from(addedNodes).forEach(addListeners.bind(_this2));\n          });\n\n          // TODO\n          this.subjects.linkSelector.subscribe(function () {\n            // TODO\n            Array.from(links).forEach(removeLink);\n\n            // The mutation observer does not pick up the links that are already on the page,\n            // so we add them manually here, once.\n            addListeners.call(_this2, _this2.el);\n          });\n\n          // If we don't have `MutationObserver` and `Set`, we just register a `click` event listener\n          // on the entire component, and check if a click occurred on one of our links.\n          // Note that we can't reliably generate hints this way, so we don't.\n        } else {\n          this.el.addEventListener(\"click\", function (event) {\n            var anchor = matchesAncestors.call(event.target, _this2.linkSelector);\n            if (anchor && anchor.href) {\n              event.currentTarget = anchor; // eslint-disable-line no-param-reassign\n              pushSubject.next(event);\n            }\n          });\n        }\n      }\n    }]);\n\n    return _class;\n  }(C);\n};\n// CONCATENATED MODULE: ./src/mixin/setup.js\nvar setup__slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar setup__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction setup__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction setup__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction setup__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / setup.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n// Importing the subset of RxJS functions that we are going to use.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar setup_setupObservablesMixin = function setupObservablesMixin(C) {\n  return function (_eventListenersMixin) {\n    setup__inherits(_class, _eventListenersMixin);\n\n    function _class() {\n      setup__classCallCheck(this, _class);\n\n      return setup__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    setup__createClass(_class, [{\n      key: \"compareContext\",\n\n      // A compare function for contexts, used in combination with `distinctUntilChanged`.\n      // We use `cacheNr` as it is a convenient (hacky) way of circumventing\n      // `distinctUntilChanged` when retrying requests.\n      value: function compareContext(p, q) {\n        return p.url.href === q.url.href && p.error === q.error && p.cacheNr === q.cacheNr;\n      }\n\n      // ### Setup observable\n      // This functions sets up the core observable pipeline of this component.\n\n    }, {\n      key: \"setupObservables\",\n      value: function setupObservables() {\n        var _this2 = this;\n\n        this.cacheNr = 1;\n\n        // For now, we take for granted that we have a stream of all `PUSH` events (loading a new page by\n        // clicking on a link) and `HINT` events (probable click on a link) which are `pushSubject` and\n        // `hintSubject` respectively.\n        this.pushSubject = new Subject_Subject();\n        this.hintSubject = new Subject_Subject();\n\n        // TODO: doc\n        var push$ = this.pushSubject.pipe(takeUntil(this.subjects.disconnect), map(function (event) {\n          return {\n            type: PUSH,\n            url: new url_URL(event.currentTarget.href, _this2.href),\n            anchor: event.currentTarget,\n            event: event,\n            cacheNr: _this2.cacheNr\n          };\n        }), filter(this.isPushEvent.bind(this)), tap(function (_ref) {\n          var event = _ref.event;\n\n          event.preventDefault();\n          _this2.saveScrollHistoryState();\n        }));\n\n        // In additon to `HINT` and `PUSH` events, there's also `POP` events, which are caused by\n        // modifying the browser history, e.g. clicking the back button, etc.\n        var pop$ = fromEvent(window, \"popstate\").pipe(takeUntil(this.subjects.disconnect), filter(function () {\n          return window.history.state && window.history.state[_this2.histId()];\n        }), map(function (event) {\n          return {\n            type: POP,\n            url: new url_URL(window.location, _this2.href),\n            event: event,\n            cacheNr: _this2.cacheNr\n          };\n        }));\n\n        var reload$ = this.reload$.pipe(takeUntil(this.subjects.disconnect));\n\n        // TODO: doc\n\n        var _merge$pipe$map = merge(push$, pop$, reload$).pipe(startWith({ url: new url_URL(this.initialHref) }),\n        // HACK: make hy-push-state mimic window.location?\n        tap(function (_ref2) {\n          var url = _ref2.url;\n          return _this2._url = url;\n        }), pairwise(), share(), partition(this.isHashChange)).map(function (obs$) {\n          return obs$.pipe(map(function (_ref3) {\n            var _ref4 = setup__slicedToArray(_ref3, 2),\n                x = _ref4[1];\n\n            return x;\n          }), share());\n        }),\n            _merge$pipe$map2 = setup__slicedToArray(_merge$pipe$map, 2),\n            hash$ = _merge$pipe$map2[0],\n            page$ = _merge$pipe$map2[1];\n\n        // We don't want to prefetch (i.e. use bandwidth) for a _possible_ page load,\n        // while a _certain_ page load is going on.\n        // The `pauser$` observable let's us achieve this.\n        // Needs to be deferred b/c of \"cyclical\" dependency.\n\n\n        var pauser$ = defer(function () {\n          return (\n            // A page change event means we want to pause prefetching, while\n            // a response event means we want to resume prefetching.\n            merge(page$.pipe(mapTo(true)), _this2.fetch$.pipe(mapTo(false)))\n          );\n        })\n        // Start with `false`, i.e. we want the prefetch pipelien to be active\n        .pipe(startWith(false), share());\n\n        // TODO: doc\n        var hint$ = this.hintSubject.pipe(takeUntil(this.subjects.disconnect), operators_unsubscribeWhen(pauser$), map(function (event) {\n          return {\n            type: HINT,\n            url: new url_URL(event.currentTarget.href, _this2.href),\n            anchor: event.currentTarget,\n            event: event,\n            cacheNr: _this2.cacheNr\n          };\n        }), filter(this.isHintEvent.bind(this)));\n\n        // The stream of (pre-)fetch events.\n        // Includes definitive page change events do deal with unexpected page changes.\n        var prefetch$ = merge(hint$, page$).pipe(\n        // Don't abort a request if the user \"jiggles\" over a link\n        distinctUntilChanged(this.compareContext.bind(this)), switchMap(function (context) {\n          return ajax({\n            method: \"GET\",\n            responseType: \"text\",\n            url: context.url,\n            crossDomain: isExternal(_this2)\n          }).pipe(map(function (_ref5) {\n            var response = _ref5.response;\n            return Object.assign(context, { response: response });\n          }), catchError(function (error) {\n            return _this2.recoverIfResponse(context, error);\n          }));\n        }),\n        // Start with some value so `withLatestFrom` below doesn't \"block\"\n        startWith({ url: {} }), share());\n\n        // TODO: doc\n        this.fetch$ = page$.pipe(tap(function (context) {\n          _this2.updateHistoryState(context);\n          _this2.onStart(context);\n        }), withLatestFrom(prefetch$), switchMap(this.getResponse.bind(this, prefetch$)), share());\n\n        // TODO: doc\n\n        var _fetch$$pipe = this.fetch$.pipe(partition(function (_ref6) {\n          var error = _ref6.error;\n          return !error;\n        })),\n            _fetch$$pipe2 = setup__slicedToArray(_fetch$$pipe, 2),\n            fetchOk$ = _fetch$$pipe2[0],\n            fetchError$ = _fetch$$pipe2[1];\n\n        // TODO: doc\n\n\n        var main$ = fetchOk$.pipe(map(this.responseToContent.bind(this)), tap(function (context) {\n          _this2.onReady(context);\n          _this2.updateDOM(context);\n          _this2.onAfter(context);\n          _this2.manageScrollPostion(context);\n        }), tap({ error: function error(e) {\n            return _this2.onDOMError(e);\n          } }), catchError(function (e, c) {\n          return c;\n        }),\n\n        // If the experimental script feature is enabled,\n        // scripts tags have been stripped from the content,\n        // and this is where we insert them again.\n        switchMap(this.reinsertScriptTags.bind(this)), tap({ error: function error(e) {\n            return _this2.onError(e);\n          } }), catchError(function (e, c) {\n          return c;\n        }));\n\n        // #### Subscriptions\n        // Subscribe to main and hash observables.\n        main$.subscribe(this.onLoad.bind(this));\n        hash$.subscribe(this.updateHistoryStateHash.bind(this));\n\n        // Subscribe to the fetch error branch.\n        fetchError$.subscribe(this.onNetworkError.bind(this));\n\n        // Fire `progress` event when fetching takes longer than expected.\n        page$.pipe(switchMap(function (context) {\n          return defer(function () {\n            return _this2.animPromise;\n          }).pipe(takeUntil(_this2.fetch$), mapTo(context));\n        })).subscribe(this.onProgress.bind(this));\n\n        // TODO: doc\n        this.setupEventListeners();\n      }\n    }]);\n\n    return _class;\n  }(event_listeners_eventListenersMixin(events_eventMixin(update_updateMixin(fetching_fetchMixin(history_historyMixin(methods_helperMixin(C)))))));\n};\n// CONCATENATED MODULE: ./src/mixin/index.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MIXIN_FEATURE_TESTS\", function() { return MIXIN_FEATURE_TESTS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pushStateMixin\", function() { return mixin_pushStateMixin; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"INIT\", function() { return INIT; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"HINT\", function() { return HINT; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"PUSH\", function() { return PUSH; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"POP\", function() { return POP; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Set\", function() { return _Set; });\nvar mixin__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar mixin__get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction mixin__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction mixin__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction mixin__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// # src / mixin / index.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// ## Overview\n// This component is written in [RxJS] and reading its code requires some basic understanding\n// of how RxJS works. It may also serve as an example of how to use RxJS.\n//\n// Other than RxJS, you should be familiar with [ES6 Mixin][esmixins],\n// which is a clever way of using the ES6 class syntax to achieve inheritance-based mixins.\n// The mixin in the main export of this file.\n\n// ## Imports\n// Including the patches for ES6+ functions, but\n// there is a -lite version of the component that comes without these.\n// import 'core-js/fn/array/for-each';\n// import 'core-js/fn/array/from';\n// import 'core-js/fn/function/bind';\n// import 'core-js/fn/object/assign';\n\n// Importing the hy-compontent base libary,\n// which helps with making multiple versions of the component (Vanilla JS, WebComponent, etc...).\n\n\n\n\n\n\n\n// Partial polyfill of the URL class. Only provides the most basic funtionality of `URL`,\n// but sufficient for this compoennt.\n\n\n\n\n\n\n\n\n// ## Constants\n// A set of [Modernizr] tests that are required to run this component.\n// These are the bare-minimum requirements, more ad-hoc features tests for optional behavior\n// is part of the code below.\nvar MIXIN_FEATURE_TESTS = new _Set([].concat(_toConsumableArray(COMPONENT_FEATURE_TESTS), [\"documentfragment\", \"eventlistener\", \"history\", \"promises\", \"queryselector\", \"requestanimationframe\"]));\n\n\n\n// Patching the document fragment's `getElementById` function, which is\n// not implemented in all browsers, even some modern ones.\nDocumentFragment.prototype.getElementById = DocumentFragment.prototype.getElementById || function getElementById(id) {\n  return this.querySelector(\"#\" + id);\n};\n\n// ## Push state mixin\nvar mixin_pushStateMixin = function pushStateMixin(C) {\n  return function (_setupObservablesMixi) {\n    mixin__inherits(_class, _setupObservablesMixi);\n\n    function _class() {\n      mixin__classCallCheck(this, _class);\n\n      return mixin__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    mixin__createClass(_class, [{\n      key: \"setupComponent\",\n\n\n      // ### Setup\n      value: function setupComponent(el, props) {\n        mixin__get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), \"setupComponent\", this).call(this, el, props);\n\n        this.saveScrollHistoryState = this.saveScrollHistoryState.bind(this);\n\n        this.reload$ = new Subject_Subject();\n      }\n\n      // This component has no shadow DOM, so we just return the element.\n\n    }, {\n      key: \"setupShadowDOM\",\n      value: function setupShadowDOM(el) {\n        return el;\n      }\n\n      // Overriding the setup function.\n\n    }, {\n      key: \"connectComponent\",\n      value: function connectComponent() {\n        var _this2 = this;\n\n        requestIdleCallback(function () {\n          if (false) console.warn(\"hy-push-state needs a 'replace-ids' or 'id' attribute.\");\n\n          // Setting up scroll restoration\n          if (\"scrollRestoration\" in window.history) {\n            var orig = window.history.scrollRestoration;\n\n            _this2.subjects.scrollRestoration.pipe(takeUntil(_this2.subjects.disconnect)).subscribe(function (scrollRestoration) {\n              window.history.scrollRestoration = scrollRestoration ? \"manual\" : orig;\n            });\n          }\n\n          // If restore the last scroll position, if any.\n          _this2.restoreScrollPostion();\n\n          // Remember the current scroll position (for F5/reloads).\n          window.addEventListener(\"beforeunload\", _this2.saveScrollHistoryState);\n\n          // Calling the [setup observables function](./setup.md) function.\n          _this2.setupObservables();\n\n          // TODO: meh...\n          mixin__get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), \"connectComponent\", _this2).call(_this2);\n\n          // Setting the initial `history.state`.\n          var url = new url_URL(_this2.initialHref);\n          _this2.updateHistoryState({ type: INIT, replace: true, url: url });\n\n          var replaceEls = _this2.getReplaceElements(document);\n          if (isExternal(_this2)) _this2.rewriteURLs(replaceEls);\n\n          // After all this is done, we can fire the one-time `init` event...\n          _this2.fireEvent(\"init\");\n\n          // ...and our custom `load` event, which gets fired on every page change.\n          // We provide similar data as subsequent `load` events,\n          // however we can't provide an `anchor` or `event`,\n          // since this `load` event wasn't caused by a user interaction.\n          _this2.onLoad({\n            type: INIT,\n            title: _this2.getTitle(document),\n            replaceEls: replaceEls,\n            url: url,\n            cacheNr: _this2.cacheNr\n          });\n        });\n      }\n    }, {\n      key: \"disconnectComponent\",\n      value: function disconnectComponent() {\n        mixin__get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), \"disconnectComponent\", this).call(this);\n        window.removeEventListener(\"beforeunload\", this.saveScrollHistoryState);\n      }\n\n      // ### Methods\n      // Public methods of this component. See [Methods](../../methods.md) for more.\n\n    }, {\n      key: \"assign\",\n      value: function assign(url) {\n        this.reload$.next({\n          type: PUSH,\n          url: new url_URL(url, this.href),\n          cacheNr: ++this.cacheNr // eslint-disable-line no-plusplus\n        });\n      }\n    }, {\n      key: \"reload\",\n      value: function reload() {\n        this.reload$.next({\n          type: PUSH,\n          url: new url_URL(this.href),\n          cacheNr: ++this.cacheNr, // eslint-disable-line no-plusplus\n          replace: true\n        });\n      }\n    }, {\n      key: \"replace\",\n      value: function replace(url) {\n        this.reload$.next({\n          type: PUSH,\n          url: new url_URL(url, this.href),\n          cacheNr: ++this.cacheNr, // eslint-disable-line no-plusplus\n          replace: true\n        });\n      }\n    }, {\n      key: \"hash\",\n\n\n      // ### Properties\n      // We expose the same properties as `window.location`\n      // (in many ways this component can be thought of as a \"replacement\" for the global `Location` object).\n      // Currently they are read-only.\n      get: function get() {\n        return this._url.hash;\n      }\n    }, {\n      key: \"host\",\n      get: function get() {\n        return this._url.host;\n      }\n    }, {\n      key: \"hostname\",\n      get: function get() {\n        return this._url.hostname;\n      }\n    }, {\n      key: \"href\",\n      get: function get() {\n        return this._url.href;\n      }\n    }, {\n      key: \"origin\",\n      get: function get() {\n        return this._url.origin;\n      }\n    }, {\n      key: \"pathname\",\n      get: function get() {\n        return this._url.pathname;\n      }\n    }, {\n      key: \"port\",\n      get: function get() {\n        return this._url.port;\n      }\n    }, {\n      key: \"protocol\",\n      get: function get() {\n        return this._url.protocol;\n      }\n    }, {\n      key: \"search\",\n      get: function get() {\n        return this._url.search;\n      }\n    }], [{\n      key: \"componentName\",\n\n      // The name of the component (required by hy-component)\n      get: function get() {\n        return \"hy-push-state\";\n      }\n\n      // ### Options\n      // The default values (and types) of the configuration options (required by hy-component)\n      // See [Options](../../options.md) for usage information.\n\n    }, {\n      key: \"types\",\n      get: function get() {\n        return {\n          replaceIds: array_array,\n          linkSelector: string,\n          scrollRestoration: bool,\n          duration: number,\n          hrefRegex: regex,\n          scriptSelector: string,\n          initialHref: string\n        };\n      }\n    }, {\n      key: \"defaults\",\n      get: function get() {\n        return {\n          replaceIds: [],\n          linkSelector: \"a[href]:not(.no-push-state)\",\n          scrollRestoration: false,\n          duration: 0,\n          hrefRegex: null,\n          scriptSelector: null,\n          initialHref: window.location.href\n        };\n      }\n    }]);\n\n    return _class;\n  }(setup_setupObservablesMixin(rxjs_rxjsMixin(componentMixin(C))));\n};\n\n// [rxjs]: https://github.com/ReactiveX/rxjs\n// [esmixins]: http://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/\n// [modernizr]: https://modernizr.com/\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b45a13640c20dfafc911","// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n/*@__PURE__*/ (function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\nexport { _root as root };\n//# sourceMappingURL=root.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/root.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isFunction.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x != null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isObject.js","/** PURE_IMPORTS_START ._errorObject PURE_IMPORTS_END */\nimport { errorObject } from './errorObject';\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n}\nexport function tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n;\n//# sourceMappingURL=tryCatch.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/tryCatch.js","/** PURE_IMPORTS_START ._util_isArray,._util_isObject,._util_isFunction,._util_tryCatch,._util_errorObject,._util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport var Subscription = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            var trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    var trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/Subscription.js","/** PURE_IMPORTS_START ._util_isFunction,._Subscription,._Observer,._symbol_rxSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { isFunction } from './util/isFunction';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport var Subscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    // HACK(benlesh): To resolve an issue where Node users may have multiple\n                    // copies of rxjs in their node_modules directory.\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        var trustedSubscriber = destinationOrNext[rxSubscriberSymbol]();\n                        this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        this.destination = trustedSubscriber;\n                        trustedSubscriber.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    /** @deprecated internal use only */ Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    /** @deprecated internal use only */ SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nfunction isTrustedSubscriber(obj) {\n    return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n//# sourceMappingURL=Subscriber.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/Subscriber.js","/** PURE_IMPORTS_START .._Subscriber,.._symbol_rxSubscriber,.._Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/toSubscriber.js","/* tslint:disable:no-empty */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/noop.js","/** PURE_IMPORTS_START ._noop PURE_IMPORTS_END */\nimport { noop } from './noop';\n/* tslint:enable:max-line-length */\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\n/* @internal */\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/pipe.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isPromise.js","/** PURE_IMPORTS_START ._root,._isArrayLike,._isPromise,._isObject,.._Observable,.._symbol_iterator,.._InnerSubscriber,.._symbol_observable PURE_IMPORTS_END */\nimport { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            destination.syncErrorThrowable = true;\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[Symbol_iterator] === 'function') {\n        var iterator = result[Symbol_iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[Symbol_observable] === 'function') {\n        var obs = result[Symbol_observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\n//# sourceMappingURL=subscribeToResult.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/subscribeToResult.js","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil(notifier) {\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\n}\nvar TakeUntilOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n    };\n    return TakeUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeUntilSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.add(subscribeToResult(this, notifier));\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/takeUntil.js","// # src / common.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const matches =\n  Element.prototype.matches ||\n  Element.prototype.matchesSelector ||\n  Element.prototype.msMatchesSelector ||\n  Element.prototype.mozMatchesSelector ||\n  Element.prototype.webkitMatchesSelector ||\n  Element.prototype.oMatchesSelector;\n\n// Checks if this element or any of its parents matches a given `selector`.\nexport function matchesAncestors(selector) {\n  let curr = this;\n  while (curr !== document && curr !== document.documentElement) {\n    if (matches.call(curr, selector)) return curr;\n    curr = curr.parentNode;\n  }\n  return null;\n}\n\n// Consider a URL external if either the protocol, hostname or port is different.\nexport function isExternal({ protocol, host }, location = window.location) {\n  return protocol !== location.protocol || host !== location.host;\n}\n\nexport function isHash({ hash, origin, pathname }, location = window.location) {\n  return hash !== \"\" && origin === location.origin && pathname === location.pathname;\n}\n\nexport function getScrollHeight() {\n  const h = document.documentElement;\n  const b = document.body;\n  const sh = \"scrollHeight\";\n  return h[sh] || b[sh];\n}\n\nexport function getScrollLeft() {\n  return window.pageXOffset || document.body.scrollLeft;\n}\n\nexport function getScrollTop() {\n  return window.pageYOffset || document.body.scrollTop;\n}\n\nexport function fragmentFromString(strHTML) {\n  return document.createRange().createContextualFragment(strHTML);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common.js","/** PURE_IMPORTS_START .._Observable,.._util_tryCatch,.._util_isFunction,.._util_errorObject,.._Subscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { tryCatch } from '../util/tryCatch';\nimport { isFunction } from '../util/isFunction';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nvar toString = Object.prototype.toString;\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var FromEventObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n        this.options = options;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * `fromEvent` accepts as a first argument event target, which is an object with methods\n     * for registering event handler functions. As a second argument it takes string that indicates\n     * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n     * which are described in detail below. If your event target does not match any of the ones listed,\n     * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n     * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n     * handler functions have different names, but they all accept a string describing event type\n     * and function itself, which will be called whenever said event happens.\n     *\n     * Every time resulting Observable is subscribed, event handler function will be registered\n     * to event target on given event type. When that event fires, value\n     * passed as a first argument to registered function will be emitted by output Observable.\n     * When Observable is unsubscribed, function will be unregistered from event target.\n     *\n     * Note that if event target calls registered function with more than one argument, second\n     * and following arguments will not appear in resulting stream. In order to get access to them,\n     * you can pass to `fromEvent` optional project function, which will be called with all arguments\n     * passed to event handler. Output Observable will then emit value returned by project function,\n     * instead of the usual value.\n     *\n     * Remember that event targets listed below are checked via duck typing. It means that\n     * no matter what kind of object you have and no matter what environment you work in,\n     * you can safely use `fromEvent` on that object if it exposes described methods (provided\n     * of course they behave as was described above). So for example if Node.js library exposes\n     * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n     * a good choice.\n     *\n     * If the API you use is more callback then event handler oriented (subscribed\n     * callback function fires only once and thus there is no need to manually\n     * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n     * instead.\n     *\n     * `fromEvent` supports following types of event targets:\n     *\n     * **DOM EventTarget**\n     *\n     * This is an object with `addEventListener` and `removeEventListener` methods.\n     *\n     * In the browser, `addEventListener` accepts - apart from event type string and event\n     * handler function arguments - optional third parameter, which is either an object or boolean,\n     * both used for additional configuration how and when passed function will be called. When\n     * `fromEvent` is used with event target of that type, you can provide this values\n     * as third parameter as well.\n     *\n     * **Node.js EventEmitter**\n     *\n     * An object with `addListener` and `removeListener` methods.\n     *\n     * **JQuery-style event target**\n     *\n     * An object with `on` and `off` methods\n     *\n     * **DOM NodeList**\n     *\n     * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n     *\n     * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n     * it contains and install event handler function in every of them. When returned Observable\n     * is unsubscribed, function will be removed from all Nodes.\n     *\n     * **DOM HtmlCollection**\n     *\n     * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n     * installed and removed in each of elements.\n     *\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * // Results in:\n     * // MouseEvent object logged to console every time a click\n     * // occurs on the document.\n     *\n     *\n     * @example <caption>Use addEventListener with capture option</caption>\n     * var clicksInDocument = Rx.Observable.fromEvent(document, 'click', true); // note optional configuration parameter\n     *                                                                          // which will be passed to addEventListener\n     * var clicksInDiv = Rx.Observable.fromEvent(someDivInDocument, 'click');\n     *\n     * clicksInDocument.subscribe(() => console.log('document'));\n     * clicksInDiv.subscribe(() => console.log('div'));\n     *\n     * // By default events bubble UP in DOM tree, so normally\n     * // when we would click on div in document\n     * // \"div\" would be logged first and then \"document\".\n     * // Since we specified optional `capture` option, document\n     * // will catch event when it goes DOWN DOM tree, so console\n     * // will log \"document\" and then \"div\".\n     *\n     * @see {@link bindCallback}\n     * @see {@link bindNodeCallback}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOM EventTarget, Node.js\n     * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return source_2.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n        }\n        else {\n            throw new TypeError('Invalid event target');\n        }\n        subscriber.add(new Subscription(unsubscribe));\n    };\n    /** @deprecated internal use only */ FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch(selector).apply(void 0, args);\n            if (result === errorObject) {\n                subscriber.error(errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable));\n//# sourceMappingURL=FromEventObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/FromEventObservable.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isScheduler.js","/** PURE_IMPORTS_START .._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return function mergeMapOperatorFunction(source) {\n        if (typeof resultSelector === 'number') {\n            concurrent = resultSelector;\n            resultSelector = null;\n        }\n        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\n    };\n}\nexport var MergeMapOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var MergeMapSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=mergeMap.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/mergeMap.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/identity.js","/** PURE_IMPORTS_START ._mergeMap,.._util_identity PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll(concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return mergeMap(identity, null, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/mergeAll.js","/** PURE_IMPORTS_START .._Observable,._ArrayObservable,.._util_isScheduler,.._operators_mergeAll PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(new ArrayObservable(observables, scheduler));\n}\n//# sourceMappingURL=merge.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/merge.js","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nexport var MapOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/map.js","/** PURE_IMPORTS_START .._.._util_root,.._.._util_tryCatch,.._.._util_errorObject,.._.._Observable,.._.._Subscriber,.._.._operators_map PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { root } from '../../util/root';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\nfunction getCORSRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else if (!!root.XDomainRequest) {\n        return new root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nexport function ajaxGet(url, headers) {\n    if (headers === void 0) {\n        headers = null;\n    }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\n;\nexport function ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\n;\nexport function ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\n;\nexport function ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\n;\nexport function ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n}\n;\nvar mapResponse = /*@__PURE__*/ map(function (x, index) { return x.response; });\nexport function ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url: url,\n        responseType: 'json',\n        headers: headers\n    }));\n}\n;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var AjaxObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        _super.call(this);\n        var request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n            },\n            crossDomain: false,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    /** @deprecated internal use only */ AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    };\n    /**\n     * Creates an observable for an Ajax request with either a request object with\n     * url, headers, etc or a string for a URL.\n     *\n     * @example\n     * source = Rx.Observable.ajax('/products');\n     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n     *\n     * @param {string|Object} request Can be one of the following:\n     *   A string of the URL to make the Ajax call.\n     *   An object with the following properties\n     *   - url: URL of the request\n     *   - body: The body of the request\n     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n     *   - async: Whether the request is async\n     *   - headers: Optional headers\n     *   - crossDomain: true if a cross domain request, else false\n     *   - createXHR: a function to override if you need to use an alternate\n     *   XMLHttpRequest implementation.\n     *   - resultSelector: a function to use to alter the output value type of\n     *   the Observable. Gets {@link AjaxResponse} as an argument.\n     * @return {Observable} An observable sequence containing the XMLHttpRequest.\n     * @static true\n     * @name ajax\n     * @owner Observable\n    */\n    AjaxObservable.create = (function () {\n        var create = function (urlOrRequest) {\n            return new AjaxObservable(urlOrRequest);\n        };\n        create.get = ajaxGet;\n        create.post = ajaxPost;\n        create.delete = ajaxDelete;\n        create.put = ajaxPut;\n        create.patch = ajaxPatch;\n        create.getJSON = ajaxGetJSON;\n        return create;\n    })();\n    return AjaxObservable;\n}(Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var AjaxSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        _super.call(this, destination);\n        this.request = request;\n        this.done = false;\n        var headers = request.headers = request.headers || {};\n        // force CORS if requested\n        if (!request.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        // ensure content type is set\n        if (!('Content-Type' in headers) && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        // properly serialize body\n        request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n        this.send();\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n        var response = new AjaxResponse(e, xhr, request);\n        destination.next(response);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n        var createXHR = request.createXHR;\n        var xhr = tryCatch(createXHR).call(request);\n        if (xhr === errorObject) {\n            this.error(errorObject.e);\n        }\n        else {\n            this.xhr = xhr;\n            // set up the events before open XHR\n            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n            // You need to add the event listeners before calling open() on the request.\n            // Otherwise the progress events will not fire.\n            this.setupEvents(xhr, request);\n            // open XHR\n            var result = void 0;\n            if (user) {\n                result = tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n            }\n            else {\n                result = tryCatch(xhr.open).call(xhr, method, url, async);\n            }\n            if (result === errorObject) {\n                this.error(errorObject.e);\n                return null;\n            }\n            // timeout, responseType and withCredentials can be set once the XHR is open\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            // set headers\n            this.setHeaders(xhr, headers);\n            // finally send the request\n            result = body ? tryCatch(xhr.send).call(xhr, body) : tryCatch(xhr.send).call(xhr);\n            if (result === errorObject) {\n                this.error(errorObject.e);\n                return null;\n            }\n        }\n        return xhr;\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root.FormData && body instanceof root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) { return (encodeURI(key) + \"=\" + encodeURI(body[key])); }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n        }\n        ;\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                var xhrProgress_1;\n                xhrProgress_1 = function (e) {\n                    var progressSubscriber = xhrProgress_1.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                if (root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress_1;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress_1;\n                }\n                xhrProgress_1.progressSubscriber = progressSubscriber;\n            }\n            var xhrError_1;\n            xhrError_1 = function (e) {\n                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                subscriber.error(new AjaxError('ajax error', this, request));\n            };\n            xhr.onerror = xhrError_1;\n            xhrError_1.request = request;\n            xhrError_1.subscriber = this;\n            xhrError_1.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (this.readyState === 4) {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                if (200 <= status_1 && status_1 < 300) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n                }\n            }\n        }\n        ;\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this, done = _a.done, xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber));\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nexport var AjaxResponse = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxResponse;\n}());\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nexport var AjaxError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AjaxError, _super);\n    function AjaxError(message, xhr, request) {\n        _super.call(this, message);\n        this.message = message;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxError;\n}(Error));\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            if ('response' in xhr) {\n                //IE does not support json as responseType, parse it internally\n                return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n            }\n            else {\n                // HACK(benlesh): TypeScript shennanigans\n                // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n                return JSON.parse(xhr.responseText || 'null');\n            }\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            // HACK(benlesh): TypeScript shennanigans\n            // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nexport var AjaxTimeoutError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AjaxTimeoutError, _super);\n    function AjaxTimeoutError(xhr, request) {\n        _super.call(this, 'ajax timeout', xhr, request);\n    }\n    return AjaxTimeoutError;\n}(AjaxError));\n//# sourceMappingURL=AjaxObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/dom/AjaxObservable.js","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        var operator = new CatchOperator(selector);\n        var caught = source.lift(operator);\n        return (operator.caught = caught);\n    };\n}\nvar CatchOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=catchError.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/catchError.js","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nvar DoOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber));\n//# sourceMappingURL=tap.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/tap.js","/** PURE_IMPORTS_START .._Subscriber,.._util_tryCatch,.._util_errorObject PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged(compare, keySelector) {\n    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };\n}\nvar DistinctUntilChangedOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch(this.keySelector)(value);\n            if (key === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch(this.compare)(this.key, key);\n            if (result === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/distinctUntilChanged.js","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=filter.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/filter.js","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo(value) {\n    return function (source) { return source.lift(new MapToOperator(value)); };\n}\nvar MapToOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        _super.call(this, destination);\n        this.value = value;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber));\n//# sourceMappingURL=mapTo.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/mapTo.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\n//# sourceMappingURL=not.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/not.js","/** PURE_IMPORTS_START .._util_not,._filter PURE_IMPORTS_END */\nimport { not } from '../util/not';\nimport { filter } from './filter';\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nexport function partition(predicate, thisArg) {\n    return function (source) {\n        return [\n            filter(predicate, thisArg)(source),\n            filter(not(predicate, thisArg))(source)\n        ];\n    };\n}\n//# sourceMappingURL=partition.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/partition.js","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise() {\n    return function (source) { return source.lift(new PairwiseOperator()); };\n}\nvar PairwiseOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar PairwiseSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasPrev = false;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber));\n//# sourceMappingURL=pairwise.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/pairwise.js","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nvar RefCountOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    /** @deprecated internal use only */ RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=refCount.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/refCount.js","/** PURE_IMPORTS_START .._observable_ConnectableObservable PURE_IMPORTS_END */\nimport { connectableObservableDescriptor } from '../observable/ConnectableObservable';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nexport var MulticastOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\n//# sourceMappingURL=multicast.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/multicast.js","/** PURE_IMPORTS_START ._multicast,._refCount,.._Subject PURE_IMPORTS_END */\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\nfunction shareSubjectFactory() {\n    return new Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share() {\n    return function (source) { return refCount()(multicast(shareSubjectFactory)(source)); };\n}\n;\n//# sourceMappingURL=share.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/share.js","/** PURE_IMPORTS_START .._util_root,.._Observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { root } from '../util/root';\nimport { Observable } from '../Observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var PromiseObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {PromiseLike<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    /** @deprecated internal use only */ PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable));\nfunction dispatchNext(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/PromiseObservable.js","/** PURE_IMPORTS_START .._util_root,.._Observable,.._symbol_iterator PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { root } from '../util/root';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var IteratorObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(IteratorObservable, _super);\n    function IteratorObservable(iterator, scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n        if (iterator == null) {\n            throw new Error('iterator cannot be null.');\n        }\n        this.iterator = getIterator(iterator);\n    }\n    IteratorObservable.create = function (iterator, scheduler) {\n        return new IteratorObservable(iterator, scheduler);\n    };\n    IteratorObservable.dispatch = function (state) {\n        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;\n        if (hasError) {\n            subscriber.error(state.error);\n            return;\n        }\n        var result = iterator.next();\n        if (result.done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(result.value);\n        state.index = index + 1;\n        if (subscriber.closed) {\n            if (typeof iterator.return === 'function') {\n                iterator.return();\n            }\n            return;\n        }\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ IteratorObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\n                index: index, iterator: iterator, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                var result = iterator.next();\n                if (result.done) {\n                    subscriber.complete();\n                    break;\n                }\n                else {\n                    subscriber.next(result.value);\n                }\n                if (subscriber.closed) {\n                    if (typeof iterator.return === 'function') {\n                        iterator.return();\n                    }\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return IteratorObservable;\n}(Observable));\nvar StringIterator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function StringIterator(str, idx, len) {\n        if (idx === void 0) {\n            idx = 0;\n        }\n        if (len === void 0) {\n            len = str.length;\n        }\n        this.str = str;\n        this.idx = idx;\n        this.len = len;\n    }\n    StringIterator.prototype[Symbol_iterator] = function () { return (this); };\n    StringIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.str.charAt(this.idx++)\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return StringIterator;\n}());\nvar ArrayIterator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ArrayIterator(arr, idx, len) {\n        if (idx === void 0) {\n            idx = 0;\n        }\n        if (len === void 0) {\n            len = toLength(arr);\n        }\n        this.arr = arr;\n        this.idx = idx;\n        this.len = len;\n    }\n    ArrayIterator.prototype[Symbol_iterator] = function () { return this; };\n    ArrayIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return ArrayIterator;\n}());\nfunction getIterator(obj) {\n    var i = obj[Symbol_iterator];\n    if (!i && typeof obj === 'string') {\n        return new StringIterator(obj);\n    }\n    if (!i && obj.length !== undefined) {\n        return new ArrayIterator(obj);\n    }\n    if (!i) {\n        throw new TypeError('object is not iterable');\n    }\n    return obj[Symbol_iterator]();\n}\nvar maxSafeInteger = /*@__PURE__*/ Math.pow(2, 53) - 1;\nfunction toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) {\n        return 0;\n    }\n    if (len === 0 || !numberIsFinite(len)) {\n        return len;\n    }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) {\n        return 0;\n    }\n    if (len > maxSafeInteger) {\n        return maxSafeInteger;\n    }\n    return len;\n}\nfunction numberIsFinite(value) {\n    return typeof value === 'number' && root.isFinite(value);\n}\nfunction sign(value) {\n    var valueAsNumber = +value;\n    if (valueAsNumber === 0) {\n        return valueAsNumber;\n    }\n    if (isNaN(valueAsNumber)) {\n        return valueAsNumber;\n    }\n    return valueAsNumber < 0 ? -1 : 1;\n}\n//# sourceMappingURL=IteratorObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/IteratorObservable.js","/** PURE_IMPORTS_START ._mergeAll PURE_IMPORTS_END */\nimport { mergeAll } from './mergeAll';\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll() {\n    return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/concatAll.js","/** PURE_IMPORTS_START .._util_isScheduler,._of,._from,.._operators_concatAll PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    if (observables.length === 1 || (observables.length === 2 && isScheduler(observables[1]))) {\n        return from(observables[0]);\n    }\n    return concatAll()(of.apply(void 0, observables));\n}\n//# sourceMappingURL=concat.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/concat.js","/** PURE_IMPORTS_START .._observable_ArrayObservable,.._observable_ScalarObservable,.._observable_EmptyObservable,.._observable_concat,.._util_isScheduler PURE_IMPORTS_END */\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { ScalarObservable } from '../observable/ScalarObservable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len === 1) {\n            return concatStatic(new ScalarObservable(array[0], scheduler), source);\n        }\n        else if (len > 1) {\n            return concatStatic(new ArrayObservable(array, scheduler), source);\n        }\n        else {\n            return concatStatic(new EmptyObservable(scheduler), source);\n        }\n    };\n}\n//# sourceMappingURL=startWith.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/startWith.js","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap(project, resultSelector) {\n    return function switchMapOperatorFunction(source) {\n        return source.lift(new SwitchMapOperator(project, resultSelector));\n    };\n}\nvar SwitchMapOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    /** @deprecated internal use only */ SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/switchMap.js","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        var observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nvar WithLatestFromOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        _super.call(this, destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        var len = observables.length;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            this.add(subscribeToResult(this, observable, observable, i));\n        }\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=withLatestFrom.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/withLatestFrom.js","/** PURE_IMPORTS_START .._Subscriber,.._util_ArgumentOutOfRangeError,.._observable_EmptyObservable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take(count) {\n    return function (source) {\n        if (count === 0) {\n            return new EmptyObservable();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nvar TakeOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=take.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/take.js","/** PURE_IMPORTS_START .._observable_ArrayObservable,.._util_isArray,.._Subscriber,.._OuterSubscriber,.._util_subscribeToResult,.._symbol_iterator PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n    };\n}\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zipStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = observables[observables.length - 1];\n    if (typeof project === 'function') {\n        observables.pop();\n    }\n    return new ArrayObservable(observables).lift(new ZipOperator(project));\n}\nexport var ZipOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ZipOperator(project) {\n        this.project = project;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.project));\n    };\n    return ZipOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var ZipSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, project, values) {\n        if (values === void 0) {\n            values = Object.create(null);\n        }\n        _super.call(this, destination);\n        this.iterators = [];\n        this.active = 0;\n        this.project = (typeof project === 'function') ? project : null;\n        this.values = values;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.project) {\n            this._tryProject(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber));\nvar StaticIterator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        _super.call(this, destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    ZipBufferIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber));\n//# sourceMappingURL=zip.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/zip.js","/** PURE_IMPORTS_START ._mergeMap PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap(project, resultSelector) {\n    return mergeMap(project, resultSelector, 1);\n}\n//# sourceMappingURL=concatMap.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/concatMap.js","/** PURE_IMPORTS_START .._util_isArray PURE_IMPORTS_END */\nimport { isArray } from '../util/isArray';\nexport function isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n;\n//# sourceMappingURL=isNumeric.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isNumeric.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n//# sourceMappingURL=isDate.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isDate.js","var _Set = typeof Set !== 'undefined' && new Set([1]).size === 1 ? Set : function () {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  a = a.filter(function (x, i) {\n    return i === a.indexOf(x);\n  });\n  a.size = a.length;\n  a.has = function (x) {\n    return a.indexOf(x) > -1;\n  };\n  a.add = function (x) {\n    if (!a.has(x)) {\n      a.size++;a.push(x);\n    }return a;\n  };\n  a.delete = function (x) {\n    var t = void 0;if (t = a.has(x)) {\n      a.size--;a.splice(a.indexOf(x), 1);\n    }return t;\n  };\n  a.clear = function () {\n    while (a.pop()) {}a.size = 0;\n  };\n  return a;\n};\n\nexport { _Set as Set };\n\n\n// WEBPACK FOOTER //\n// ./node_modules/qd-set/esm/index.js","// # src / component.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n// Licensed under MIT\n\n// import 'core-js/fn/array/for-each';\n// import 'core-js/fn/object/assign';\n// import 'core-js/fn/object/define-property';\n// import 'core-js/fn/object/keys';\n\nimport { Set } from \"qd-set\";\n\nexport { Set };\n\nexport const COMPONENT_FEATURE_TESTS = new Set([\"customevent\"]);\n\nconst sSymbol = Symbol || (x => `_${x}`);\nconst sRoot = sSymbol(\"sroot\");\nconst sState = sSymbol(\"state\");\n\nwindow.process = window.process || {};\nwindow.process.env = window.process.env || {};\n\nwindow.requestIdleCallback = window.requestIdleCallback || (f => window.setTimeout(f, 0));\nwindow.cancelIdleCallback = window.cancelIdleCallback || window.clearTimeout;\n\nclass Component {}\n\nexport const componentMixin = (C = Component) =>\n  class extends C {\n    get sroot() {\n      return this.getRoot();\n    }\n\n    get el() {\n      return this.getEl();\n    }\n\n    setupComponent(el, state) {\n      const { defaults } = this.constructor;\n\n      if (process.env.DEBUG) {\n        const { componentName, sideEffects } = this.constructor;\n        if (!componentName) {\n          console.warn(\n            \"Component needs to have a name, e.g. `my-tag`. To set a name, provide a static getter called `componentName`.\"\n          );\n        }\n        if (!defaults) {\n          console.warn(\n            \"No default properties provided. Implement a static getter called `defaults`.\"\n          );\n        }\n        if (!sideEffects) {\n          console.warn(\"No side effects provided. Implement a static getter called `sideEffects`.\");\n        }\n      }\n\n      this[sState] = Object.assign({}, defaults, state);\n      this.setupProperties(this);\n      this[sRoot] = this.setupShadowDOM(el);\n    }\n\n    setupShadowDOM(el) {\n      return el;\n    }\n\n    connectComponent() {}\n\n    disconnectComponent() {}\n\n    adoptComponent() {}\n\n    getRoot() {\n      return this[sRoot];\n    }\n\n    getEl() {\n      return this[sRoot];\n    }\n\n    fireEvent(eventName, data) {\n      const { componentName } = this.constructor;\n      const event = new CustomEvent(`${componentName}-${eventName}`, data);\n      this.el.dispatchEvent(event);\n    }\n\n    setInternalState(key, value) {\n      this[sState][key] = value;\n    }\n\n    setupProperties() {\n      const { sideEffects } = this.constructor;\n\n      Object.keys(this[sState]).forEach(key => {\n        const sideEffect = sideEffects[key];\n        this.setupProperty(key, sideEffect);\n      });\n    }\n\n    setupProperty(key, sideEffect) {\n      Object.defineProperty(this, key, {\n        get: () => this[sState][key],\n        set: value => {\n          const oldValue = this[sState][key];\n          this.setInternalState(key, value);\n          if (sideEffect) sideEffect.call(this, value, oldValue);\n        },\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/hy-component/src/component.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isArray.js","// typeof any so that it we don't have to cast when comparing a result to the error object\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/errorObject.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport var UnsubscriptionError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/UnsubscriptionError.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/Observer.js","/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\nimport { root } from '../util/root';\nvar Symbol = root.Symbol;\nexport var rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    /*@__PURE__*/ Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/symbol/rxSubscriber.js","/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\nimport { root } from '../util/root';\nexport function getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexport var observable = /*@__PURE__*/ getSymbolObservable(root);\n/**\n * @deprecated use observable instead\n */\nexport var $$observable = observable;\n//# sourceMappingURL=observable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/symbol/observable.js","/** PURE_IMPORTS_START ._util_root,._util_toSubscriber,._symbol_observable,._util_pipe PURE_IMPORTS_END */\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport var Observable = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n                PromiseCtor = root.Rx.config.Promise;\n            }\n            else if (root.Promise) {\n                PromiseCtor = root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    /** @deprecated internal use only */ Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n                PromiseCtor = root.Rx.config.Promise;\n            }\n            else if (root.Promise) {\n                PromiseCtor = root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\n//# sourceMappingURL=Observable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/Observable.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport var ObjectUnsubscribedError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/ObjectUnsubscribedError.js","/** PURE_IMPORTS_START ._Subscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscription } from './Subscription';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var SubjectSubscription = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\n//# sourceMappingURL=SubjectSubscription.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/SubjectSubscription.js","/** PURE_IMPORTS_START ._Observable,._Subscriber,._Subscription,._util_ObjectUnsubscribedError,._SubjectSubscription,._symbol_rxSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n/**\n * @class SubjectSubscriber<T>\n */\nexport var SubjectSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\n/**\n * @class Subject<T>\n */\nexport var Subject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    /** @deprecated internal use only */ Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\n/**\n * @class AnonymousSubject<T>\n */\nexport var AnonymousSubject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    /** @deprecated internal use only */ AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\n//# sourceMappingURL=Subject.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/Subject.js","/** PURE_IMPORTS_START .._Subscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscription } from '../Subscription';\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport var Action = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription));\n//# sourceMappingURL=Action.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/scheduler/Action.js","/** PURE_IMPORTS_START .._util_root,._Action PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { root } from '../util/root';\nimport { Action } from './Action';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var AsyncAction = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    /** @deprecated internal use only */ AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\n//# sourceMappingURL=AsyncAction.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/scheduler/AsyncAction.js","/** PURE_IMPORTS_START ._AsyncAction PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { AsyncAction } from './AsyncAction';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var QueueAction = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction));\n//# sourceMappingURL=QueueAction.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/scheduler/QueueAction.js","/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport var Scheduler = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\n//# sourceMappingURL=Scheduler.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/Scheduler.js","/** PURE_IMPORTS_START .._Scheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Scheduler } from '../Scheduler';\nexport var AsyncScheduler = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\n//# sourceMappingURL=AsyncScheduler.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/scheduler/AsyncScheduler.js","/** PURE_IMPORTS_START ._AsyncScheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var QueueScheduler = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        _super.apply(this, arguments);\n    }\n    return QueueScheduler;\n}(AsyncScheduler));\n//# sourceMappingURL=QueueScheduler.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/scheduler/QueueScheduler.js","/** PURE_IMPORTS_START ._QueueAction,._QueueScheduler PURE_IMPORTS_END */\nimport { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\nexport var queue = /*@__PURE__*/ new QueueScheduler(QueueAction);\n//# sourceMappingURL=queue.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/scheduler/queue.js","/** PURE_IMPORTS_START ._Observable PURE_IMPORTS_END */\nimport { Observable } from './Observable';\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport var Notification = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable.of(this.value);\n            case 'E':\n                return Observable.throw(this.error);\n            case 'C':\n                return Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\n//# sourceMappingURL=Notification.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/Notification.js","/** PURE_IMPORTS_START .._Subscriber,.._Notification PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nexport var ObserveOnOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var ObserveOnSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber));\nexport var ObserveOnMessage = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\n//# sourceMappingURL=observeOn.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/observeOn.js","/** PURE_IMPORTS_START ._Subject,._scheduler_queue,._Subscription,._operators_observeOn,._util_ObjectUnsubscribedError,._SubjectSubscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nexport var ReplaySubject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) {\n            bufferSize = Number.POSITIVE_INFINITY;\n        }\n        if (windowTime === void 0) {\n            windowTime = Number.POSITIVE_INFINITY;\n        }\n        _super.call(this);\n        this.scheduler = scheduler;\n        this._events = [];\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var now = this._getNow();\n        this._events.push(new ReplayEvent(now, value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    /** @deprecated internal use only */ ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _events = this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        var len = _events.length;\n        for (var i = 0; i < len && !subscriber.closed; i++) {\n            subscriber.next(_events[i].value);\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject));\nvar ReplayEvent = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/ReplaySubject.js","// # src / rxjs.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n// Licensed under MIT\n\nimport { Subject } from \"rxjs/_esm5/Subject\";\nimport { ReplaySubject } from \"rxjs/_esm5/ReplaySubject\";\n\nexport const rxjsMixin = C =>\n  class extends C {\n    setupComponent(el, opts) {\n      const sideEffects = {};\n\n      this.subjects = {};\n      this.subjects.disconnect = new Subject();\n      this.subjects.document = new ReplaySubject();\n\n      Object.keys(this.constructor.types).map(key => {\n        this.subjects[key] = new ReplaySubject(1);\n        sideEffects[key] = x => this.subjects[key].next(x);\n      });\n\n      Object.defineProperty(this.constructor, \"sideEffects\", {\n        get: () => sideEffects,\n        set: () => {},\n        enumerable: true,\n        configurable: true,\n      });\n\n      super.setupComponent(el, opts);\n    }\n\n    connectComponent() {\n      super.connectComponent();\n      this.subjects.document.next(document);\n      Object.keys(this.constructor.types).map(key => this.subjects[key].next(this[key]));\n    }\n\n    disconnectComponent() {\n      super.disconnectComponent();\n      this.subjects.disconnect.next({});\n    }\n\n    adaptComponent() {\n      super.adaptComponent();\n      this.subjects.document.next(document);\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/hy-component/src/rxjs.js","export const array = (attr) => {\n  if (attr == null) return null;\n\n  const str = attr.trim()\n    .replace(/^\\[?(.*?)\\]?$/, '$1')\n    .split(',')\n    .map(x => x.trim());\n\n  return str || null;\n};\n\narray.stringify = a => (a && a.length > 0 ? a.join(',') : null);\n\nexport default array;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/attr-types/array.js","export const bool = (attr) => {\n  if (attr == null) return false;\n  const attr2 = (attr.trim && attr.trim()) || attr;\n  return !(\n    attr2 === 'false' ||\n    attr2 === 'null' ||\n    attr2 === 'undefined' ||\n    attr2 === '0' ||\n    attr2 === false\n  );\n};\n\nbool.stringify = b => (b ? '' : null);\n\nexport default bool;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/attr-types/bool.js","export const number = (attr) => {\n  if (attr == null) return null;\n  return Number(attr);\n};\n\nnumber.stringify = (n) => {\n  if (n == null) return null;\n  return `${n}`;\n};\n\nexport default number;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/attr-types/number.js","export const regex = (attr) => {\n  if (attr == null) return null;\n  const attr2 = (attr.trim && attr.trim()) || attr;\n  const match = attr2.match(/^\\/?(.*?)(\\/([gimy]*))?$/);\n  return new RegExp(match[1], match[3]);\n};\n\nregex.stringify = r => (r && r.toString()) || null;\n\nexport default regex;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/attr-types/regex.js","export const string = attr => attr;\n\nstring.stringify = s => s;\n\nexport default string;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/attr-types/string.js","/** PURE_IMPORTS_START ._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var OuterSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=OuterSubscriber.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/OuterSubscriber.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArrayLike = (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArrayLike.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isArrayLike.js","/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\nimport { root } from '../util/root';\nexport function symbolIteratorPonyfill(root) {\n    var Symbol = root.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexport var iterator = /*@__PURE__*/ symbolIteratorPonyfill(root);\n/**\n * @deprecated use iterator instead\n */\nexport var $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/symbol/iterator.js","/** PURE_IMPORTS_START ._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var InnerSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber));\n//# sourceMappingURL=InnerSubscriber.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/InnerSubscriber.js","// # src / url.js\n// Copyright 2013 Erik Arvidsson\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport let URL = window.URL;\n\nif (!URL || !URL.prototype || !(\"href\" in URL.prototype)) {\n  URL = function(url, base) {\n    if (!url) throw new TypeError(\"Invalid argument\");\n\n    var doc = document.implementation.createHTMLDocument(\"\");\n    if (base) {\n      var baseElement = doc.createElement(\"base\");\n      baseElement.href = base;\n      doc.head.appendChild(baseElement);\n    }\n    var anchorElement = doc.createElement(\"a\");\n    anchorElement.href = url;\n    doc.body.appendChild(anchorElement);\n\n    if (anchorElement.protocol === \":\" || !/:/.test(anchorElement.href))\n      throw new TypeError(\"Invalid URL\");\n\n    Object.defineProperty(this, \"_anchorElement\", { value: anchorElement });\n  };\n\n  URL.prototype = {\n    toString: function() {\n      return this.href;\n    },\n\n    get href() {\n      return this._anchorElement.href;\n    },\n    set href(value) {\n      this._anchorElement.href = value;\n    },\n\n    get protocol() {\n      return this._anchorElement.protocol;\n    },\n    set protocol(value) {\n      this._anchorElement.protocol = value;\n    },\n\n    /* NOT IMPLEMENTED\n    get username() {\n      return this._anchorElement.username;\n    },\n    set username(value) {\n      this._anchorElement.username = value;\n    },\n\n    get password() {\n      return this._anchorElement.password;\n    },\n    set password(value) {\n      this._anchorElement.password = value;\n    },\n\n    get origin() {\n      return this._anchorElement.origin;\n    }, */\n\n    get host() {\n      return this._anchorElement.host;\n    },\n    set host(value) {\n      this._anchorElement.host = value;\n    },\n\n    get hostname() {\n      return this._anchorElement.hostname;\n    },\n    set hostname(value) {\n      this._anchorElement.hostname = value;\n    },\n\n    get port() {\n      return this._anchorElement.port;\n    },\n    set port(value) {\n      this._anchorElement.port = value;\n    },\n\n    get pathname() {\n      return this._anchorElement.pathname;\n    },\n    set pathname(value) {\n      this._anchorElement.pathname = value;\n    },\n\n    get search() {\n      return this._anchorElement.search;\n    },\n    set search(value) {\n      this._anchorElement.search = value;\n    },\n\n    get hash() {\n      return this._anchorElement.hash;\n    },\n    set hash(value) {\n      this._anchorElement.hash = value;\n    },\n  };\n\n  var oldURL = window.URL || window.webkitURL || window.mozURL;\n\n  URL.createObjectURL = function(blob) {\n    return oldURL.createObjectURL.apply(oldURL, arguments);\n  };\n\n  URL.revokeObjectURL = function(url) {\n    return oldURL.revokeObjectURL.apply(oldURL, arguments);\n  };\n\n  Object.defineProperty(URL.prototype, \"toString\", { enumerable: false });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/url.js","// # src / mixin / constants.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// These are some 'types' that we use throught the component.\n// Going with strings here instead of classes + instanceof / dynamic dispatch for simplicity.\nexport const INIT = \"init\";\nexport const HINT = \"hint\";\nexport const PUSH = \"push\";\nexport const POP = \"pop\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/constants.js","/** PURE_IMPORTS_START .._Observable,.._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var DeferObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DeferObservable, _super);\n    function DeferObservable(observableFactory) {\n        _super.call(this);\n        this.observableFactory = observableFactory;\n    }\n    /**\n     * Creates an Observable that, on subscribe, calls an Observable factory to\n     * make an Observable for each new Observer.\n     *\n     * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n     * is subscribed.\n     * </span>\n     *\n     * <img src=\"./img/defer.png\" width=\"100%\">\n     *\n     * `defer` allows you to create the Observable only when the Observer\n     * subscribes, and create a fresh Observable for each Observer. It waits until\n     * an Observer subscribes to it, and then it generates an Observable,\n     * typically with an Observable factory function. It does this afresh for each\n     * subscriber, so although each subscriber may think it is subscribing to the\n     * same Observable, in fact each subscriber gets its own individual\n     * Observable.\n     *\n     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n     * var clicksOrInterval = Rx.Observable.defer(function () {\n     *   if (Math.random() > 0.5) {\n     *     return Rx.Observable.fromEvent(document, 'click');\n     *   } else {\n     *     return Rx.Observable.interval(1000);\n     *   }\n     * });\n     * clicksOrInterval.subscribe(x => console.log(x));\n     *\n     * // Results in the following behavior:\n     * // If the result of Math.random() is greater than 0.5 it will listen\n     * // for clicks anywhere on the \"document\"; when document is clicked it\n     * // will log a MouseEvent object to the console. If the result is less\n     * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n     *\n     * @see {@link create}\n     *\n     * @param {function(): SubscribableOrPromise} observableFactory The Observable\n     * factory function to invoke for each Observer that subscribes to the output\n     * Observable. May also return a Promise, which will be converted on the fly\n     * to an Observable.\n     * @return {Observable} An Observable whose Observers' subscriptions trigger\n     * an invocation of the given Observable factory function.\n     * @static true\n     * @name defer\n     * @owner Observable\n     */\n    DeferObservable.create = function (observableFactory) {\n        return new DeferObservable(observableFactory);\n    };\n    /** @deprecated internal use only */ DeferObservable.prototype._subscribe = function (subscriber) {\n        return new DeferSubscriber(subscriber, this.observableFactory);\n    };\n    return DeferObservable;\n}(Observable));\nvar DeferSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DeferSubscriber, _super);\n    function DeferSubscriber(destination, factory) {\n        _super.call(this, destination);\n        this.factory = factory;\n        this.tryDefer();\n    }\n    DeferSubscriber.prototype.tryDefer = function () {\n        try {\n            this._callFactory();\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    DeferSubscriber.prototype._callFactory = function () {\n        var result = this.factory();\n        if (result) {\n            this.add(subscribeToResult(this, result));\n        }\n    };\n    return DeferSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=DeferObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/DeferObservable.js","/** PURE_IMPORTS_START ._DeferObservable PURE_IMPORTS_END */\nimport { DeferObservable } from './DeferObservable';\nexport var defer = DeferObservable.create;\n//# sourceMappingURL=defer.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/defer.js","/** PURE_IMPORTS_START ._FromEventObservable PURE_IMPORTS_END */\nimport { FromEventObservable } from './FromEventObservable';\nexport var fromEvent = FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/fromEvent.js","/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var ScalarObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable));\n//# sourceMappingURL=ScalarObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/ScalarObservable.js","/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var EmptyObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    /** @deprecated internal use only */ EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable));\n//# sourceMappingURL=EmptyObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/EmptyObservable.js","/** PURE_IMPORTS_START .._Observable,._ScalarObservable,._EmptyObservable,.._util_isScheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { isScheduler } from '../util/isScheduler';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var ArrayObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable));\n//# sourceMappingURL=ArrayObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/ArrayObservable.js","/** PURE_IMPORTS_START ._AjaxObservable PURE_IMPORTS_END */\nimport { AjaxObservable } from './AjaxObservable';\nexport var ajax = AjaxObservable.create;\n//# sourceMappingURL=ajax.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/dom/ajax.js","/** PURE_IMPORTS_START .._Subject,.._Observable,.._Subscriber,.._Subscription,.._operators_refCount PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { SubjectSubscriber } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n/**\n * @class ConnectableObservable<T>\n */\nexport var ConnectableObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(/** @deprecated internal use only */ source, \n    /** @deprecated internal use only */ subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        /** @deprecated internal use only */ this._refCount = 0;\n        this._isComplete = false;\n    }\n    /** @deprecated internal use only */ ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    /** @deprecated internal use only */ ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return higherOrderRefCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable));\nvar connectableProto = ConnectableObservable.prototype;\nexport var connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated internal use only */ ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(SubjectSubscriber));\nvar RefCountOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    /** @deprecated internal use only */ RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/ConnectableObservable.js","/** PURE_IMPORTS_START ._ArrayObservable PURE_IMPORTS_END */\nimport { ArrayObservable } from './ArrayObservable';\nexport var of = ArrayObservable.of;\n//# sourceMappingURL=of.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/of.js","/** PURE_IMPORTS_START .._Observable,._ScalarObservable,._EmptyObservable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var ArrayLikeObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ArrayLikeObservable, _super);\n    function ArrayLikeObservable(arrayLike, scheduler) {\n        _super.call(this);\n        this.arrayLike = arrayLike;\n        this.scheduler = scheduler;\n        if (!scheduler && arrayLike.length === 1) {\n            this._isScalar = true;\n            this.value = arrayLike[0];\n        }\n    }\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\n        var length = arrayLike.length;\n        if (length === 0) {\n            return new EmptyObservable();\n        }\n        else if (length === 1) {\n            return new ScalarObservable(arrayLike[0], scheduler);\n        }\n        else {\n            return new ArrayLikeObservable(arrayLike, scheduler);\n        }\n    };\n    ArrayLikeObservable.dispatch = function (state) {\n        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;\n        if (subscriber.closed) {\n            return;\n        }\n        if (index >= length) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(arrayLike[index]);\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;\n        var length = arrayLike.length;\n        if (scheduler) {\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < length && !subscriber.closed; i++) {\n                subscriber.next(arrayLike[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayLikeObservable;\n}(Observable));\n//# sourceMappingURL=ArrayLikeObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/ArrayLikeObservable.js","/** PURE_IMPORTS_START .._util_isArray,.._util_isArrayLike,.._util_isPromise,._PromiseObservable,._IteratorObservable,._ArrayObservable,._ArrayLikeObservable,.._symbol_iterator,.._Observable,.._operators_observeOn,.._symbol_observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { isArray } from '../util/isArray';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { PromiseObservable } from './PromiseObservable';\nimport { IteratorObservable } from './IteratorObservable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { ArrayLikeObservable } from './ArrayLikeObservable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Observable } from '../Observable';\nimport { ObserveOnSubscriber } from '../operators/observeOn';\nimport { observable as Symbol_observable } from '../symbol/observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var FromObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        _super.call(this, null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 10 20 30\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 3 6 12 24 48 96 192 384 768 1536\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[Symbol_observable] === 'function') {\n                if (ish instanceof Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (isArray(ish)) {\n                return new ArrayObservable(ish, scheduler);\n            }\n            else if (isPromise(ish)) {\n                return new PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[Symbol_iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable(ish, scheduler);\n            }\n            else if (isArrayLike(ish)) {\n                return new ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n    };\n    /** @deprecated internal use only */ FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[Symbol_observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[Symbol_observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable));\n//# sourceMappingURL=FromObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/FromObservable.js","/** PURE_IMPORTS_START ._FromObservable PURE_IMPORTS_END */\nimport { FromObservable } from './FromObservable';\nexport var from = FromObservable.create;\n//# sourceMappingURL=from.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/from.js","/** PURE_IMPORTS_START .._Observable,.._util_noop PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var NeverObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(NeverObservable, _super);\n    function NeverObservable() {\n        _super.call(this);\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer.\n     *\n     * <span class=\"informal\">An Observable that never emits anything.</span>\n     *\n     * <img src=\"./img/never.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that emits\n     * neither values nor errors nor the completion notification. It can be used\n     * for testing purposes or for composing with other Observables. Please note\n     * that by never emitting a complete notification, this Observable keeps the\n     * subscription from being disposed automatically. Subscriptions need to be\n     * manually disposed.\n     *\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n     * function info() {\n     *   console.log('Will not be called');\n     * }\n     * var result = Rx.Observable.never().startWith(7);\n     * result.subscribe(x => console.log(x), info, info);\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @return {Observable} A \"never\" Observable: never emits anything.\n     * @static true\n     * @name never\n     * @owner Observable\n     */\n    NeverObservable.create = function () {\n        return new NeverObservable();\n    };\n    /** @deprecated internal use only */ NeverObservable.prototype._subscribe = function (subscriber) {\n        noop();\n    };\n    return NeverObservable;\n}(Observable));\n//# sourceMappingURL=NeverObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/NeverObservable.js","/** PURE_IMPORTS_START ._NeverObservable PURE_IMPORTS_END */\nimport { NeverObservable } from './NeverObservable';\nexport var never = NeverObservable.create;\n//# sourceMappingURL=never.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/never.js","// # src / mixin / operators.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { never } from \"rxjs/_esm5/observable/never\";\n\nimport { switchMap } from \"rxjs/_esm5/operators/switchMap\";\n\n// ### Observable extensions\n// #### Unsubscribe when\n// This operator unsubscribes from the source observable when `pauser$` emits a truthy value,\n// and re-subscribes when it emits a falsy value.\nexport const unsubscribeWhen = pauser$ => source => {\n  if (process.env.DEBUG && !pauser$) throw Error();\n  return pauser$.pipe(switchMap(paused => (paused ? never() : source)));\n};\n\n// #### Custom subscribe\n// A custom subscribe function that will `recover` from an error and log it to the console.\n// This is a line of last defense to make sure the entire pipeline/page doesn't crash.\n/*\nfunction subscribe(ne, er, co) {\n  let res = this;\n  if (process.env.DEBUG) res = this.pipe(tap({ error: e => console.error(e) }));\n  return res\n    .pipe(catchError((e, c) => c))\n    .subscribe(ne, er, co);\n}\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/operators.js","// # src / mixin / methods.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { isExternal, isHash } from \"../common\";\nimport { URL } from \"../url\";\n\nimport { PUSH, POP } from \"./constants\";\n\n// ## Functions\n// What you will notice about the following helper functions is that many make reference to `this`.\n// This is because they are invoked with the `::` operator, binding `this` to the component,\n// effectively turning them into (private) methods. Since the final export is a mixin,\n// we want to avoid potentially conflicting names as much as possible.\n\nexport const helperMixin = C =>\n  class extends C {\n    // Returns an identifier to mark frames on the history stack.\n    histId() {\n      return this.el.id || this.constructor.componentName;\n    }\n\n    // ### Event filters\n    shouldLoadAnchor(anchor, hrefRegex) {\n      return anchor && anchor.target === \"\" && (!hrefRegex || anchor.href.search(hrefRegex) !== -1);\n    }\n\n    isPushEvent({ url, anchor, event: { metaKey, ctrlKey } }) {\n      return (\n        !metaKey &&\n        !ctrlKey &&\n        this.shouldLoadAnchor(anchor, this.hrefRegex) &&\n        !isExternal(url, this)\n      );\n    }\n\n    isHintEvent({ url, anchor }) {\n      return (\n        this.shouldLoadAnchor(anchor, this.hrefRegex) &&\n        !isExternal(url, this) &&\n        !isHash(url, this)\n      );\n    }\n\n    // Determines if a pair of context's constitutes a hash change (vs. a page chagne)\n    // We take as a hash change when the pathname of the URLs is the same,\n    // and the `hash` isn't empty.\n    isHashChange([\n      {\n        url: { pathname: prevPathname },\n      },\n      {\n        url: { pathname, hash },\n        type,\n      },\n    ]) {\n      return pathname === prevPathname && (type === POP || (type === PUSH && hash !== \"\"));\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/methods.js","// # src / mixin / scrolling.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { getScrollTop, getScrollHeight } from \"../common\";\n\nimport { PUSH, POP } from \"./constants\";\n\n// ### Managing scroll positions\n// The following functions deal with managing the scroll position of the site.\n\nexport const scrollMixin = C =>\n  class extends C {\n    // Given a hash, find the element of the same id on the page, and scroll it into view.\n    // If no hash is provided, scroll to the top instead.\n    scrollHashIntoView(hash) {\n      if (hash) {\n        const el = document.getElementById(hash.substr(1));\n        if (el) el.scrollIntoView();\n        else if (process.env.DEBUG) console.warn(`Can't find element with id ${hash}`);\n      } else window.scroll(window.pageXOffset, 0);\n    }\n\n    // Takes the current history state, and restores the scroll position.\n    restoreScrollPostion() {\n      const id = this.histId(); // TODO\n      const state = (window.history.state && window.history.state[id]) || {};\n\n      // If the user has already moved the scroll position, we don't want to force the old position\n      const userHasScrolled = getScrollTop() != 0;\n      if (state.scrollTop != null && !userHasScrolled) {\n        // TODO: we set the min-height to ensure that we can scroll to the position that will\n        // eventually be occupied by the same content as before.\n        document.body.style.minHeight = state.scrollHeight;\n        window.scroll(window.pageXOffset, state.scrollTop);\n        /* document.body.style.minHeight = ''; */\n      } else if (state.hash) {\n        this.scrollHashIntoView(window.location.hash);\n      }\n    }\n\n    // TODO\n    manageScrollPostion({ type, url: { hash } }) {\n      if (type === PUSH) {\n        this.scrollHashIntoView(hash);\n      }\n\n      if (type === POP && this.scrollRestoration) {\n        this.restoreScrollPostion();\n      }\n    }\n\n    saveScrollPosition(state) {\n      const id = this.histId();\n      return Object.assign(state, {\n        [id]: Object.assign(state[id] || {}, {\n          scrollTop: getScrollTop(),\n          scrollHeight: getScrollHeight(),\n        }),\n      });\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/scrolling.js","// # src / mixin / history.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// ## Overview\n// This file contains helper funtions related to managing the History API.\n\n// ## Imports\nimport { isExternal } from \"../common\";\n\nimport { PUSH, INIT } from \"./constants\";\nimport { scrollMixin } from \"./scrolling\";\n\nexport const historyMixin = C =>\n  class extends scrollMixin(C) {\n    // ## Update History state\n    // add a new entry on the history stack, assuming the href is differnt.\n    updateHistoryState({ type, replace, url: { href, hash } }) {\n      if ((type === PUSH || type === INIT) && !isExternal(this)) {\n        const id = this.histId();\n        const method = replace || href === window.location.href ? \"replaceState\" : \"pushState\";\n        const state = Object.assign(window.history.state || {}, {\n          [id]: { hash: !!hash },\n        });\n        window.history[method](state, document.title, href);\n      }\n    }\n\n    updateHistoryStateHash({ type, url }) {\n      const { hash, href } = url;\n\n      if (type === PUSH && !isExternal(this)) {\n        const id = this.histId();\n        const currState = Object.assign(window.history.state, {\n          [id]: Object.assign(window.history.state[id], { hash: true }),\n        });\n        const nextState = {\n          [id]: { hash: true },\n        };\n        window.history.replaceState(currState, document.title, window.location.href);\n        window.history.pushState(nextState, document.title, href);\n      }\n\n      this.scrollHashIntoView(hash);\n    }\n\n    updateHistoryTitle({ type, title }) {\n      document.title = title;\n\n      if (type === PUSH && !isExternal(this)) {\n        window.history.replaceState(window.history.state, title, window.location);\n      }\n    }\n\n    saveScrollHistoryState() {\n      if (isExternal(this)) return;\n\n      const state = this.saveScrollPosition(window.history.state || {});\n      window.history.replaceState(state, document.title, window.location);\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/history.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport var ArgumentOutOfRangeError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var err = _super.call(this, 'argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/ArgumentOutOfRangeError.js","// # src / mixin / fetching.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// ## Overview\n// This file contains helper functions related to fetching new content.\n\n// ## Imports\nimport { of } from \"rxjs/_esm5/observable/of\";\n\nimport { map } from \"rxjs/_esm5/operators/map\";\nimport { take } from \"rxjs/_esm5/operators/take\";\nimport { zip } from \"rxjs/_esm5/operators/zip\";\n\nexport const fetchMixin = C =>\n  class extends C {\n    // ## Fetching\n    // The `ajax` method will throw when it encoutners an a 400+ status code,\n    // however these are still valid responses from the server that can be shown using this component.\n    // This assumes error pages have the same HTML strcuture as the other pages though.\n    recoverIfResponse(context, error) {\n      const { status, xhr } = error;\n\n      // If we have a response, recover and continue with the pipeline.\n      if (xhr && xhr.response && status > 400) {\n        return of(Object.assign(context, { response: xhr.response }));\n      }\n\n      // If we don't have a response, this is an acutal error that should be dealt with.\n      return of(Object.assign(context, { error }));\n    }\n\n    // This function returns the request that matches a given URL.\n    // The way the pipeline is set up,\n    // it is either the `latestPrefetch` value (when the request is already completed),\n    // or the next value on the prefetch observable (when still in progress).\n    getFetch$(\n      {\n        url: { href },\n      },\n      latestPrefetch,\n      prefetch$\n    ) {\n      return href === latestPrefetch.url.href && latestPrefetch.error == null\n        ? of(latestPrefetch)\n        : prefetch$.pipe(take(1));\n    }\n\n    // Returns an observable that emits exactly one notice, which contains the response.\n    // It will not emit until an (optional) page transition animation completes.\n    getResponse(prefetch$, [context, latestPrefetch]) {\n      return this.getFetch$(context, latestPrefetch, prefetch$).pipe(\n        map(fetch => Object.assign(fetch, context)),\n        zip(this.animPromise, x => x)\n      );\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/fetching.js","// # src / mixin / script-hack.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Observable } from \"rxjs/_esm5/Observable\";\n\n// Importing the subset of RxJS functions that we are going to use.\nimport { from } from \"rxjs/_esm5/observable/from\";\nimport { of } from \"rxjs/_esm5/observable/of\";\n\nimport { catchError } from \"rxjs/_esm5/operators/catchError\";\nimport { tap } from \"rxjs/_esm5/operators/tap\";\nimport { concatMap } from \"rxjs/_esm5/operators/concatMap\";\n\n// ### Experimental script feature\n// TODO\nexport const scriptMixin = C =>\n  class extends C {\n    // This function removes all script tags (as query'ed by `scriptSelector`) from the response.\n    tempRemoveScriptTags(replaceEls) {\n      const scripts = [];\n\n      replaceEls.forEach(docfrag =>\n        Array.from(docfrag.querySelectorAll(this.scriptSelector)).forEach(script => {\n          const pair = [script, script.previousSibling];\n          script.parentNode.removeChild(script);\n          scripts.push(pair);\n        })\n      );\n\n      return scripts;\n    }\n\n    // Attempts to (synchronously) insert a `script` tag into the DOM, *before* a given `ref` element.\n    insertScript([script, ref]) {\n      // Temporarily overwrite `document.wirte` to simulate its behavior during the initial load.\n      // This only works because scripts are inserted one-at-a-time (via `concatMap`).\n      const originalWrite = document.write;\n\n      document.write = (...args) => {\n        const temp = document.createElement(\"div\");\n        temp.innerHTML = args.join();\n        Array.from(temp.childNodes).forEach(node => {\n          ref.parentNode.insertBefore(node, ref.nextSibling);\n        });\n      };\n\n      // If the script tag needs to fetch its source code, we insert it into the DOM,\n      // but we return an observable that only completes once the script has fired its `load` event.\n      return script.src !== \"\"\n        ? Observable.create(observer => {\n            script.addEventListener(\"load\", x => {\n              document.write = originalWrite;\n              observer.complete(x);\n            });\n\n            script.addEventListener(\"error\", x => {\n              document.write = originalWrite;\n              observer.error(x);\n            });\n\n            ref.parentNode.insertBefore(script, ref.nextSibling);\n          })\n        : // Otherwise we insert it into the DOM and reset the `document.write` function.\n          of({}).pipe(\n            tap(() => {\n              ref.parentNode.insertBefore(script, ref.nextSibling);\n              document.write = originalWrite;\n            })\n          );\n    }\n\n    // Takes a list of `script`--`ref` pairs, and inserts them into the DOM one-by-one.\n    reinsertScriptTags(context) {\n      if (!this.scriptSelector) return of(context);\n\n      const { scripts } = context;\n\n      return from(scripts)\n        .pipe(\n          concatMap(this.insertScript.bind(this)),\n          catchError(error => {\n            throw Object.assign(context, { error });\n          })\n        )\n        .toPromise()\n        .then(() => context);\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/script-hack.js","// # src / mixin / update.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { fragmentFromString, isExternal } from \"../common\";\n\nimport { PUSH } from \"./constants\";\nimport { scriptMixin } from \"./script-hack\";\n\nexport const updateMixin = C =>\n  class extends scriptMixin(C) {\n    // Extracts the title of the page\n    getTitle(fragment) {\n      return (fragment.querySelector(\"title\") || {}).textContent;\n    }\n\n    // Extracts the elements to be replaced\n    getReplaceElements(fragment) {\n      if (this.replaceIds.length > 0) {\n        return this.replaceIds.map(id => fragment.getElementById(id));\n      } else if (this.el.id) {\n        return [fragment.getElementById(this.el.id)];\n      } else {\n        const index = Array.from(document.getElementsByTagName(this.el.tagName)).indexOf(this.el);\n        return [fragment.querySelectorAll(this.el.tagName)[index]];\n      }\n    }\n\n    // Takes the response string and turns it into document fragments\n    // that can be inserted into the DOM.\n    responseToContent(context) {\n      const { response } = context;\n\n      const fragment = fragmentFromString(response);\n      const title = this.getTitle(fragment);\n      const replaceEls = this.getReplaceElements(fragment);\n\n      if (replaceEls.some(x => x == null)) {\n        throw Object.assign(context, { replaceElMissing: true });\n      }\n\n      const scripts = this.scriptSelector ? this.tempRemoveScriptTags(replaceEls) : [];\n\n      return Object.assign(context, { title, replaceEls, scripts });\n    }\n\n    // Replaces the old elments with the new one, one-by-one.\n    replaceContentByIds(elements) {\n      this.replaceIds.map(id => document.getElementById(id)).forEach((oldElement, i) => {\n        oldElement.parentNode.replaceChild(elements[i], oldElement);\n      });\n    }\n\n    // When no `relaceIds` are set, replace the entire content of the component (slow).\n    replaceContentWholesale([el]) {\n      this.el.innerHTML = el.innerHTML;\n    }\n\n    // TODO: doc\n    replaceContent(replaceEls) {\n      if (this.replaceIds.length > 0) {\n        this.replaceContentByIds(replaceEls);\n      } else {\n        this.replaceContentWholesale(replaceEls);\n      }\n    }\n\n    // TODO: doc\n    updateDOM(context) {\n      try {\n        const { replaceEls } = context;\n        this.updateHistoryTitle(context);\n        if (isExternal(this)) this.rewriteURLs(replaceEls);\n        this.replaceContent(replaceEls);\n      } catch (error) {\n        throw Object.assign(context, { error });\n      }\n    }\n\n    // When fetching documents from an external source,\n    // relative URLs will be resolved relative to the current `window.location`.\n    // We can rewrite URL to absolute urls\n    rewriteURLs(replaceEls) {\n      replaceEls.forEach(el => {\n        /* console.time(); */\n        el.querySelectorAll(\"[href]\").forEach(this.rewriteURL(\"href\"));\n        el.querySelectorAll(\"[src]\").forEach(this.rewriteURL(\"src\"));\n        el.querySelectorAll(\"img[srcset]\").forEach(this.rewriteURLSrcSet(\"srcset\"));\n        el.querySelectorAll(\"blockquote[cite]\").forEach(this.rewriteURL(\"cite\"));\n        el.querySelectorAll(\"del[cite]\").forEach(this.rewriteURL(\"cite\"));\n        el.querySelectorAll(\"ins[cite]\").forEach(this.rewriteURL(\"cite\"));\n        el.querySelectorAll(\"q[cite]\").forEach(this.rewriteURL(\"cite\"));\n        el.querySelectorAll(\"img[longdesc]\").forEach(this.rewriteURL(\"longdesc\"));\n        el.querySelectorAll(\"frame[longdesc]\").forEach(this.rewriteURL(\"longdesc\"));\n        el.querySelectorAll(\"iframe[longdesc]\").forEach(this.rewriteURL(\"longdesc\"));\n        el.querySelectorAll(\"img[usemap]\").forEach(this.rewriteURL(\"usemap\"));\n        el.querySelectorAll(\"input[usemap]\").forEach(this.rewriteURL(\"usemap\"));\n        el.querySelectorAll(\"object[usemap]\").forEach(this.rewriteURL(\"usemap\"));\n        el.querySelectorAll(\"form[action]\").forEach(this.rewriteURL(\"action\"));\n        el.querySelectorAll(\"button[formaction]\").forEach(this.rewriteURL(\"formaction\"));\n        el.querySelectorAll(\"input[formaction]\").forEach(this.rewriteURL(\"formaction\"));\n        el.querySelectorAll(\"video[poster]\").forEach(this.rewriteURL(\"poster\"));\n        el.querySelectorAll(\"object[data]\").forEach(this.rewriteURL(\"data\"));\n        el.querySelectorAll(\"object[codebase]\").forEach(this.rewriteURL(\"codebase\"));\n        el.querySelectorAll(\"object[archive]\").forEach(this.rewriteURLList(\"archive\"));\n        /* console.timeEnd(); */\n        /* el.querySelectorAll(\"command[icon]\").forEach(this.rewriteURL(\"icon\")); */ // obsolte\n      });\n    }\n\n    rewriteURL(attr) {\n      return el => {\n        try {\n          el.setAttribute(attr, new URL(el.getAttribute(attr), this.href).href);\n        } catch (e) {\n          if (process.env.DEBUG)\n            console.warn(`Couldn't rewrite URL in attribute ${attr} on element`, el);\n        }\n      };\n    }\n\n    rewriteURLSrcSet(attr) {\n      return el => {\n        try {\n          el.setAttribute(\n            attr,\n            el\n              .getAttribute(attr)\n              .split(/\\s*,\\s*/)\n              .map(str => {\n                const pair = str.split(/\\s+/);\n                pair[0] = new URL(pair[0], this.href).href;\n                return pair.join(\" \");\n              })\n              .join(\", \")\n          );\n        } catch (e) {\n          if (process.env.DEBUG)\n            console.warn(`Couldn't rewrite URLs in attribute ${attr} on element`, el);\n        }\n      };\n    }\n\n    rewriteURLList(attr) {\n      return el => {\n        try {\n          el.setAttribute(\n            attr,\n            el\n              .getAttribute(attr)\n              .split(/[\\s,]+/)\n              .map(str => new URL(str, this.href).href)\n              .join(\", \")\n          );\n        } catch (e) {\n          if (process.env.DEBUG)\n            console.warn(`Couldn't rewrite URLs in attribute ${attr} on element`, el);\n        }\n      };\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/update.js","/** PURE_IMPORTS_START ._AsyncAction,._AsyncScheduler PURE_IMPORTS_END */\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexport var async = /*@__PURE__*/ new AsyncScheduler(AsyncAction);\n//# sourceMappingURL=async.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/scheduler/async.js","/** PURE_IMPORTS_START .._util_isNumeric,.._Observable,.._scheduler_async,.._util_isScheduler,.._util_isDate PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { isNumeric } from '../util/isNumeric';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isDate } from '../util/isDate';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var TimerObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) {\n            dueTime = 0;\n        }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler(scheduler)) {\n            scheduler = async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate(dueTime) ?\n            (+dueTime - this.scheduler.now()) :\n            dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) {\n            initialDelay = 0;\n        }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    /** @deprecated internal use only */ TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable));\n//# sourceMappingURL=TimerObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/TimerObservable.js","/** PURE_IMPORTS_START ._TimerObservable PURE_IMPORTS_END */\nimport { TimerObservable } from './TimerObservable';\nexport var timer = TimerObservable.create;\n//# sourceMappingURL=timer.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/timer.js","// # src / mixin / events.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Observable } from \"rxjs/_esm5/Observable\";\nimport { timer } from \"rxjs/_esm5/observable/timer\";\n\n// ### Event functions\n// These functions are called at various points along the observable pipeline to fire events,\n// and cause other side effects.\nexport const eventMixin = C =>\n  class extends C {\n    // #### On start\n    onStart(context) {\n      // By default, hy-push-state will wait at least `duration` ms before replacing the content,\n      // so that animations have enough time to finish.\n      // The behavior is encoded with a promise that resolves after `duration` ms.\n      this.animPromise = timer(this.duration);\n\n      // The `waitUntil` function lets users of this component override the animation promise.\n      // This allows for event-based code execution, rather than timing-based, which prevents hiccups\n      // and glitches when, for example, painting takes longer than expected.\n      const waitUntil = promise => {\n        if (process.env.DEBUG && !(promise instanceof Promise || promise instanceof Observable)) {\n          console.warn(\"waitUntil expects a Promise as first argument.\");\n        }\n        this.animPromise = promise;\n      };\n\n      this.fireEvent(\"start\", {\n        detail: Object.assign(context, { waitUntil }),\n      });\n    }\n\n    // Example usage of `waitUntil`:\n    //\n    // ```js\n    // hyPushStateEl.addEventListener('hy-push-state-start', ({ detail }) => {\n    //   const animPromise = new Promise((resolve) => {\n    //     const anim = myContent.animate(...);\n    //     anim.addEventListener('finish', resolve);\n    //   });\n    //   detail.waitUntil(animPromise);\n    // });\n    // ```\n    // {:style=\"font-style:italic\"}\n\n    // #### Error callbacks\n    // This function handles errors while trying to insert the new content into the document.\n    // If the retrieved documened doesn't contain the ids we are looking for\n    // we can't insert the content dynamically, so we tell the browser to open the link directly.\n    onDOMError(context) {\n      const { replaceElMissing, url } = context;\n\n      // Ideally you should prevent this situation by adding the\n      // `no-push-state` CSS class\n      // on links to documents that don't match the expected document layout.\n      // This only serves as a fallback.\n      if (replaceElMissing) {\n        if (process.env.DEBUG) {\n          const ids = this.replaceIds\n            .concat(this.el.id || [])\n            .map(x => `#${x}`)\n            .join(\", \");\n          console.warn(\n            `Couldn't find one or more ids of '${ids}' in the document at '${\n              window.location\n            }'. Opening the link directly.`\n          );\n        }\n\n        // To open the link directly, we first pop one entry off the browser history.\n        // We have to do this because (some) browsers won't handle the back button correctly otherwise.\n        // We then wait for a short time and change the document's location.\n        // TODO: If we didn't call `pushState` optimistically we wouldn't have to do this.\n        window.history.back();\n        setTimeout(() => {\n          document.location.href = url;\n        }, 100);\n\n        // If it's a different error, throw the generic `error` event.\n      } else {\n        if (process.env.DEBUG) console.error(context);\n        this.fireEvent(\"error\", { detail: context });\n      }\n    }\n\n    // If there is a network error during (pre-) fetching, fire `networkerror` event.\n    onNetworkError(context) {\n      if (process.env.DEBUG) console.error(context);\n      this.fireEvent(\"networkerror\", { detail: context });\n    }\n\n    // When using the experimental script feature,\n    // fire `scripterror` event if something goes wrong during script insertion.\n    onError(context) {\n      if (process.env.DEBUG) console.error(context);\n      this.fireEvent(\"error\", { detail: context });\n    }\n\n    // #### Others\n    // These event callbacks simply fire an event and pass the context as `detail`.\n    onReady(context) {\n      this.fireEvent(\"ready\", { detail: context });\n    }\n\n    onAfter(context) {\n      this.fireEvent(\"after\", { detail: context });\n    }\n\n    onProgress(context) {\n      this.fireEvent(\"progress\", { detail: context });\n    }\n\n    onLoad(context) {\n      this.fireEvent(\"load\", { detail: context });\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/events.js","// # src / mixin / event-listeners.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Observable } from \"rxjs/_esm5/Observable\";\n\nimport { matches, matchesAncestors } from \"../common\";\n\nexport const eventListenersMixin = C =>\n  class extends C {\n    setupEventListeners() {\n      // #### Keeping track of links\n      // We use a `MutationObserver` to keep track of all the links inside the component,\n      // and put events on the `pushSubject` and `hintSubject` observables,\n      // but first we need to check if `MutationObserver` is available.\n      if (\"MutationObserver\" in window && \"WeakSet\" in window) {\n        // A `Set` of `Element`s.\n        // We use this to keep track of which links already have their event listeners registered.\n        const links = new WeakSet();\n\n        // Binding `next` functions to their `Subject`s,\n        // so that we can pass them as callbacks directly. This is just for convenience.\n        const pushNext = this.pushSubject.next.bind(this.pushSubject);\n        const hintNext = this.hintSubject.next.bind(this.hintSubject);\n\n        // We don't use `Observable.fromEvent` here to avoid creating too many observables.\n        // Registering an unknown number of event listeners is somewhat debatable,\n        // but we certainly don't want to make it wrose.\n        // (The number could be brought down by using an `IntersectionObserver` in the future.\n        // Also note that typically there will be an animation playing while this is happening,\n        // so the effects are not easily noticed).\n        //\n        // In any case, `MutationObserver` and `Set` help us keep track of which links are children\n        // of this component, so that we can reliably add and remove the event listeners.\n        // The function to be called for every added node:\n        const addLink = link => {\n          if (!links.has(link)) {\n            links.add(link);\n            link.addEventListener(\"click\", pushNext);\n            link.addEventListener(\"mouseenter\", hintNext, { passive: true });\n            link.addEventListener(\"touchstart\", hintNext, { passive: true });\n            link.addEventListener(\"focus\", hintNext, { passive: true });\n\n            // When fetching resources from an external domain, rewrite the link's href,\n            // so that shift-click, etc works as expected.\n            // if (isExternal(this)) {\n            //   link.href = new URL(link.getAttribute(\"href\"), this.href).href;\n            // }\n          }\n        };\n\n        const addListeners = addedNode => {\n          if (addedNode instanceof Element) {\n            if (matches.call(addedNode, this.linkSelector)) {\n              addLink(addedNode);\n            } else {\n              Array.from(addedNode.querySelectorAll(this.linkSelector)).forEach(addLink);\n            }\n          }\n        };\n\n        // Next, The function to be called for every removed node.\n        // Usually the elments will be removed from the document altogher\n        // when they are removed from this component,\n        // but since we can't be sure, we remove the event listeners anyway.\n        const removeLink = link => {\n          links.delete(link);\n          link.removeEventListener(\"click\", pushNext);\n          link.removeEventListener(\"mouseenter\", hintNext, { passive: true });\n          link.removeEventListener(\"touchstart\", hintNext, { passive: true });\n          link.removeEventListener(\"focus\", hintNext, { passive: true });\n        };\n\n        const removeListeners = removedNode => {\n          if (removedNode instanceof Element) {\n            if (matches.call(removedNode, this.linkSelector)) {\n              removeLink(removedNode);\n            } else {\n              Array.from(removedNode.querySelectorAll(this.linkSelector)).forEach(removeLink);\n            }\n          }\n        };\n\n        // An observable wrapper around the mutation observer.\n        // We're only interested in nodes entering and leaving the entire subtree of this component,\n        // but not attribute changes.\n        Observable.create(obs => {\n          const next = obs.next.bind(obs);\n          this.mutationObserver = new MutationObserver(mutations =>\n            Array.from(mutations).forEach(next)\n          );\n          this.mutationObserver.observe(this.el, {\n            childList: true,\n            subtree: true,\n          });\n        })\n          // For every mutation, we remove the event listeners of elements that go out of the component\n          // (if any), and add event listeners to all elements that make it into the compnent (if any).\n          .subscribe(({ addedNodes, removedNodes }) => {\n            Array.from(removedNodes).forEach(removeListeners.bind(this));\n            Array.from(addedNodes).forEach(addListeners.bind(this));\n          });\n\n        // TODO\n        this.subjects.linkSelector.subscribe(() => {\n          // TODO\n          Array.from(links).forEach(removeLink);\n\n          // The mutation observer does not pick up the links that are already on the page,\n          // so we add them manually here, once.\n          addListeners.call(this, this.el);\n        });\n\n        // If we don't have `MutationObserver` and `Set`, we just register a `click` event listener\n        // on the entire component, and check if a click occurred on one of our links.\n        // Note that we can't reliably generate hints this way, so we don't.\n      } else {\n        this.el.addEventListener(\"click\", event => {\n          const anchor = matchesAncestors.call(event.target, this.linkSelector);\n          if (anchor && anchor.href) {\n            event.currentTarget = anchor; // eslint-disable-line no-param-reassign\n            pushSubject.next(event);\n          }\n        });\n      }\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/event-listeners.js","// # src / mixin / setup.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Subject } from \"rxjs/_esm5/Subject\";\n\n// Importing the subset of RxJS functions that we are going to use.\nimport { defer } from \"rxjs/_esm5/observable/defer\";\nimport { fromEvent } from \"rxjs/_esm5/observable/fromEvent\";\nimport { merge } from \"rxjs/_esm5/observable/merge\";\n\nimport { ajax } from \"rxjs/_esm5/observable/dom/ajax\";\n\nimport { catchError } from \"rxjs/_esm5/operators/catchError\";\nimport { tap } from \"rxjs/_esm5/operators/tap\";\nimport { distinctUntilChanged } from \"rxjs/_esm5/operators/distinctUntilChanged\";\nimport { filter } from \"rxjs/_esm5/operators/filter\";\nimport { map } from \"rxjs/_esm5/operators/map\";\nimport { mapTo } from \"rxjs/_esm5/operators/mapTo\";\nimport { partition } from \"rxjs/_esm5/operators/partition\";\nimport { pairwise } from \"rxjs/_esm5/operators/pairwise\";\nimport { share } from \"rxjs/_esm5/operators/share\";\nimport { startWith } from \"rxjs/_esm5/operators/startWith\";\nimport { switchMap } from \"rxjs/_esm5/operators/switchMap\";\nimport { takeUntil } from \"rxjs/_esm5/operators/takeUntil\";\nimport { withLatestFrom } from \"rxjs/_esm5/operators/withLatestFrom\";\n\nimport { isExternal } from \"../common\";\nimport { URL } from \"../url\";\n\nimport { HINT, PUSH, POP } from \"./constants\";\nimport { unsubscribeWhen } from \"./operators\";\n\nimport { helperMixin } from \"./methods\";\nimport { historyMixin } from \"./history\";\nimport { fetchMixin } from \"./fetching\";\nimport { updateMixin } from \"./update\";\nimport { eventMixin } from \"./events\";\nimport { eventListenersMixin } from \"./event-listeners\";\n\nexport const setupObservablesMixin = C =>\n  class extends eventListenersMixin(\n    eventMixin(updateMixin(fetchMixin(historyMixin(helperMixin(C)))))\n  ) {\n    // A compare function for contexts, used in combination with `distinctUntilChanged`.\n    // We use `cacheNr` as it is a convenient (hacky) way of circumventing\n    // `distinctUntilChanged` when retrying requests.\n    compareContext(p, q) {\n      return p.url.href === q.url.href && p.error === q.error && p.cacheNr === q.cacheNr;\n    }\n\n    // ### Setup observable\n    // This functions sets up the core observable pipeline of this component.\n    setupObservables() {\n      this.cacheNr = 1;\n\n      // For now, we take for granted that we have a stream of all `PUSH` events (loading a new page by\n      // clicking on a link) and `HINT` events (probable click on a link) which are `pushSubject` and\n      // `hintSubject` respectively.\n      this.pushSubject = new Subject();\n      this.hintSubject = new Subject();\n\n      // TODO: doc\n      const push$ = this.pushSubject.pipe(\n        takeUntil(this.subjects.disconnect),\n        map(event => ({\n          type: PUSH,\n          url: new URL(event.currentTarget.href, this.href),\n          anchor: event.currentTarget,\n          event,\n          cacheNr: this.cacheNr,\n        })),\n        filter(this.isPushEvent.bind(this)),\n        tap(({ event }) => {\n          event.preventDefault();\n          this.saveScrollHistoryState();\n        })\n      );\n\n      // In additon to `HINT` and `PUSH` events, there's also `POP` events, which are caused by\n      // modifying the browser history, e.g. clicking the back button, etc.\n      const pop$ = fromEvent(window, \"popstate\").pipe(\n        takeUntil(this.subjects.disconnect),\n        filter(() => window.history.state && window.history.state[this.histId()]),\n        map(event => ({\n          type: POP,\n          url: new URL(window.location, this.href),\n          event,\n          cacheNr: this.cacheNr,\n        }))\n      );\n\n      const reload$ = this.reload$.pipe(takeUntil(this.subjects.disconnect));\n\n      // TODO: doc\n      const [hash$, page$] = merge(push$, pop$, reload$)\n        .pipe(\n          startWith({ url: new URL(this.initialHref) }),\n          // HACK: make hy-push-state mimic window.location?\n          tap(({ url }) => (this._url = url)),\n          pairwise(),\n          share(),\n          partition(this.isHashChange)\n        )\n        .map(obs$ => obs$.pipe(map(([, x]) => x), share()));\n\n      // We don't want to prefetch (i.e. use bandwidth) for a _possible_ page load,\n      // while a _certain_ page load is going on.\n      // The `pauser$` observable let's us achieve this.\n      // Needs to be deferred b/c of \"cyclical\" dependency.\n      const pauser$ = defer(() =>\n        // A page change event means we want to pause prefetching, while\n        // a response event means we want to resume prefetching.\n        merge(page$.pipe(mapTo(true)), this.fetch$.pipe(mapTo(false)))\n      )\n        // Start with `false`, i.e. we want the prefetch pipelien to be active\n        .pipe(startWith(false), share());\n\n      // TODO: doc\n      const hint$ = this.hintSubject.pipe(\n        takeUntil(this.subjects.disconnect),\n        unsubscribeWhen(pauser$),\n        map(event => ({\n          type: HINT,\n          url: new URL(event.currentTarget.href, this.href),\n          anchor: event.currentTarget,\n          event,\n          cacheNr: this.cacheNr,\n        })),\n        filter(this.isHintEvent.bind(this))\n      );\n\n      // The stream of (pre-)fetch events.\n      // Includes definitive page change events do deal with unexpected page changes.\n      const prefetch$ = merge(hint$, page$).pipe(\n        // Don't abort a request if the user \"jiggles\" over a link\n        distinctUntilChanged(this.compareContext.bind(this)),\n        switchMap(context =>\n          ajax({\n            method: \"GET\",\n            responseType: \"text\",\n            url: context.url,\n            crossDomain: isExternal(this),\n          }).pipe(\n            map(({ response }) => Object.assign(context, { response })),\n            catchError(error => this.recoverIfResponse(context, error))\n          )\n        ),\n        // Start with some value so `withLatestFrom` below doesn't \"block\"\n        startWith({ url: {} }),\n        share()\n      );\n\n      // TODO: doc\n      this.fetch$ = page$.pipe(\n        tap(context => {\n          this.updateHistoryState(context);\n          this.onStart(context);\n        }),\n        withLatestFrom(prefetch$),\n        switchMap(this.getResponse.bind(this, prefetch$)),\n        share()\n      );\n\n      // TODO: doc\n      const [fetchOk$, fetchError$] = this.fetch$.pipe(partition(({ error }) => !error));\n\n      // TODO: doc\n      const main$ = fetchOk$.pipe(\n        map(this.responseToContent.bind(this)),\n        tap(context => {\n          this.onReady(context);\n          this.updateDOM(context);\n          this.onAfter(context);\n          this.manageScrollPostion(context);\n        }),\n        tap({ error: e => this.onDOMError(e) }),\n        catchError((e, c) => c),\n\n        // If the experimental script feature is enabled,\n        // scripts tags have been stripped from the content,\n        // and this is where we insert them again.\n        switchMap(this.reinsertScriptTags.bind(this)),\n        tap({ error: e => this.onError(e) }),\n        catchError((e, c) => c)\n      );\n\n      // #### Subscriptions\n      // Subscribe to main and hash observables.\n      main$.subscribe(this.onLoad.bind(this));\n      hash$.subscribe(this.updateHistoryStateHash.bind(this));\n\n      // Subscribe to the fetch error branch.\n      fetchError$.subscribe(this.onNetworkError.bind(this));\n\n      // Fire `progress` event when fetching takes longer than expected.\n      page$\n        .pipe(\n          switchMap(context =>\n            defer(() => this.animPromise).pipe(takeUntil(this.fetch$), mapTo(context))\n          )\n        )\n        .subscribe(this.onProgress.bind(this));\n\n      // TODO: doc\n      this.setupEventListeners();\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/setup.js","// # src / mixin / index.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// ## Overview\n// This component is written in [RxJS] and reading its code requires some basic understanding\n// of how RxJS works. It may also serve as an example of how to use RxJS.\n//\n// Other than RxJS, you should be familiar with [ES6 Mixin][esmixins],\n// which is a clever way of using the ES6 class syntax to achieve inheritance-based mixins.\n// The mixin in the main export of this file.\n\n// ## Imports\n// Including the patches for ES6+ functions, but\n// there is a -lite version of the component that comes without these.\n// import 'core-js/fn/array/for-each';\n// import 'core-js/fn/array/from';\n// import 'core-js/fn/function/bind';\n// import 'core-js/fn/object/assign';\n\n// Importing the hy-compontent base libary,\n// which helps with making multiple versions of the component (Vanilla JS, WebComponent, etc...).\nimport { componentMixin, COMPONENT_FEATURE_TESTS, Set } from \"hy-component/src/component\";\nimport { rxjsMixin } from \"hy-component/src/rxjs\";\nimport { array, bool, number, regex, string } from \"hy-component/src/types\";\n\nimport { Subject } from \"rxjs/_esm5/Subject\";\nimport { takeUntil } from \"rxjs/_esm5/operators/takeUntil\";\n\n// Partial polyfill of the URL class. Only provides the most basic funtionality of `URL`,\n// but sufficient for this compoennt.\nimport { URL } from \"../url\";\nimport { isExternal } from \"../common\";\n\nimport { INIT, HINT, PUSH, POP } from \"./constants\";\nimport { setupObservablesMixin } from \"./setup\";\n\nexport { INIT, HINT, PUSH, POP };\n\n// ## Constants\n// A set of [Modernizr] tests that are required to run this component.\n// These are the bare-minimum requirements, more ad-hoc features tests for optional behavior\n// is part of the code below.\nexport const MIXIN_FEATURE_TESTS = new Set([\n  ...COMPONENT_FEATURE_TESTS,\n  \"documentfragment\",\n  \"eventlistener\",\n  \"history\",\n  \"promises\",\n  \"queryselector\",\n  \"requestanimationframe\",\n]);\n\nexport { Set };\n\n// Patching the document fragment's `getElementById` function, which is\n// not implemented in all browsers, even some modern ones.\nDocumentFragment.prototype.getElementById =\n  DocumentFragment.prototype.getElementById ||\n  function getElementById(id) {\n    return this.querySelector(`#${id}`);\n  };\n\n// ## Push state mixin\nexport const pushStateMixin = C =>\n  class extends setupObservablesMixin(rxjsMixin(componentMixin(C))) {\n    // The name of the component (required by hy-component)\n    static get componentName() {\n      return \"hy-push-state\";\n    }\n\n    // ### Options\n    // The default values (and types) of the configuration options (required by hy-component)\n    // See [Options](../../options.md) for usage information.\n    static get types() {\n      return {\n        replaceIds: array,\n        linkSelector: string,\n        scrollRestoration: bool,\n        duration: number,\n        hrefRegex: regex,\n        scriptSelector: string,\n        initialHref: string,\n      };\n    }\n\n    static get defaults() {\n      return {\n        replaceIds: [],\n        linkSelector: \"a[href]:not(.no-push-state)\",\n        scrollRestoration: false,\n        duration: 0,\n        hrefRegex: null,\n        scriptSelector: null,\n        initialHref: window.location.href,\n      };\n    }\n\n    // ### Properties\n    // We expose the same properties as `window.location`\n    // (in many ways this component can be thought of as a \"replacement\" for the global `Location` object).\n    // Currently they are read-only.\n    get hash() {\n      return this._url.hash;\n    }\n\n    get host() {\n      return this._url.host;\n    }\n\n    get hostname() {\n      return this._url.hostname;\n    }\n\n    get href() {\n      return this._url.href;\n    }\n\n    get origin() {\n      return this._url.origin;\n    }\n\n    get pathname() {\n      return this._url.pathname;\n    }\n\n    get port() {\n      return this._url.port;\n    }\n\n    get protocol() {\n      return this._url.protocol;\n    }\n\n    get search() {\n      return this._url.search;\n    }\n\n    // ### Setup\n    setupComponent(el, props) {\n      super.setupComponent(el, props);\n\n      this.saveScrollHistoryState = this.saveScrollHistoryState.bind(this);\n\n      this.reload$ = new Subject();\n    }\n\n    // This component has no shadow DOM, so we just return the element.\n    setupShadowDOM(el) {\n      return el;\n    }\n\n    // Overriding the setup function.\n    connectComponent() {\n      requestIdleCallback(() => {\n        if (process.env.DEBUG && !this.replaceIds && !this.el.id)\n          console.warn(\"hy-push-state needs a 'replace-ids' or 'id' attribute.\");\n\n        // Setting up scroll restoration\n        if (\"scrollRestoration\" in window.history) {\n          const orig = window.history.scrollRestoration;\n\n          this.subjects.scrollRestoration\n            .pipe(takeUntil(this.subjects.disconnect))\n            .subscribe(scrollRestoration => {\n              window.history.scrollRestoration = scrollRestoration ? \"manual\" : orig;\n            });\n        }\n\n        // If restore the last scroll position, if any.\n        this.restoreScrollPostion();\n\n        // Remember the current scroll position (for F5/reloads).\n        window.addEventListener(\"beforeunload\", this.saveScrollHistoryState);\n\n        // Calling the [setup observables function](./setup.md) function.\n        this.setupObservables();\n\n        // TODO: meh...\n        super.connectComponent();\n\n        // Setting the initial `history.state`.\n        const url = new URL(this.initialHref);\n        this.updateHistoryState({ type: INIT, replace: true, url });\n\n        const replaceEls = this.getReplaceElements(document);\n        if (isExternal(this)) this.rewriteURLs(replaceEls);\n\n        // After all this is done, we can fire the one-time `init` event...\n        this.fireEvent(\"init\");\n\n        // ...and our custom `load` event, which gets fired on every page change.\n        // We provide similar data as subsequent `load` events,\n        // however we can't provide an `anchor` or `event`,\n        // since this `load` event wasn't caused by a user interaction.\n        this.onLoad({\n          type: INIT,\n          title: this.getTitle(document),\n          replaceEls,\n          url,\n          cacheNr: this.cacheNr,\n        });\n      });\n    }\n\n    disconnectComponent() {\n      super.disconnectComponent();\n      window.removeEventListener(\"beforeunload\", this.saveScrollHistoryState);\n    }\n\n    // ### Methods\n    // Public methods of this component. See [Methods](../../methods.md) for more.\n    assign(url) {\n      this.reload$.next({\n        type: PUSH,\n        url: new URL(url, this.href),\n        cacheNr: ++this.cacheNr, // eslint-disable-line no-plusplus\n      });\n    }\n\n    reload() {\n      this.reload$.next({\n        type: PUSH,\n        url: new URL(this.href),\n        cacheNr: ++this.cacheNr, // eslint-disable-line no-plusplus\n        replace: true,\n      });\n    }\n\n    replace(url) {\n      this.reload$.next({\n        type: PUSH,\n        url: new URL(url, this.href),\n        cacheNr: ++this.cacheNr, // eslint-disable-line no-plusplus\n        replace: true,\n      });\n    }\n  };\n\n// [rxjs]: https://github.com/ReactiveX/rxjs\n// [esmixins]: http://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/\n// [modernizr]: https://modernizr.com/\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/index.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/global.js"],"sourceRoot":""}