{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///module.js","webpack:///webpack/bootstrap 534ce02d929464ed2c3f","webpack:///./node_modules/rxjs/_esm5/util/root.js","webpack:///./node_modules/hy-component/src/common.js","webpack:///./node_modules/hy-component/src/custom-element.js","webpack:///./node_modules/rxjs/_esm5/util/isFunction.js","webpack:///./node_modules/rxjs/_esm5/util/isObject.js","webpack:///./node_modules/rxjs/_esm5/util/tryCatch.js","webpack:///./node_modules/rxjs/_esm5/Subscription.js","webpack:///./node_modules/rxjs/_esm5/util/toSubscriber.js","webpack:///./node_modules/rxjs/_esm5/util/noop.js","webpack:///./node_modules/rxjs/_esm5/util/pipe.js","webpack:///./node_modules/rxjs/_esm5/util/isPromise.js","webpack:///./node_modules/rxjs/_esm5/util/subscribeToResult.js","webpack:///./node_modules/rxjs/_esm5/operators/takeUntil.js","webpack:///./src/common.js","webpack:///./node_modules/rxjs/_esm5/observable/FromEventObservable.js","webpack:///./node_modules/rxjs/_esm5/util/isScheduler.js","webpack:///./node_modules/rxjs/_esm5/operators/mergeMap.js","webpack:///./node_modules/rxjs/_esm5/util/identity.js","webpack:///./node_modules/rxjs/_esm5/operators/mergeAll.js","webpack:///./node_modules/rxjs/_esm5/observable/merge.js","webpack:///./node_modules/rxjs/_esm5/operators/map.js","webpack:///./node_modules/rxjs/_esm5/observable/dom/AjaxObservable.js","webpack:///./node_modules/rxjs/_esm5/operators/catchError.js","webpack:///./node_modules/rxjs/_esm5/operators/tap.js","webpack:///./node_modules/rxjs/_esm5/operators/distinctUntilChanged.js","webpack:///./node_modules/rxjs/_esm5/operators/filter.js","webpack:///./node_modules/rxjs/_esm5/operators/mapTo.js","webpack:///./node_modules/rxjs/_esm5/util/not.js","webpack:///./node_modules/rxjs/_esm5/operators/partition.js","webpack:///./node_modules/rxjs/_esm5/operators/pairwise.js","webpack:///./node_modules/rxjs/_esm5/operators/refCount.js","webpack:///./node_modules/rxjs/_esm5/operators/multicast.js","webpack:///./node_modules/rxjs/_esm5/operators/share.js","webpack:///./node_modules/rxjs/_esm5/observable/PromiseObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/IteratorObservable.js","webpack:///./node_modules/rxjs/_esm5/operators/concatAll.js","webpack:///./node_modules/rxjs/_esm5/observable/concat.js","webpack:///./node_modules/rxjs/_esm5/operators/startWith.js","webpack:///./node_modules/rxjs/_esm5/operators/switchMap.js","webpack:///./node_modules/rxjs/_esm5/operators/withLatestFrom.js","webpack:///./node_modules/rxjs/_esm5/operators/take.js","webpack:///./node_modules/rxjs/_esm5/operators/zip.js","webpack:///./node_modules/rxjs/_esm5/operators/concatMap.js","webpack:///./node_modules/rxjs/_esm5/util/isNumeric.js","webpack:///./node_modules/rxjs/_esm5/util/isDate.js","webpack:///./node_modules/qd-set/esm/index.js","webpack:///./node_modules/hy-component/src/component.js","webpack:///./node_modules/rxjs/_esm5/util/isArray.js","webpack:///./node_modules/rxjs/_esm5/util/errorObject.js","webpack:///./node_modules/rxjs/_esm5/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/_esm5/Observer.js","webpack:///./node_modules/rxjs/_esm5/symbol/rxSubscriber.js","webpack:///./node_modules/rxjs/_esm5/Subscriber.js","webpack:///./node_modules/rxjs/_esm5/symbol/observable.js","webpack:///./node_modules/rxjs/_esm5/Observable.js","webpack:///./node_modules/rxjs/_esm5/util/ObjectUnsubscribedError.js","webpack:///./node_modules/rxjs/_esm5/SubjectSubscription.js","webpack:///./node_modules/rxjs/_esm5/Subject.js","webpack:///./node_modules/hy-component/src/rxjs.js","webpack:///./node_modules/attr-types/array.js","webpack:///./node_modules/attr-types/bool.js","webpack:///./node_modules/attr-types/number.js","webpack:///./node_modules/attr-types/regex.js","webpack:///./node_modules/attr-types/string.js","webpack:///./node_modules/rxjs/_esm5/OuterSubscriber.js","webpack:///./node_modules/rxjs/_esm5/util/isArrayLike.js","webpack:///./node_modules/rxjs/_esm5/symbol/iterator.js","webpack:///./node_modules/rxjs/_esm5/InnerSubscriber.js","webpack:///./src/url.js","webpack:///./src/mixin/constants.js","webpack:///./node_modules/rxjs/_esm5/observable/DeferObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/defer.js","webpack:///./node_modules/rxjs/_esm5/observable/fromEvent.js","webpack:///./node_modules/rxjs/_esm5/observable/ScalarObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/EmptyObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/ArrayObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/dom/ajax.js","webpack:///./node_modules/rxjs/_esm5/observable/ConnectableObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/of.js","webpack:///./node_modules/rxjs/_esm5/observable/ArrayLikeObservable.js","webpack:///./node_modules/rxjs/_esm5/Notification.js","webpack:///./node_modules/rxjs/_esm5/operators/observeOn.js","webpack:///./node_modules/rxjs/_esm5/observable/FromObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/from.js","webpack:///./node_modules/rxjs/_esm5/observable/NeverObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/never.js","webpack:///./src/mixin/operators.js","webpack:///./src/mixin/methods.js","webpack:///./src/mixin/scrolling.js","webpack:///./src/mixin/history.js","webpack:///./node_modules/rxjs/_esm5/util/ArgumentOutOfRangeError.js","webpack:///./src/mixin/fetching.js","webpack:///./src/mixin/script-hack.js","webpack:///./src/mixin/update.js","webpack:///./node_modules/rxjs/_esm5/scheduler/Action.js","webpack:///./node_modules/rxjs/_esm5/scheduler/AsyncAction.js","webpack:///./node_modules/rxjs/_esm5/Scheduler.js","webpack:///./node_modules/rxjs/_esm5/scheduler/AsyncScheduler.js","webpack:///./node_modules/rxjs/_esm5/scheduler/async.js","webpack:///./node_modules/rxjs/_esm5/observable/TimerObservable.js","webpack:///./node_modules/rxjs/_esm5/observable/timer.js","webpack:///./src/mixin/events.js","webpack:///./src/mixin/setup.js","webpack:///./src/mixin/index.js","webpack:///./src/webcomponent/index.js","webpack:///./src/webcomponent/module.js","webpack:///(webpack)/buildin/global.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","global","_root","__window","window","__self","WorkerGlobalScope","__global","parseType","type","attr","decamelize","str","sep","arguments","length","undefined","replace","toLowerCase","preserveCamelCase","strarg","isLastCharLower","isLastCharUpper","isLastLastCharUpper","charAt","test","toUpperCase","substr","camelCase","_len","args","Array","_key","map","x","trim","filter","join","p1","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","TypeError","create","constructor","value","writable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","custom_element__classCallCheck","custom_element__possibleConstructorReturn","custom_element__inherits","CustomElement","HTMLElement","Reflect","construct","isFunction","isObject","_typeof","tryCatcher","tryCatchTarget","apply","e","errorObject","tryCatch","fn","flattenUnsubscriptionErrors","errors","reduce","errs","err","concat","UnsubscriptionError","toSubscriber","nextOrObserver","error","complete","Subscriber_Subscriber","rxSubscriber","empty","noop","pipeFromArray","fns","input","prev","rxjs__classCallCheck","rxjs__possibleConstructorReturn","rxjs__inherits","isPromise","subscribe","then","subscribeToResult","outerSubscriber","result","outerValue","outerIndex","destination","InnerSubscriber","closed","Observable_Observable","_isScalar","next","syncErrorThrowable","isArrayLike","len","setTimeout","iterator_iterator","iterator","item","done","observable_observable","obs","msg","takeUntil","notifier","source","lift","TakeUntilOperator","matchesAncestors","selector","curr","document","documentElement","matches","parentNode","isExternal","_ref","protocol","host","location","isHash","_ref2","hash","origin","pathname","getScrollHeight","h","b","body","sh","getScrollTop","pageYOffset","scrollTop","common_fragmentFromString","strHTML","createRange","createContextualFragment","isNodeStyleEventEmitter","sourceObj","addListener","removeListener","isJQueryStyleEventEmitter","on","off","isNodeList","FromEventObservable_toString","isHTMLCollection","isEventTarget","addEventListener","removeEventListener","isScheduler","schedule","mergeMap","project","resultSelector","concurrent","Number","POSITIVE_INFINITY","MergeMapOperator","identity","mergeAll","merge","observables","_i","scheduler","last","pop","ArrayObservable_ArrayObservable","thisArg","MapOperator","getCORSRequest","XMLHttpRequest","XDomainRequest","Error","getXMLHttpRequest","progId","progIds","ActiveXObject","ajaxGet","url","headers","AjaxObservable","method","ajaxPost","ajaxDelete","ajaxPut","ajaxPatch","ajaxGetJSON","mapResponse","responseType","parseXhrResponse","xhr","response","JSON","parse","responseText","responseXML","catchError","operator","CatchOperator","caught","tap","DoOperator","distinctUntilChanged","compare","keySelector","DistinctUntilChangedOperator","predicate","FilterOperator","mapTo","MapToOperator","not","pred","notPred","partition","pairwise","PairwiseOperator","refCount","RefCountOperator","multicast","subjectOrSubjectFactory","subjectFactory","MulticastOperator","connectable","connectableObservableDescriptor","shareSubjectFactory","Subject_Subject","share","dispatchNext","arg","subscriber","dispatchError","getIterator","obj","IteratorObservable_StringIterator","IteratorObservable_ArrayIterator","toLength","isNaN","numberIsFinite","sign","Math","floor","abs","maxSafeInteger","isFinite","valueAsNumber","concatAll","from","of","startWith","array","ScalarObservable","EmptyObservable","switchMap","SwitchMapOperator","withLatestFrom","WithLatestFromOperator","methods__classCallCheck","methods__possibleConstructorReturn","methods__inherits","_defineProperty","key","scrolling__classCallCheck","scrolling__possibleConstructorReturn","scrolling__inherits","history__defineProperty","history__classCallCheck","history__possibleConstructorReturn","history__inherits","take","count","take_TakeOperator","zip","zipStatic","ZipOperator","fetching__classCallCheck","fetching__possibleConstructorReturn","fetching__inherits","concatMap","script_hack__classCallCheck","script_hack__possibleConstructorReturn","script_hack__inherits","update__classCallCheck","update__possibleConstructorReturn","update__inherits","isNumeric","val","isArray","parseFloat","isDate","Date","events__classCallCheck","events__possibleConstructorReturn","events__inherits","setup__classCallCheck","setup__possibleConstructorReturn","setup__inherits","mixin__classCallCheck","mixin__possibleConstructorReturn","mixin__inherits","webcomponent__classCallCheck","webcomponent__possibleConstructorReturn","webcomponent__inherits","webcomponent__toConsumableArray","arr","arr2","_Set","Set","size","a","indexOf","has","add","push","delete","t","splice","clear","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","COMPONENT_FEATURE_TESTS","aSymbol","Symbol","sRoot","sState","process","env","Component","componentMixin","C","_C","_class","getPrototypeOf","el","state","defaults","assign","setupProperties","setupShadowDOM","eventName","data","componentName","event","CustomEvent","dispatchEvent","_this2","sideEffects","keys","forEach","sideEffect","setupProperty","_this3","set","oldValue","setInternalState","getRoot","getEl","_get","receiver","Function","desc","getOwnPropertyDescriptor","parent","custom_element__createClass","CUSTOM_ELEMENT_FEATURE_TESTS","circutBreaker","__extends","__","_super","toString","stack","message","Subscription__typeof","Subscription_Subscription","Subscription","unsubscribe","_parent","_parents","_subscriptions","_unsubscribe","hasErrors","_a","index","remove","trial","sub","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","for","Subscriber__typeof","Subscriber___extends","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","isStopped","Subscriber_SafeSubscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","context","bind","_context","__tryOrSetError","__tryOrUnsub","_this","wrappedComplete","$$observable","observable","Observable","_subscribe","sink","_trySubscribe","PromiseCtor","Rx","config","Promise","resolve","reject","pipe","operations","toPromise","ObjectUnsubscribedError___extends","ObjectUnsubscribedError","SubjectSubscription___extends","SubjectSubscription","subject","observers","subscriberIndex","Subject___extends","SubjectSubscriber","Subject","hasError","thrownError","Subject_AnonymousSubject","copy","slice","asObservable","AnonymousSubject","rxjs__createClass","rxjs__get","rxjs_rxjsMixin","opts","subjects","disconnect","adapt","types","array_array","split","stringify","bool","attr2","number","regex","match","RegExp","r","string","OuterSubscriber___extends","OuterSubscriber","notifyNext","innerValue","innerIndex","innerSub","notifyError","notifyComplete","Set_1","Map_1","Map","getOwnPropertyNames","InnerSubscriber___extends","takeUntil___extends","takeUntil_TakeUntilSubscriber","TakeUntilSubscriber","url_URL","URL","base","doc","implementation","createHTMLDocument","baseElement","createElement","href","head","appendChild","anchorElement","_anchorElement","hostname","port","search","oldURL","webkitURL","mozURL","createObjectURL","blob","revokeObjectURL","Element","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","PUSH","DeferObservable___extends","DeferObservable","observableFactory","DeferObservable_DeferSubscriber","DeferSubscriber","tryDefer","_callFactory","defer","FromEventObservable___extends","FromEventObservable_FromEventObservable","FromEventObservable","options","setupSubscription","handler","source_1","source_2","source_3","fromEvent","ScalarObservable___extends","dispatch","EmptyObservable___extends","ArrayObservable___extends","ArrayObservable","mergeMap___extends","observer","mergeMap_MergeMapSubscriber","MergeMapSubscriber","hasCompleted","buffer","active","_tryNext","_innerSub","ish","_notifyResultSelector","shift","map___extends","MapSubscriber","AjaxObservable___extends","urlOrRequest","request","async","createXHR","crossDomain","withCredentials","timeout","prop","AjaxObservable_AjaxSubscriber","post","put","patch","getJSON","AjaxSubscriber","FormData","serializeBody","send","AjaxResponse","_b","user","password","setupEvents","open","setHeaders","contentType","splitIndex","substring","encodeURI","setRequestHeader","xhrTimeout","progressSubscriber","AjaxTimeoutError","xhrReadyStateChange","readyState","status_1","status","AjaxError","ontimeout","upload","xhrProgress_1","onprogress","xhrError_1","onerror","onreadystatechange","abort","originalEvent","ajax","catchError___extends","catchError_CatchSubscriber","CatchSubscriber","err2","tap___extends","tap_DoSubscriber","DoSubscriber","safeSubscriber","distinctUntilChanged___extends","distinctUntilChanged_DistinctUntilChangedSubscriber","DistinctUntilChangedSubscriber","hasKey","y","Boolean","filter___extends","FilterSubscriber","mapTo___extends","MapToSubscriber","pairwise___extends","PairwiseSubscriber","hasPrev","refCount___extends","_refCount","refCounter","RefCountSubscriber","connection","connect","sharedConnection","_connection","ConnectableObservable___extends","ConnectableObservable_ConnectableObservable","ConnectableObservable","_isComplete","getSubject","_subject","ConnectableSubscriber","connectableProto","PromiseObservable___extends","PromiseObservable_PromiseObservable","PromiseObservable","promise","IteratorObservable___extends","IteratorObservable","return","StringIterator","idx","ArrayIterator","pow","ArrayLikeObservable___extends","ArrayLikeObservable_ArrayLikeObservable","ArrayLikeObservable","arrayLike","Notification_Notification","Notification","kind","hasValue","observe","do","accept","toObservable","throw","createNext","undefinedValueNotification","createError","createComplete","completeNotification","observeOn___extends","observeOn_ObserveOnSubscriber","ObserveOnSubscriber","delay","notification","scheduleMessage","ObserveOnMessage","FromObservable__typeof","FromObservable___extends","FromObservable_FromObservable","FromObservable","switchMap___extends","switchMap_SwitchMapSubscriber","SwitchMapSubscriber","innerSubscription","_tryNotifyNext","withLatestFrom___extends","withLatestFrom_WithLatestFromSubscriber","WithLatestFromSubscriber","toRespond","values","found","_tryProject","NeverObservable___extends","NeverObservable_NeverObservable","NeverObservable","never","operators_unsubscribeWhen","pauser$","paused","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","methods__createClass","methods_helperMixin","id","anchor","hrefRegex","_ref$event","metaKey","ctrlKey","shouldLoadAnchor","_ref3","_ref4","prevPathname","_ref4$","_ref4$$url","scrolling__createClass","scrolling_scrollMixin","getElementById","scrollIntoView","scroll","pageXOffset","histId","history","style","minHeight","scrollHeight","scrollHashIntoView","scrollRestoration","restoreScrollPostion","history__createClass","history_historyMixin","_scrollMixin","_ref$url","title","currState","nextState","replaceState","pushState","saveScrollPosition","ArgumentOutOfRangeError___extends","ArgumentOutOfRangeError","take___extends","TakeOperator","total","TakeSubscriber","zip___extends","zip_ZipSubscriber","ZipSubscriber","iterators","zip_StaticArrayIterator","StaticIterator","zip_ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","nextResult","StaticArrayIterator","ZipBufferIterator","isComplete","fetching__slicedToArray","fetching__createClass","fetching_fetchMixin","latestPrefetch","prefetch$","getFetch$","fetch","animPromise","script_hack__slicedToArray","script_hack__createClass","script_hack_scriptMixin","replaceEls","scripts","docfrag","querySelectorAll","scriptSelector","script","pair","previousSibling","removeChild","ref","originalWrite","write","temp","innerHTML","childNodes","node","insertBefore","nextSibling","src","insertScript","update__slicedToArray","update__createClass","update_updateMixin","_scriptMixin","fragment","querySelector","textContent","replaceIds","getElementsByTagName","tagName","getTitle","getReplaceElements","some","replaceElMissing","tempRemoveScriptTags","elements","oldElement","replaceChild","replaceContentByIds","replaceContentWholesale","updateHistoryTitle","rewriteURLs","replaceContent","rewriteURL","rewriteURLSrcSet","rewriteURLList","setAttribute","getAttribute","_this4","_this5","Action___extends","Action","work","AsyncAction___extends","AsyncAction_AsyncAction","AsyncAction","pending","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","Scheduler","SchedulerAction","now","AsyncScheduler___extends","AsyncScheduler","scheduled","action","async_async","TimerObservable___extends","TimerObservable_TimerObservable","TimerObservable","dueTime","period","initialDelay","timer","events__createClass","events_eventMixin","duration","waitUntil","fireEvent","detail","back","setup__slicedToArray","setup__createClass","setup_setupObservablesMixin","_eventMixin","q","cacheNr","pushSubject","hintSubject","push$","currentTarget","isPushEvent","preventDefault","saveScrollHistoryState","pop$","reload$","_merge$pipe$map","initialHref","_url","isHashChange","obs$","_merge$pipe$map2","hash$","page$","fetch$","hint$","isHintEvent","compareContext","_ref5","recoverIfResponse","updateHistoryState","onStart","getResponse","_fetch$$pipe","_ref6","_fetch$$pipe2","fetchOk$","fetchError$","responseToContent","onReady","updateDOM","onAfter","manageScrollPostion","onDOMError","reinsertScriptTags","onError","onLoad","updateHistoryStateHash","onNetworkError","onProgress","links","WeakSet","pushNext","hintNext","addLink","link","passive","addListeners","addedNode","linkSelector","removeLink","removeListeners","removedNode","mutationObserver","MutationObserver","mutations","childList","subtree","_ref7","addedNodes","removedNodes","mixin__createClass","mixin__get","MIXIN_FEATURE_TESTS","DocumentFragment","webcomponent__createClass","HyPushStateElement","_customElementMixin","getObservedAttributes","setupComponent","getStateFromAttributes","silent","attrName","removeAttribute","hasAttribute","connectComponent","disconnectComponent","adoptComponent","oldAttr","reflectAttribute","getTemplate","attachShadow","mode","shadowRoot","import","content","cloneNode","_setupObservablesMixi","orig","setupObservables","module_define","customElements","WebComponents","ready","g","eval"],"mappings":"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","file":"module.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyPushState\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyPushState\"] = factory();\n\telse\n\t\troot[\"hyPushState\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*!\n * Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyPushState\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyPushState\"] = factory();\n\telse\n\t\troot[\"hyPushState\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return _root; });\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n/*@__PURE__*/(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n\n//# sourceMappingURL=root.js.map\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(2)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// CONCATENATED MODULE: ./node_modules/qd-set/esm/index.js\nvar _Set = typeof Set !== 'undefined' && new Set([1]).size === 1 ? Set : function () {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  a = a.filter(function (x, i) {\n    return i === a.indexOf(x);\n  });\n  a.size = a.length;\n  a.has = function (x) {\n    return a.indexOf(x) > -1;\n  };\n  a.add = function (x) {\n    if (!a.has(x)) {\n      a.size++;a.push(x);\n    }return a;\n  };\n  a.delete = function (x) {\n    var t = void 0;if (t = a.has(x)) {\n      a.size--;a.splice(a.indexOf(x), 1);\n    }return t;\n  };\n  a.clear = function () {\n    while (a.pop()) {}a.size = 0;\n  };\n  return a;\n};\n\n\n// CONCATENATED MODULE: ./node_modules/hy-component/src/common.js\n// # src / common.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n// Licensed under MIT\n\n/* eslint-disable no-plusplus */\n\nfunction parseType(type, attr) {\n  if (false) {\n    return console.warn(\"No type provided for attribute \" + attr + \".\");\n  }\n  return type ? type(attr) : attr;\n}\n\nfunction decamelize(str) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"-\";\n\n  return str.replace(/([a-z\\d])([A-Z])/g, \"$1\" + sep + \"$2\").replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, \"$1\" + sep + \"$2\").toLowerCase();\n}\n\nfunction preserveCamelCase(strarg) {\n  var str = strarg;\n  var isLastCharLower = false;\n  var isLastCharUpper = false;\n  var isLastLastCharUpper = false;\n\n  for (var i = 0; i < str.length; i++) {\n    var c = str.charAt(i);\n\n    if (isLastCharLower && /[a-zA-Z]/.test(c) && c.toUpperCase() === c) {\n      str = str.substr(0, i) + \"-\" + str.substr(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(c) && c.toLowerCase() === c) {\n      str = str.substr(0, i - 1) + \"-\" + str.substr(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = c.toLowerCase() === c;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = c.toUpperCase() === c;\n    }\n  }\n\n  return str;\n}\n\nfunction camelCase() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var str = [].map.call(args, function (x) {\n    return x.trim();\n  }).filter(function (x) {\n    return x.length;\n  }).join(\"-\");\n\n  if (str.length === 0) {\n    return \"\";\n  }\n\n  if (str.length === 1) {\n    return str.toLowerCase();\n  }\n\n  str = preserveCamelCase(str);\n\n  return str.replace(/^[_.\\- ]+/, \"\").toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (m, p1) {\n    return p1.toUpperCase();\n  });\n}\n// CONCATENATED MODULE: ./node_modules/hy-component/src/component.js\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// # src / component.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n// Licensed under MIT\n\n// import 'core-js/fn/array/for-each';\n// import 'core-js/fn/object/assign';\n// import 'core-js/fn/object/define-property';\n// import 'core-js/fn/object/keys';\n\n\n\n\n\nvar COMPONENT_FEATURE_TESTS = new _Set([\"customevent\"]);\n\nvar aSymbol = Symbol || function (x) {\n  return \"_\" + x;\n};\nvar sRoot = aSymbol(\"sroot\");\nvar sState = aSymbol(\"state\");\n\nwindow.process = window.process || {};\nwindow.process.env = window.process.env || {};\n\nvar Component = function Component() {\n  _classCallCheck(this, Component);\n};\n\nvar componentMixin = function componentMixin() {\n  var C = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Component;\n  return function (_C) {\n    _inherits(_class, _C);\n\n    function _class() {\n      _classCallCheck(this, _class);\n\n      return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    _createClass(_class, [{\n      key: \"setupComponent\",\n      value: function setupComponent(el, state) {\n        var defaults = this.constructor.defaults;\n\n\n        if (false) {\n          var _constructor = this.constructor,\n              componentName = _constructor.componentName,\n              sideEffects = _constructor.sideEffects;\n\n          if (!componentName) {\n            console.warn(\"Component needs to have a name, e.g. `my-tag`. To set a name, provide a static getter called `componentName`.\");\n          }\n          if (!defaults) {\n            console.warn(\"No default properties provided. Implement a static getter called `defaults`.\");\n          }\n          if (!sideEffects) {\n            console.warn(\"No side effects provided. Implement a static getter called `sideEffects`.\");\n          }\n        }\n\n        this[sState] = Object.assign({}, defaults, state);\n        this.setupProperties(this);\n        this[sRoot] = this.setupShadowDOM(el);\n      }\n    }, {\n      key: \"setupShadowDOM\",\n      value: function setupShadowDOM(el) {\n        return el;\n      }\n    }, {\n      key: \"connectComponent\",\n      value: function connectComponent() {}\n    }, {\n      key: \"disconnectComponent\",\n      value: function disconnectComponent() {}\n    }, {\n      key: \"adoptComponent\",\n      value: function adoptComponent() {}\n    }, {\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this[sRoot];\n      }\n    }, {\n      key: \"getEl\",\n      value: function getEl() {\n        return this[sRoot];\n      }\n    }, {\n      key: \"fireEvent\",\n      value: function fireEvent(eventName, data) {\n        var componentName = this.constructor.componentName;\n\n        var event = new CustomEvent(componentName + \"-\" + eventName, data);\n        this.el.dispatchEvent(event);\n      }\n    }, {\n      key: \"setInternalState\",\n      value: function setInternalState(key, value) {\n        this[sState][key] = value;\n      }\n    }, {\n      key: \"setupProperties\",\n      value: function setupProperties() {\n        var _this2 = this;\n\n        var sideEffects = this.constructor.sideEffects;\n\n\n        Object.keys(this[sState]).forEach(function (key) {\n          var sideEffect = sideEffects[key];\n          _this2.setupProperty(key, sideEffect);\n        });\n      }\n    }, {\n      key: \"setupProperty\",\n      value: function setupProperty(key, sideEffect) {\n        var _this3 = this;\n\n        Object.defineProperty(this, key, {\n          get: function get() {\n            return _this3[sState][key];\n          },\n          set: function set(value) {\n            var oldValue = _this3[sState][key];\n            _this3.setInternalState(key, value);\n            if (sideEffect) sideEffect.call(_this3, value, oldValue);\n          },\n          enumerable: true,\n          configurable: true\n        });\n      }\n    }, {\n      key: \"sroot\",\n      get: function get() {\n        return this.getRoot();\n      }\n    }, {\n      key: \"el\",\n      get: function get() {\n        return this.getEl();\n      }\n    }]);\n\n    return _class;\n  }(C);\n};\n// CONCATENATED MODULE: ./node_modules/hy-component/src/custom-element.js\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar custom_element__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction custom_element__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction custom_element__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction custom_element__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// # src / custom-element.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n// Licensed under MIT\n\n// import 'core-js/fn/array/for-each';\n// import 'core-js/fn/array/from';\n// import 'core-js/fn/array/map';\n// import 'core-js/fn/number/constructor';\n// import 'core-js/fn/object/keys';\n// import 'core-js/fn/object/set-prototype-of';\n// import 'core-js/fn/reflect/construct';\n// import 'core-js/fn/string/trim'; // used by camelcase\n\n\n\n\n\n\n\n\nvar CUSTOM_ELEMENT_FEATURE_TESTS = new _Set([].concat(_toConsumableArray(COMPONENT_FEATURE_TESTS), [\"template\", \"customelements\"]));\n\nvar circutBreaker = null;\n\nvar custom_element_customElementMixin = function customElementMixin(C) {\n  return function (_C) {\n    custom_element__inherits(_class, _C);\n\n    custom_element__createClass(_class, null, [{\n      key: \"getObservedAttributes\",\n      value: function getObservedAttributes() {\n        var types = this.types;\n\n        return Object.keys(types).map(function (x) {\n          return decamelize(x);\n        });\n      }\n    }]);\n\n    function _class() {\n      var _ref;\n\n      custom_element__classCallCheck(this, _class);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var _this = custom_element__possibleConstructorReturn(this, (_ref = _class.__proto__ || Object.getPrototypeOf(_class)).call.apply(_ref, [this].concat(args)));\n\n      _this.setupComponent(_this, _this.getStateFromAttributes());\n      return _this;\n    }\n\n    custom_element__createClass(_class, [{\n      key: \"reflectAttribute\",\n      value: function reflectAttribute(key, val) {\n        var silent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        var attrName = decamelize(key);\n\n        if (silent) circutBreaker = attrName;\n\n        var types = this.constructor.types;\n\n        var type = types[key];\n\n        if (false) {\n          console.warn(\"No type provided for key '\" + key + \"'\");\n        }\n\n        var attr = type.stringify(val);\n\n        if (attr == null) {\n          this.removeAttribute(attrName);\n        } else {\n          this.setAttribute(attrName, attr);\n        }\n      }\n\n      /*\n      reflectAttributes() {\n        const { types } = this.constructor;\n        Object.keys(types).forEach(key => this.reflectAttribute(key, this[key], true));\n      }\n      */\n\n    }, {\n      key: \"getStateFromAttributes\",\n      value: function getStateFromAttributes() {\n        var _this2 = this;\n\n        var types = this.constructor.types;\n\n\n        var state = {};\n        Object.keys(types).forEach(function (key) {\n          var attrName = decamelize(key);\n          var attr = _this2.hasAttribute(attrName) ? _this2.getAttribute(attrName) : null;\n          var value = parseType(types[key], attr);\n          if (value != null) state[key] = value;\n        });\n\n        return state;\n      }\n    }, {\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        /* this.reflectAttributes(); */\n        this.connectComponent();\n      }\n    }, {\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        this.disconnectComponent();\n      }\n    }, {\n      key: \"adoptedCallback\",\n      value: function adoptedCallback() {\n        this.adoptComponent();\n      }\n    }, {\n      key: \"attributeChangedCallback\",\n      value: function attributeChangedCallback(attrName, oldAttr, attr) {\n        if (circutBreaker === attrName) circutBreaker = null;else if (oldAttr !== attr) {\n          var types = this.constructor.types;\n\n\n          var key = camelCase(attrName);\n          var value = parseType(types[key], attr);\n\n          this[key] = value != null ? value : this.constructor.defaults[key];\n        }\n      }\n    }, {\n      key: \"setInternalState\",\n      value: function setInternalState(key, value) {\n        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), \"setInternalState\", this).call(this, key, value);\n        this.reflectAttribute(key, value, true);\n      }\n    }, {\n      key: \"setupShadowDOM\",\n      value: function setupShadowDOM(el) {\n        var instance = this.getTemplate();\n        if (instance) {\n          if (\"attachShadow\" in Element.prototype) {\n            el.attachShadow({ mode: \"open\" });\n            el.shadowRoot.appendChild(instance);\n            return el.shadowRoot;\n          }\n          if (false) console.warn(\"Component doesnt define a template. Intentional?\");\n          throw Error(\"ShadowDOM API not supported\");\n        }\n        return el;\n      }\n    }, {\n      key: \"getEl\",\n      value: function getEl() {\n        return this;\n      }\n    }, {\n      key: \"getTemplate\",\n      value: function getTemplate() {\n        var componentName = this.constructor.componentName;\n\n        return document.querySelector(\"link[href*=\\\"\" + componentName + \"\\\"]\").import.querySelector(\"#\" + componentName + \"-template\").content.cloneNode(true);\n      }\n    }, {\n      key: \"template\",\n      get: function get() {\n        return this.getTemplate();\n      }\n    }]);\n\n    return _class;\n  }(C);\n};\n\n// This is a drop-in replacement for `HTMLElement` which is compatible with babel.\nfunction CustomElement() {\n  var HTMLElement = typeof window.HTMLElement === \"function\" ? window.HTMLElement : function () {};\n  return Reflect.construct(HTMLElement, [], this.__proto__.constructor); // eslint-disable-line\n}\n\nif (Object.setPrototypeOf) {\n  Object.setPrototypeOf(CustomElement.prototype, HTMLElement.prototype);\n  Object.setPrototypeOf(CustomElement, HTMLElement);\n}\n\n// TODO\nfunction fragmentFromString(strHTML) {\n  return document.createRange().createContextualFragment(strHTML);\n}\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/util/root.js\nvar root = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isFunction.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isArray.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar isArray = Array.isArray || function (x) {\n  return x && typeof x.length === 'number';\n};\n//# sourceMappingURL=isArray.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isObject.js\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isObject(x) {\n    return x != null && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/errorObject.js\n// typeof any so that it we don't have to cast when comparing a result to the error object\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/tryCatch.js\n/** PURE_IMPORTS_START ._errorObject PURE_IMPORTS_END */\n\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    } catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n;\n//# sourceMappingURL=tryCatch.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/UnsubscriptionError.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ? errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) {\n            return i + 1 + \") \" + err.toString();\n        }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error);\n//# sourceMappingURL=UnsubscriptionError.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/Subscription.js\nvar Subscription__typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/** PURE_IMPORTS_START ._util_isArray,._util_isObject,._util_isFunction,._util_tryCatch,._util_errorObject,._util_UnsubscriptionError PURE_IMPORTS_END */\n\n\n\n\n\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription_Subscription = /*@__PURE__*/ /*@__PURE__*/function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this,\n            _parent = _a._parent,\n            _parents = _a._parents,\n            _unsubscribe = _a._unsubscribe,\n            _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            var trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    var trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        } else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || teardown === Subscription.EMPTY) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown === 'undefined' ? 'undefined' : Subscription__typeof(teardown)) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                } else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                        var tmp = subscription;\n                        subscription = new Subscription();\n                        subscription._subscriptions = [tmp];\n                    }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this,\n            _parent = _a._parent,\n            _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        } else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        } else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription());\n    return Subscription;\n}();\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) {\n        return errs.concat(err instanceof UnsubscriptionError ? err.errors : err);\n    }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/Observer.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar empty = {\n    closed: true,\n    next: function next(value) {},\n    error: function error(err) {\n        throw err;\n    },\n    complete: function complete() {}\n};\n//# sourceMappingURL=Observer.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/symbol/rxSubscriber.js\n/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\n\nvar _Symbol = root[\"a\" /* root */].Symbol;\nvar rxSubscriber = typeof _Symbol === 'function' && typeof _Symbol.for === 'function' ?\n/*@__PURE__*/_Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nvar $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/Subscriber.js\nvar Subscriber__typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/** PURE_IMPORTS_START ._util_isFunction,._Subscription,._Observer,._symbol_rxSubscriber PURE_IMPORTS_END */\nvar Subscriber___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber_Subscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    Subscriber___extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = empty;\n                    break;\n                }\n                if ((typeof destinationOrNext === 'undefined' ? 'undefined' : Subscriber__typeof(destinationOrNext)) === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    } else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new Subscriber_SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new Subscriber_SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber] = function () {\n        return this;\n    };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this,\n            _parent = _a._parent,\n            _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_Subscription);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar Subscriber_SafeSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    Subscriber___extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        } else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                } else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            } else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            } else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function wrappedComplete() {\n                    return _this._complete.call(_this._context);\n                };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                } else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            } else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        } catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        } catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=Subscriber.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/toSubscriber.js\n/** PURE_IMPORTS_START .._Subscriber,.._symbol_rxSubscriber,.._Observer PURE_IMPORTS_END */\n\n\n\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber]) {\n            return nextOrObserver[rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_Subscriber(empty);\n    }\n    return new Subscriber_Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/symbol/observable.js\n/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\n\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var _Symbol = context.Symbol;\n    if (typeof _Symbol === 'function') {\n        if (_Symbol.observable) {\n            $$observable = _Symbol.observable;\n        } else {\n            $$observable = _Symbol('observable');\n            _Symbol.observable = $$observable;\n        }\n    } else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nvar observable_observable = /*@__PURE__*/getSymbolObservable(root[\"a\" /* root */]);\n/**\n * @deprecated use observable instead\n */\nvar $$observable = observable_observable;\n//# sourceMappingURL=observable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/noop.js\n/* tslint:disable:no-empty */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction noop() {}\n//# sourceMappingURL=noop.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/pipe.js\n/** PURE_IMPORTS_START ._noop PURE_IMPORTS_END */\n\n/* tslint:enable:max-line-length */\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\n/* @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) {\n            return fn(prev);\n        }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/Observable.js\n/** PURE_IMPORTS_START ._util_root,._util_toSubscriber,._symbol_observable,._util_pipe PURE_IMPORTS_END */\n\n\n\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable_Observable = /*@__PURE__*/ /*@__PURE__*/function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        } else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        } catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root[\"a\" /* root */].Rx && root[\"a\" /* root */].Rx.config && root[\"a\" /* root */].Rx.config.Promise) {\n                PromiseCtor = root[\"a\" /* root */].Rx.config.Promise;\n            } else if (root[\"a\" /* root */].Promise) {\n                PromiseCtor = root[\"a\" /* root */].Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    } catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                } else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root[\"a\" /* root */].Rx && root[\"a\" /* root */].Rx.config && root[\"a\" /* root */].Rx.config.Promise) {\n                PromiseCtor = root[\"a\" /* root */].Rx.config.Promise;\n            } else if (root[\"a\" /* root */].Promise) {\n                PromiseCtor = root[\"a\" /* root */].Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) {\n                return value = x;\n            }, function (err) {\n                return reject(err);\n            }, function () {\n                return resolve(value);\n            });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}();\n//# sourceMappingURL=Observable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/ObjectUnsubscribedError.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar ObjectUnsubscribedError___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ObjectUnsubscribedError___extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error);\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/SubjectSubscription.js\n/** PURE_IMPORTS_START ._Subscription PURE_IMPORTS_END */\nvar SubjectSubscription___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    SubjectSubscription___extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_Subscription);\n//# sourceMappingURL=SubjectSubscription.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/Subject.js\n/** PURE_IMPORTS_START ._Observable,._Subscriber,._Subscription,._util_ObjectUnsubscribedError,._SubjectSubscription,._symbol_rxSubscriber PURE_IMPORTS_END */\nvar Subject___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    Subject___extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_Subscriber);\n/**\n * @class Subject<T>\n */\nvar Subject_Subject = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    Subject___extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new Subject_AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        } else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        } else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_Subscription.EMPTY;\n        } else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_Subscription.EMPTY;\n        } else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new Subject_AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_Observable);\n/**\n * @class AnonymousSubject<T>\n */\nvar Subject_AnonymousSubject = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    Subject___extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        } else {\n            return Subscription_Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject_Subject);\n//# sourceMappingURL=Subject.js.map\n// CONCATENATED MODULE: ./node_modules/hy-component/src/rxjs.js\nvar rxjs__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar rxjs__get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction rxjs__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction rxjs__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction rxjs__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / rxjs.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n// Licensed under MIT\n\n\n\nvar rxjs_rxjsMixin = function rxjsMixin(C) {\n  return function (_C) {\n    rxjs__inherits(_class, _C);\n\n    function _class() {\n      rxjs__classCallCheck(this, _class);\n\n      return rxjs__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    rxjs__createClass(_class, [{\n      key: \"setupComponent\",\n      value: function setupComponent(el, opts) {\n        var _this2 = this;\n\n        this.subjects = {};\n        var sideEffects = {};\n\n        this.subjects.disconnect = new Subject_Subject();\n        this.subjects.adapt = new Subject_Subject();\n\n        var types = this.constructor.types;\n\n        Object.keys(types).map(function (key) {\n          _this2.subjects[key] = new Subject_Subject();\n          sideEffects[key] = function (x) {\n            return _this2.subjects[key].next(x);\n          };\n        });\n\n        Object.defineProperty(this.constructor, \"sideEffects\", {\n          get: function get() {\n            return sideEffects;\n          },\n          set: function set() {},\n          enumerable: true,\n          configurable: true\n        });\n\n        rxjs__get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), \"setupComponent\", this).call(this, el, opts);\n      }\n    }, {\n      key: \"connectComponent\",\n      value: function connectComponent() {\n        var _this3 = this;\n\n        rxjs__get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), \"connectComponent\", this).call(this);\n\n        this.subjects.adapt.next(document); // TODO: should rename to document?\n\n        var types = this.constructor.types;\n\n        Object.keys(types).map(function (key) {\n          _this3.subjects[key].next(_this3[key]);\n        });\n      }\n    }, {\n      key: \"disconnectComponent\",\n      value: function disconnectComponent() {\n        this.subjects.disconnect.next({});\n        rxjs__get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), \"disconnectComponent\", this).call(this);\n      }\n    }, {\n      key: \"adaptComponent\",\n      value: function adaptComponent() {\n        this.subjects.adapt.next(document);\n        rxjs__get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), \"adaptComponent\", this).call(this);\n      }\n    }], [{\n      key: \"sideEffects\",\n      get: function get() {}\n    }]);\n\n    return _class;\n  }(C);\n};\n// CONCATENATED MODULE: ./node_modules/attr-types/array.js\nvar array_array = function array(attr) {\n  if (attr == null) return null;\n\n  var str = attr.trim().replace(/^\\[?(.*?)\\]?$/, '$1').split(',').map(function (x) {\n    return x.trim();\n  });\n\n  return str || null;\n};\n\narray_array.stringify = function (a) {\n  return a && a.length > 0 ? a.join(',') : null;\n};\n\n/* harmony default export */ var attr_types_array = (array_array);\n// CONCATENATED MODULE: ./node_modules/attr-types/array-of.js\n\n\nvar array_of_arrayOf = function arrayOf(type) {\n  var f = function f(attr) {\n    if (attr == null) return null;\n    var a = array_array(attr).map(type);\n    if (a.reduce(function (r, x) {\n      return r && x !== null;\n    }, true)) {\n      return a;\n    }\n    return null;\n  };\n\n  f.stringify = function (a) {\n    var a2 = a && a.map && a.map(type.stringify);\n    if (a2 && a2.reduce(function (r, x) {\n      return r && x !== null;\n    }, true)) {\n      return array_array.stringify(a2);\n    }\n    return null;\n  };\n\n  return f;\n};\n\n/* harmony default export */ var array_of = (array_of_arrayOf);\n// CONCATENATED MODULE: ./node_modules/attr-types/bool.js\nvar bool = function bool(attr) {\n  if (attr == null) return false;\n  var attr2 = attr.trim && attr.trim() || attr;\n  return !(attr2 === 'false' || attr2 === 'null' || attr2 === 'undefined' || attr2 === '0' || attr2 === false);\n};\n\nbool.stringify = function (b) {\n  return b ? '' : null;\n};\n\n/* harmony default export */ var attr_types_bool = (bool);\n// CONCATENATED MODULE: ./node_modules/attr-types/number.js\nvar number = function number(attr) {\n  if (attr == null) return null;\n  return Number(attr);\n};\n\nnumber.stringify = function (n) {\n  if (n == null) return null;\n  return \"\" + n;\n};\n\n/* harmony default export */ var attr_types_number = (number);\n// CONCATENATED MODULE: ./node_modules/attr-types/one-of.js\nvar oneOf = function oneOf(alts) {\n  var f = function f(attr) {\n    if (attr == null) return null;\n\n    var i = alts.indexOf(attr);\n    if (false) {\n      console.warn('\\'' + attr + '\\' is not \\'oneOf\\': ' + alts.join(', '));\n    }\n\n    return i > -1 ? alts[i] : null;\n  };\n\n  f.stringify = function (o) {\n    return alts.indexOf(o) !== -1 ? o : null;\n  };\n\n  return f;\n};\n\n/* harmony default export */ var one_of = (oneOf);\n// CONCATENATED MODULE: ./node_modules/attr-types/regex.js\nvar regex = function regex(attr) {\n  if (attr == null) return null;\n  var attr2 = attr.trim && attr.trim() || attr;\n  var match = attr2.match(/^\\/?(.*?)(\\/([gimy]*))?$/);\n  return new RegExp(match[1], match[3]);\n};\n\nregex.stringify = function (r) {\n  return r && r.toString() || null;\n};\n\n/* harmony default export */ var attr_types_regex = (regex);\n// CONCATENATED MODULE: ./node_modules/attr-types/string.js\nvar string = function string(attr) {\n  return attr;\n};\n\nstring.stringify = function (s) {\n  return s;\n};\n\n/* harmony default export */ var attr_types_string = (string);\n// CONCATENATED MODULE: ./node_modules/attr-types/index.js\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var attr_types = ({\n  array: array_array, arrayOf: array_of_arrayOf, bool: bool, number: number, oneOf: oneOf, regex: regex, string: string\n});\n// CONCATENATED MODULE: ./node_modules/hy-component/src/types.js\n\n\n\n/* harmony default export */ var src_types = ({\n  array: array_array,\n  arrayOf: array_of_arrayOf,\n  bool: bool,\n  number: number,\n  oneOf: oneOf,\n  regex: regex,\n  string: string\n});\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/OuterSubscriber.js\n/** PURE_IMPORTS_START ._Subscriber PURE_IMPORTS_END */\nvar OuterSubscriber___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    OuterSubscriber___extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=OuterSubscriber.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isArrayLike.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar isArrayLike = function isArrayLike(x) {\n  return x && typeof x.length === 'number';\n};\n//# sourceMappingURL=isArrayLike.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isPromise.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/symbol/iterator.js\n/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\n\nfunction symbolIteratorPonyfill(root) {\n    var _Symbol = root.Symbol;\n    if (typeof _Symbol === 'function') {\n        if (!_Symbol.iterator) {\n            _Symbol.iterator = _Symbol('iterator polyfill');\n        }\n        return _Symbol.iterator;\n    } else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nvar iterator_iterator = /*@__PURE__*/symbolIteratorPonyfill(root[\"a\" /* root */]);\n/**\n * @deprecated use iterator instead\n */\nvar $$iterator = iterator_iterator;\n//# sourceMappingURL=iterator.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/InnerSubscriber.js\n/** PURE_IMPORTS_START ._Subscriber PURE_IMPORTS_END */\nvar InnerSubscriber___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    InnerSubscriber___extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=InnerSubscriber.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/subscribeToResult.js\n/** PURE_IMPORTS_START ._root,._isArrayLike,._isPromise,._isObject,.._Observable,.._symbol_iterator,.._InnerSubscriber,.._symbol_observable PURE_IMPORTS_END */\n\n\n\n\n\n\n\n\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        } else {\n            destination.syncErrorThrowable = true;\n            return result.subscribe(destination);\n        }\n    } else if (isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    } else if (isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) {\n            return destination.error(err);\n        }).then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root[\"a\" /* root */].setTimeout(function () {\n                throw err;\n            });\n        });\n        return destination;\n    } else if (result && typeof result[iterator_iterator] === 'function') {\n        var iterator = result[iterator_iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    } else if (result && typeof result[observable_observable] === 'function') {\n        var obs = result[observable_observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        } else {\n            return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    } else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\" + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\n//# sourceMappingURL=subscribeToResult.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/takeUntil.js\n/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar takeUntil___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil(notifier) {\n    return function (source) {\n        return source.lift(new TakeUntilOperator(notifier));\n    };\n}\nvar TakeUntilOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new takeUntil_TakeUntilSubscriber(subscriber, this.notifier));\n    };\n    return TakeUntilOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar takeUntil_TakeUntilSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    takeUntil___extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.add(subscribeToResult(this, notifier));\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber);\n//# sourceMappingURL=takeUntil.js.map\n// CONCATENATED MODULE: ./src/url.js\n// # src / url.js\n// Copyright 2013 Erik Arvidsson\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar url_URL = window.URL;\n\nif (!url_URL || !url_URL.prototype || !(\"href\" in url_URL.prototype)) {\n  url_URL = function URL(url, base) {\n    if (!url) throw new TypeError(\"Invalid argument\");\n\n    var doc = document.implementation.createHTMLDocument(\"\");\n    if (base) {\n      var baseElement = doc.createElement(\"base\");\n      baseElement.href = base;\n      doc.head.appendChild(baseElement);\n    }\n    var anchorElement = doc.createElement(\"a\");\n    anchorElement.href = url;\n    doc.body.appendChild(anchorElement);\n\n    if (anchorElement.protocol === \":\" || !/:/.test(anchorElement.href)) throw new TypeError(\"Invalid URL\");\n\n    Object.defineProperty(this, \"_anchorElement\", { value: anchorElement });\n  };\n\n  url_URL.prototype = {\n    toString: function toString() {\n      return this.href;\n    },\n\n    get href() {\n      return this._anchorElement.href;\n    },\n    set href(value) {\n      this._anchorElement.href = value;\n    },\n\n    get protocol() {\n      return this._anchorElement.protocol;\n    },\n    set protocol(value) {\n      this._anchorElement.protocol = value;\n    },\n\n    /* NOT IMPLEMENTED\n    get username() {\n      return this._anchorElement.username;\n    },\n    set username(value) {\n      this._anchorElement.username = value;\n    },\n     get password() {\n      return this._anchorElement.password;\n    },\n    set password(value) {\n      this._anchorElement.password = value;\n    },\n     get origin() {\n      return this._anchorElement.origin;\n    }, */\n\n    get host() {\n      return this._anchorElement.host;\n    },\n    set host(value) {\n      this._anchorElement.host = value;\n    },\n\n    get hostname() {\n      return this._anchorElement.hostname;\n    },\n    set hostname(value) {\n      this._anchorElement.hostname = value;\n    },\n\n    get port() {\n      return this._anchorElement.port;\n    },\n    set port(value) {\n      this._anchorElement.port = value;\n    },\n\n    get pathname() {\n      return this._anchorElement.pathname;\n    },\n    set pathname(value) {\n      this._anchorElement.pathname = value;\n    },\n\n    get search() {\n      return this._anchorElement.search;\n    },\n    set search(value) {\n      this._anchorElement.search = value;\n    },\n\n    get hash() {\n      return this._anchorElement.hash;\n    },\n    set hash(value) {\n      this._anchorElement.hash = value;\n    }\n  };\n\n  var oldURL = window.URL || window.webkitURL || window.mozURL;\n\n  url_URL.createObjectURL = function (blob) {\n    return oldURL.createObjectURL.apply(oldURL, arguments);\n  };\n\n  url_URL.revokeObjectURL = function (url) {\n    return oldURL.revokeObjectURL.apply(oldURL, arguments);\n  };\n\n  Object.defineProperty(url_URL.prototype, \"toString\", { enumerable: false });\n}\n// CONCATENATED MODULE: ./src/common.js\n// # src / common.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nvar matches = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.msMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.oMatchesSelector;\n\n// Checks if this element or any of its parents matches a given `selector`.\nfunction matchesAncestors(selector) {\n  var curr = this;\n  while (curr !== document && curr !== document.documentElement) {\n    if (matches.call(curr, selector)) return curr;\n    curr = curr.parentNode;\n  }\n  return null;\n}\n\n// Consider a URL external if either the protocol, hostname or port is different.\nfunction isExternal(_ref) {\n  var protocol = _ref.protocol,\n      host = _ref.host;\n  var location = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location;\n\n  return protocol !== location.protocol || host !== location.host;\n}\n\nfunction isHash(_ref2) {\n  var hash = _ref2.hash,\n      origin = _ref2.origin,\n      pathname = _ref2.pathname;\n  var location = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location;\n\n  return hash !== \"\" && origin === location.origin && pathname === location.pathname;\n}\n\nfunction getScrollHeight() {\n  var h = document.documentElement;\n  var b = document.body;\n  var sh = \"scrollHeight\";\n  return h[sh] || b[sh];\n}\n\nfunction getScrollLeft() {\n  return window.pageXOffset || document.body.scrollLeft;\n}\n\nfunction getScrollTop() {\n  return window.pageYOffset || document.body.scrollTop;\n}\n\nfunction common_fragmentFromString(strHTML) {\n  return document.createRange().createContextualFragment(strHTML);\n}\n// CONCATENATED MODULE: ./src/mixin/constants.js\n// # src / mixin / constants.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// These are some 'types' that we use throught the component.\n// Going with strings here instead of classes + instanceof / dynamic dispatch for simplicity.\nvar INIT = \"init\";\nvar HINT = \"hint\";\nvar PUSH = \"push\";\nvar POP = \"pop\";\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/DeferObservable.js\n/** PURE_IMPORTS_START .._Observable,.._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar DeferObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar DeferObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    DeferObservable___extends(DeferObservable, _super);\n    function DeferObservable(observableFactory) {\n        _super.call(this);\n        this.observableFactory = observableFactory;\n    }\n    /**\n     * Creates an Observable that, on subscribe, calls an Observable factory to\n     * make an Observable for each new Observer.\n     *\n     * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n     * is subscribed.\n     * </span>\n     *\n     * <img src=\"./img/defer.png\" width=\"100%\">\n     *\n     * `defer` allows you to create the Observable only when the Observer\n     * subscribes, and create a fresh Observable for each Observer. It waits until\n     * an Observer subscribes to it, and then it generates an Observable,\n     * typically with an Observable factory function. It does this afresh for each\n     * subscriber, so although each subscriber may think it is subscribing to the\n     * same Observable, in fact each subscriber gets its own individual\n     * Observable.\n     *\n     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n     * var clicksOrInterval = Rx.Observable.defer(function () {\n     *   if (Math.random() > 0.5) {\n     *     return Rx.Observable.fromEvent(document, 'click');\n     *   } else {\n     *     return Rx.Observable.interval(1000);\n     *   }\n     * });\n     * clicksOrInterval.subscribe(x => console.log(x));\n     *\n     * // Results in the following behavior:\n     * // If the result of Math.random() is greater than 0.5 it will listen\n     * // for clicks anywhere on the \"document\"; when document is clicked it\n     * // will log a MouseEvent object to the console. If the result is less\n     * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n     *\n     * @see {@link create}\n     *\n     * @param {function(): SubscribableOrPromise} observableFactory The Observable\n     * factory function to invoke for each Observer that subscribes to the output\n     * Observable. May also return a Promise, which will be converted on the fly\n     * to an Observable.\n     * @return {Observable} An Observable whose Observers' subscriptions trigger\n     * an invocation of the given Observable factory function.\n     * @static true\n     * @name defer\n     * @owner Observable\n     */\n    DeferObservable.create = function (observableFactory) {\n        return new DeferObservable(observableFactory);\n    };\n    DeferObservable.prototype._subscribe = function (subscriber) {\n        return new DeferObservable_DeferSubscriber(subscriber, this.observableFactory);\n    };\n    return DeferObservable;\n}(Observable_Observable);\nvar DeferObservable_DeferSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    DeferObservable___extends(DeferSubscriber, _super);\n    function DeferSubscriber(destination, factory) {\n        _super.call(this, destination);\n        this.factory = factory;\n        this.tryDefer();\n    }\n    DeferSubscriber.prototype.tryDefer = function () {\n        try {\n            this._callFactory();\n        } catch (err) {\n            this._error(err);\n        }\n    };\n    DeferSubscriber.prototype._callFactory = function () {\n        var result = this.factory();\n        if (result) {\n            this.add(subscribeToResult(this, result));\n        }\n    };\n    return DeferSubscriber;\n}(OuterSubscriber);\n//# sourceMappingURL=DeferObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/defer.js\n/** PURE_IMPORTS_START ._DeferObservable PURE_IMPORTS_END */\n\nvar defer = DeferObservable.create;\n//# sourceMappingURL=defer.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/FromEventObservable.js\n/** PURE_IMPORTS_START .._Observable,.._util_tryCatch,.._util_isFunction,.._util_errorObject,.._Subscription PURE_IMPORTS_END */\nvar FromEventObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\nvar FromEventObservable_toString = Object.prototype.toString;\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && FromEventObservable_toString.call(sourceObj) === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && FromEventObservable_toString.call(sourceObj) === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventObservable_FromEventObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    FromEventObservable___extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n        this.options = options;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * `fromEvent` accepts as a first argument event target, which is an object with methods\n     * for registering event handler functions. As a second argument it takes string that indicates\n     * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n     * which are described in detail below. If your event target does not match any of the ones listed,\n     * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n     * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n     * handler functions have different names, but they all accept a string describing event type\n     * and function itself, which will be called whenever said event happens.\n     *\n     * Every time resulting Observable is subscribed, event handler function will be registered\n     * to event target on given event type. When that event fires, value\n     * passed as a first argument to registered function will be emitted by output Observable.\n     * When Observable is unsubscribed, function will be unregistered from event target.\n     *\n     * Note that if event target calls registered function with more than one argument, second\n     * and following arguments will not appear in resulting stream. In order to get access to them,\n     * you can pass to `fromEvent` optional project function, which will be called with all arguments\n     * passed to event handler. Output Observable will then emit value returned by project function,\n     * instead of the usual value.\n     *\n     * Remember that event targets listed below are checked via duck typing. It means that\n     * no matter what kind of object you have and no matter what environment you work in,\n     * you can safely use `fromEvent` on that object if it exposes described methods (provided\n     * of course they behave as was described above). So for example if Node.js library exposes\n     * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n     * a good choice.\n     *\n     * If the API you use is more callback then event handler oriented (subscribed\n     * callback function fires only once and thus there is no need to manually\n     * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n     * instead.\n     *\n     * `fromEvent` supports following types of event targets:\n     *\n     * **DOM EventTarget**\n     *\n     * This is an object with `addEventListener` and `removeEventListener` methods.\n     *\n     * In the browser, `addEventListener` accepts - apart from event type string and event\n     * handler function arguments - optional third parameter, which is either an object or boolean,\n     * both used for additional configuration how and when passed function will be called. When\n     * `fromEvent` is used with event target of that type, you can provide this values\n     * as third parameter as well.\n     *\n     * **Node.js EventEmitter**\n     *\n     * An object with `addListener` and `removeListener` methods.\n     *\n     * **JQuery-style event target**\n     *\n     * An object with `on` and `off` methods\n     *\n     * **DOM NodeList**\n     *\n     * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n     *\n     * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n     * it contains and install event handler function in every of them. When returned Observable\n     * is unsubscribed, function will be removed from all Nodes.\n     *\n     * **DOM HtmlCollection**\n     *\n     * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n     * installed and removed in each of elements.\n     *\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * // Results in:\n     * // MouseEvent object logged to console every time a click\n     * // occurs on the document.\n     *\n     *\n     * @example <caption>Use addEventListener with capture option</caption>\n     * var clicksInDocument = Rx.Observable.fromEvent(document, 'click', true); // note optional configuration parameter\n     *                                                                          // which will be passed to addEventListener\n     * var clicksInDiv = Rx.Observable.fromEvent(someDivInDocument, 'click');\n     *\n     * clicksInDocument.subscribe(() => console.log('document'));\n     * clicksInDiv.subscribe(() => console.log('div'));\n     *\n     * // By default events bubble UP in DOM tree, so normally\n     * // when we would click on div in document\n     * // \"div\" would be logged first and then \"document\".\n     * // Since we specified optional `capture` option, document\n     * // will catch event when it goes DOWN DOM tree, so console\n     * // will log \"document\" and then \"div\".\n     *\n     * @see {@link bindCallback}\n     * @see {@link bindNodeCallback}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOM EventTarget, Node.js\n     * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        } else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function unsubscribe() {\n                return source_1.removeEventListener(eventName, handler, options);\n            };\n        } else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function unsubscribe() {\n                return source_2.off(eventName, handler);\n            };\n        } else if (isNodeStyleEventEmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function unsubscribe() {\n                return source_3.removeListener(eventName, handler);\n            };\n        } else {\n            throw new TypeError('Invalid event target');\n        }\n        subscriber.add(new Subscription_Subscription(unsubscribe));\n    };\n    FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch(selector).apply(void 0, args);\n            if (result === errorObject) {\n                subscriber.error(errorObject.e);\n            } else {\n                subscriber.next(result);\n            }\n        } : function (e) {\n            return subscriber.next(e);\n        };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable_Observable);\n//# sourceMappingURL=FromEventObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/fromEvent.js\n/** PURE_IMPORTS_START ._FromEventObservable PURE_IMPORTS_END */\n\nvar fromEvent = FromEventObservable_FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/ScalarObservable.js\n/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\nvar ScalarObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ScalarObservable___extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done,\n            value = state.value,\n            subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        } else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_Observable);\n//# sourceMappingURL=ScalarObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/EmptyObservable.js\n/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\nvar EmptyObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    EmptyObservable___extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        } else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_Observable);\n//# sourceMappingURL=EmptyObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isScheduler.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/ArrayObservable.js\n/** PURE_IMPORTS_START .._Observable,._ScalarObservable,._EmptyObservable,.._util_isScheduler PURE_IMPORTS_END */\nvar ArrayObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable_ArrayObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ArrayObservable___extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        } else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        } else if (len === 1) {\n            return new ScalarObservable(array[0], scheduler);\n        } else {\n            return new EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array,\n            index = state.index,\n            count = state.count,\n            subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        } else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_Observable);\n//# sourceMappingURL=ArrayObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/mergeMap.js\n/** PURE_IMPORTS_START .._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar mergeMap___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return function mergeMapOperatorFunction(source) {\n        if (typeof resultSelector === 'number') {\n            concurrent = resultSelector;\n            resultSelector = null;\n        }\n        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\n    };\n}\nvar MergeMapOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new mergeMap_MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar mergeMap_MergeMapSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    mergeMap___extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        } else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        } catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        } else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        } catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        } else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber);\n//# sourceMappingURL=mergeMap.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/identity.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/mergeAll.js\n/** PURE_IMPORTS_START ._mergeMap,.._util_identity PURE_IMPORTS_END */\n\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return mergeMap(identity, null, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/merge.js\n/** PURE_IMPORTS_START .._Observable,._ArrayObservable,.._util_isScheduler,.._operators_mergeAll PURE_IMPORTS_END */\n\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    } else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(new ArrayObservable_ArrayObservable(observables, scheduler));\n}\n//# sourceMappingURL=merge.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/map.js\n/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar map___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    map___extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        } catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=map.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/dom/AjaxObservable.js\n/** PURE_IMPORTS_START .._.._util_root,.._.._util_tryCatch,.._.._util_errorObject,.._.._Observable,.._.._Subscriber,.._.._operators_map PURE_IMPORTS_END */\nvar AjaxObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\nfunction getCORSRequest() {\n    if (root[\"a\" /* root */].XMLHttpRequest) {\n        return new root[\"a\" /* root */].XMLHttpRequest();\n    } else if (!!root[\"a\" /* root */].XDomainRequest) {\n        return new root[\"a\" /* root */].XDomainRequest();\n    } else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root[\"a\" /* root */].XMLHttpRequest) {\n        return new root[\"a\" /* root */].XMLHttpRequest();\n    } else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root[\"a\" /* root */].ActiveXObject(progId)) {\n                        break;\n                    }\n                } catch (e) {}\n            }\n            return new root[\"a\" /* root */].ActiveXObject(progId);\n        } catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nfunction ajaxGet(url, headers) {\n    if (headers === void 0) {\n        headers = null;\n    }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\n;\nfunction ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\n;\nfunction ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\n;\nfunction ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\n;\nfunction ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n}\n;\nvar mapResponse = /*@__PURE__*/map(function (x, index) {\n    return x.response;\n});\nfunction ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url: url,\n        responseType: 'json',\n        headers: headers\n    }));\n}\n;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar AjaxObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    AjaxObservable___extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        _super.call(this);\n        var request = {\n            async: true,\n            createXHR: function createXHR() {\n                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n            },\n            crossDomain: false,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        } else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxObservable_AjaxSubscriber(subscriber, this.request);\n    };\n    /**\n     * Creates an observable for an Ajax request with either a request object with\n     * url, headers, etc or a string for a URL.\n     *\n     * @example\n     * source = Rx.Observable.ajax('/products');\n     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n     *\n     * @param {string|Object} request Can be one of the following:\n     *   A string of the URL to make the Ajax call.\n     *   An object with the following properties\n     *   - url: URL of the request\n     *   - body: The body of the request\n     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n     *   - async: Whether the request is async\n     *   - headers: Optional headers\n     *   - crossDomain: true if a cross domain request, else false\n     *   - createXHR: a function to override if you need to use an alternate\n     *   XMLHttpRequest implementation.\n     *   - resultSelector: a function to use to alter the output value type of\n     *   the Observable. Gets {@link AjaxResponse} as an argument.\n     * @return {Observable} An observable sequence containing the XMLHttpRequest.\n     * @static true\n     * @name ajax\n     * @owner Observable\n    */\n    AjaxObservable.create = function () {\n        var create = function create(urlOrRequest) {\n            return new AjaxObservable(urlOrRequest);\n        };\n        create.get = ajaxGet;\n        create.post = ajaxPost;\n        create.delete = ajaxDelete;\n        create.put = ajaxPut;\n        create.patch = ajaxPatch;\n        create.getJSON = ajaxGetJSON;\n        return create;\n    }();\n    return AjaxObservable;\n}(Observable_Observable);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AjaxObservable_AjaxSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    AjaxObservable___extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        _super.call(this, destination);\n        this.request = request;\n        this.done = false;\n        var headers = request.headers = request.headers || {};\n        // force CORS if requested\n        if (!request.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        // ensure content type is set\n        if (!('Content-Type' in headers) && !(root[\"a\" /* root */].FormData && request.body instanceof root[\"a\" /* root */].FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        // properly serialize body\n        request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n        this.send();\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this,\n            xhr = _a.xhr,\n            request = _a.request,\n            destination = _a.destination;\n        var response = new AjaxResponse(e, xhr, request);\n        destination.next(response);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this,\n            request = _a.request,\n            _b = _a.request,\n            user = _b.user,\n            method = _b.method,\n            url = _b.url,\n            async = _b.async,\n            password = _b.password,\n            headers = _b.headers,\n            body = _b.body;\n        var createXHR = request.createXHR;\n        var xhr = tryCatch(createXHR).call(request);\n        if (xhr === errorObject) {\n            this.error(errorObject.e);\n        } else {\n            this.xhr = xhr;\n            // set up the events before open XHR\n            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n            // You need to add the event listeners before calling open() on the request.\n            // Otherwise the progress events will not fire.\n            this.setupEvents(xhr, request);\n            // open XHR\n            var result = void 0;\n            if (user) {\n                result = tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n            } else {\n                result = tryCatch(xhr.open).call(xhr, method, url, async);\n            }\n            if (result === errorObject) {\n                this.error(errorObject.e);\n                return null;\n            }\n            // timeout, responseType and withCredentials can be set once the XHR is open\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            // set headers\n            this.setHeaders(xhr, headers);\n            // finally send the request\n            result = body ? tryCatch(xhr.send).call(xhr, body) : tryCatch(xhr.send).call(xhr);\n            if (result === errorObject) {\n                this.error(errorObject.e);\n                return null;\n            }\n        }\n        return xhr;\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        } else if (root[\"a\" /* root */].FormData && body instanceof root[\"a\" /* root */].FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) {\n                    return encodeURI(key) + \"=\" + encodeURI(body[key]);\n                }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            var _a = xhrTimeout,\n                subscriber = _a.subscriber,\n                progressSubscriber = _a.progressSubscriber,\n                request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n        }\n        ;\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                var _xhrProgress_;\n                _xhrProgress_ = function xhrProgress_1(e) {\n                    var progressSubscriber = _xhrProgress_.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                if (root[\"a\" /* root */].XDomainRequest) {\n                    xhr.onprogress = _xhrProgress_;\n                } else {\n                    xhr.upload.onprogress = _xhrProgress_;\n                }\n                _xhrProgress_.progressSubscriber = progressSubscriber;\n            }\n            var _xhrError_;\n            _xhrError_ = function xhrError_1(e) {\n                var _a = _xhrError_,\n                    progressSubscriber = _a.progressSubscriber,\n                    subscriber = _a.subscriber,\n                    request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                subscriber.error(new AjaxError('ajax error', this, request));\n            };\n            xhr.onerror = _xhrError_;\n            _xhrError_.request = request;\n            _xhrError_.subscriber = this;\n            _xhrError_.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            var _a = xhrReadyStateChange,\n                subscriber = _a.subscriber,\n                progressSubscriber = _a.progressSubscriber,\n                request = _a.request;\n            if (this.readyState === 4) {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = this.responseType === 'text' ? this.response || this.responseText : this.response;\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                if (200 <= status_1 && status_1 < 300) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                } else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n                }\n            }\n        }\n        ;\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this,\n            done = _a.done,\n            xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber_Subscriber);\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nvar AjaxResponse = /*@__PURE__*/ /*@__PURE__*/function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxResponse;\n}();\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nvar AjaxError = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    AjaxObservable___extends(AjaxError, _super);\n    function AjaxError(message, xhr, request) {\n        _super.call(this, message);\n        this.message = message;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxError;\n}(Error);\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            if ('response' in xhr) {\n                //IE does not support json as responseType, parse it internally\n                return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n            } else {\n                // HACK(benlesh): TypeScript shennanigans\n                // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n                return JSON.parse(xhr.responseText || 'null');\n            }\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            // HACK(benlesh): TypeScript shennanigans\n            // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n            return 'response' in xhr ? xhr.response : xhr.responseText;\n    }\n}\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nvar AjaxTimeoutError = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    AjaxObservable___extends(AjaxTimeoutError, _super);\n    function AjaxTimeoutError(xhr, request) {\n        _super.call(this, 'ajax timeout', xhr, request);\n    }\n    return AjaxTimeoutError;\n}(AjaxError);\n//# sourceMappingURL=AjaxObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/dom/ajax.js\n/** PURE_IMPORTS_START ._AjaxObservable PURE_IMPORTS_END */\n\nvar ajax = AjaxObservable.create;\n//# sourceMappingURL=ajax.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/catchError.js\n/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar catchError___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nfunction catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        var operator = new CatchOperator(selector);\n        var caught = source.lift(operator);\n        return operator.caught = caught;\n    };\n}\nvar CatchOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new catchError_CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar catchError_CatchSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    catchError___extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            } catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber);\n//# sourceMappingURL=catchError.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/tap.js\n/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar tap___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nfunction tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nvar DoOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new tap_DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar tap_DoSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    tap___extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber_Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        } else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        } else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        } else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=tap.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/distinctUntilChanged.js\n/** PURE_IMPORTS_START .._Subscriber,.._util_tryCatch,.._util_errorObject PURE_IMPORTS_END */\nvar distinctUntilChanged___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return function (source) {\n        return source.lift(new DistinctUntilChangedOperator(compare, keySelector));\n    };\n}\nvar DistinctUntilChangedOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new distinctUntilChanged_DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar distinctUntilChanged_DistinctUntilChangedSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    distinctUntilChanged___extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch(this.keySelector)(value);\n            if (key === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch(this.compare)(this.key, key);\n            if (result === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        } else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=distinctUntilChanged.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/filter.js\n/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar filter___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    filter___extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        } catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=filter.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/mapTo.js\n/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar mapTo___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo(value) {\n    return function (source) {\n        return source.lift(new MapToOperator(value));\n    };\n}\nvar MapToOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    mapTo___extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        _super.call(this, destination);\n        this.value = value;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=mapTo.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/not.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction not(pred, thisArg) {\n    function notPred() {\n        return !notPred.pred.apply(notPred.thisArg, arguments);\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\n//# sourceMappingURL=not.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/partition.js\n/** PURE_IMPORTS_START .._util_not,._filter PURE_IMPORTS_END */\n\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nfunction partition(predicate, thisArg) {\n    return function (source) {\n        return [filter(predicate, thisArg)(source), filter(not(predicate, thisArg))(source)];\n    };\n}\n//# sourceMappingURL=partition.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/pairwise.js\n/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar pairwise___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nfunction pairwise() {\n    return function (source) {\n        return source.lift(new PairwiseOperator());\n    };\n}\nvar PairwiseOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function PairwiseOperator() {}\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar PairwiseSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    pairwise___extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasPrev = false;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        } else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=pairwise.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/refCount.js\n/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar refCount___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nfunction refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nvar RefCountOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}();\nvar RefCountSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    refCount___extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=refCount.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/ConnectableObservable.js\n/** PURE_IMPORTS_START .._Subject,.._Observable,.._Subscriber,.._Subscription,.._operators_refCount PURE_IMPORTS_END */\nvar ConnectableObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable_ConnectableObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ConnectableObservable___extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        this._isComplete = false;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_Subscription();\n            connection.add(this.source.subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_Subscription.EMPTY;\n            } else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable_Observable);\nvar connectableProto = ConnectableObservable_ConnectableObservable.prototype;\nvar connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ConnectableObservable___extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(SubjectSubscriber);\nvar ConnectableObservable_RefCountOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new ConnectableObservable_RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}();\nvar ConnectableObservable_RefCountSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ConnectableObservable___extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=ConnectableObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/multicast.js\n/** PURE_IMPORTS_START .._observable_ConnectableObservable PURE_IMPORTS_END */\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        } else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar MulticastOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}();\n//# sourceMappingURL=multicast.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/share.js\n/** PURE_IMPORTS_START ._multicast,._refCount,.._Subject PURE_IMPORTS_END */\n\n\n\nfunction shareSubjectFactory() {\n    return new Subject_Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return function (source) {\n        return refCount()(multicast(shareSubjectFactory)(source));\n    };\n}\n;\n//# sourceMappingURL=share.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/of.js\n/** PURE_IMPORTS_START ._ArrayObservable PURE_IMPORTS_END */\n\nvar of = ArrayObservable_ArrayObservable.of;\n//# sourceMappingURL=of.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/PromiseObservable.js\n/** PURE_IMPORTS_START .._util_root,.._Observable PURE_IMPORTS_END */\nvar PromiseObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PromiseObservable_PromiseObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    PromiseObservable___extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {PromiseLike<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            } else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                }).then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root[\"a\" /* root */].setTimeout(function () {\n                        throw err;\n                    });\n                });\n            }\n        } else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            } else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                }).then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root[\"a\" /* root */].setTimeout(function () {\n                        throw err;\n                    });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable_Observable);\nfunction dispatchNext(arg) {\n    var value = arg.value,\n        subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err,\n        subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/IteratorObservable.js\n/** PURE_IMPORTS_START .._util_root,.._Observable,.._symbol_iterator PURE_IMPORTS_END */\nvar IteratorObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IteratorObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    IteratorObservable___extends(IteratorObservable, _super);\n    function IteratorObservable(iterator, scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n        if (iterator == null) {\n            throw new Error('iterator cannot be null.');\n        }\n        this.iterator = getIterator(iterator);\n    }\n    IteratorObservable.create = function (iterator, scheduler) {\n        return new IteratorObservable(iterator, scheduler);\n    };\n    IteratorObservable.dispatch = function (state) {\n        var index = state.index,\n            hasError = state.hasError,\n            iterator = state.iterator,\n            subscriber = state.subscriber;\n        if (hasError) {\n            subscriber.error(state.error);\n            return;\n        }\n        var result = iterator.next();\n        if (result.done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(result.value);\n        state.index = index + 1;\n        if (subscriber.closed) {\n            if (typeof iterator.return === 'function') {\n                iterator.return();\n            }\n            return;\n        }\n        this.schedule(state);\n    };\n    IteratorObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this,\n            iterator = _a.iterator,\n            scheduler = _a.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\n                index: index, iterator: iterator, subscriber: subscriber\n            });\n        } else {\n            do {\n                var result = iterator.next();\n                if (result.done) {\n                    subscriber.complete();\n                    break;\n                } else {\n                    subscriber.next(result.value);\n                }\n                if (subscriber.closed) {\n                    if (typeof iterator.return === 'function') {\n                        iterator.return();\n                    }\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return IteratorObservable;\n}(Observable_Observable);\nvar IteratorObservable_StringIterator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function StringIterator(str, idx, len) {\n        if (idx === void 0) {\n            idx = 0;\n        }\n        if (len === void 0) {\n            len = str.length;\n        }\n        this.str = str;\n        this.idx = idx;\n        this.len = len;\n    }\n    StringIterator.prototype[iterator_iterator] = function () {\n        return this;\n    };\n    StringIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.str.charAt(this.idx++)\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return StringIterator;\n}();\nvar IteratorObservable_ArrayIterator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function ArrayIterator(arr, idx, len) {\n        if (idx === void 0) {\n            idx = 0;\n        }\n        if (len === void 0) {\n            len = toLength(arr);\n        }\n        this.arr = arr;\n        this.idx = idx;\n        this.len = len;\n    }\n    ArrayIterator.prototype[iterator_iterator] = function () {\n        return this;\n    };\n    ArrayIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return ArrayIterator;\n}();\nfunction getIterator(obj) {\n    var i = obj[iterator_iterator];\n    if (!i && typeof obj === 'string') {\n        return new IteratorObservable_StringIterator(obj);\n    }\n    if (!i && obj.length !== undefined) {\n        return new IteratorObservable_ArrayIterator(obj);\n    }\n    if (!i) {\n        throw new TypeError('object is not iterable');\n    }\n    return obj[iterator_iterator]();\n}\nvar maxSafeInteger = /*@__PURE__*/Math.pow(2, 53) - 1;\nfunction toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) {\n        return 0;\n    }\n    if (len === 0 || !numberIsFinite(len)) {\n        return len;\n    }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) {\n        return 0;\n    }\n    if (len > maxSafeInteger) {\n        return maxSafeInteger;\n    }\n    return len;\n}\nfunction numberIsFinite(value) {\n    return typeof value === 'number' && root[\"a\" /* root */].isFinite(value);\n}\nfunction sign(value) {\n    var valueAsNumber = +value;\n    if (valueAsNumber === 0) {\n        return valueAsNumber;\n    }\n    if (isNaN(valueAsNumber)) {\n        return valueAsNumber;\n    }\n    return valueAsNumber < 0 ? -1 : 1;\n}\n//# sourceMappingURL=IteratorObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/ArrayLikeObservable.js\n/** PURE_IMPORTS_START .._Observable,._ScalarObservable,._EmptyObservable PURE_IMPORTS_END */\nvar ArrayLikeObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayLikeObservable_ArrayLikeObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ArrayLikeObservable___extends(ArrayLikeObservable, _super);\n    function ArrayLikeObservable(arrayLike, scheduler) {\n        _super.call(this);\n        this.arrayLike = arrayLike;\n        this.scheduler = scheduler;\n        if (!scheduler && arrayLike.length === 1) {\n            this._isScalar = true;\n            this.value = arrayLike[0];\n        }\n    }\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\n        var length = arrayLike.length;\n        if (length === 0) {\n            return new EmptyObservable();\n        } else if (length === 1) {\n            return new ScalarObservable(arrayLike[0], scheduler);\n        } else {\n            return new ArrayLikeObservable(arrayLike, scheduler);\n        }\n    };\n    ArrayLikeObservable.dispatch = function (state) {\n        var arrayLike = state.arrayLike,\n            index = state.index,\n            length = state.length,\n            subscriber = state.subscriber;\n        if (subscriber.closed) {\n            return;\n        }\n        if (index >= length) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(arrayLike[index]);\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this,\n            arrayLike = _a.arrayLike,\n            scheduler = _a.scheduler;\n        var length = arrayLike.length;\n        if (scheduler) {\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\n            });\n        } else {\n            for (var i = 0; i < length && !subscriber.closed; i++) {\n                subscriber.next(arrayLike[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayLikeObservable;\n}(Observable_Observable);\n//# sourceMappingURL=ArrayLikeObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/Notification.js\n/** PURE_IMPORTS_START ._Observable PURE_IMPORTS_END */\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification_Notification = /*@__PURE__*/ /*@__PURE__*/function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        } else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_Observable.of(this.value);\n            case 'E':\n                return Observable_Observable.throw(this.error);\n            case 'C':\n                return Observable_Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}();\n//# sourceMappingURL=Notification.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/observeOn.js\n/** PURE_IMPORTS_START .._Subscriber,.._Notification PURE_IMPORTS_END */\nvar observeOn___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nvar ObserveOnOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new observeOn_ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar observeOn_ObserveOnSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    observeOn___extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification,\n            destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_Subscriber);\nvar ObserveOnMessage = /*@__PURE__*/ /*@__PURE__*/function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}();\n//# sourceMappingURL=observeOn.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/FromObservable.js\nvar FromObservable__typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/** PURE_IMPORTS_START .._util_isArray,.._util_isArrayLike,.._util_isPromise,._PromiseObservable,._IteratorObservable,._ArrayObservable,._ArrayLikeObservable,.._symbol_iterator,.._Observable,.._operators_observeOn,.._symbol_observable PURE_IMPORTS_END */\nvar FromObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromObservable_FromObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    FromObservable___extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        _super.call(this, null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 10 20 30\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 3 6 12 24 48 96 192 384 768 1536\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[observable_observable] === 'function') {\n                if (ish instanceof Observable_Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            } else if (isArray(ish)) {\n                return new ArrayObservable_ArrayObservable(ish, scheduler);\n            } else if (isPromise(ish)) {\n                return new PromiseObservable_PromiseObservable(ish, scheduler);\n            } else if (typeof ish[iterator_iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable(ish, scheduler);\n            } else if (isArrayLike(ish)) {\n                return new ArrayLikeObservable_ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && (typeof ish === 'undefined' ? 'undefined' : FromObservable__typeof(ish)) || ish) + ' is not observable');\n    };\n    FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[observable_observable]().subscribe(subscriber);\n        } else {\n            return ish[observable_observable]().subscribe(new observeOn_ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable_Observable);\n//# sourceMappingURL=FromObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/from.js\n/** PURE_IMPORTS_START ._FromObservable PURE_IMPORTS_END */\n\nvar from = FromObservable_FromObservable.create;\n//# sourceMappingURL=from.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/concatAll.js\n/** PURE_IMPORTS_START ._mergeAll PURE_IMPORTS_END */\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll() {\n  return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/concat.js\n/** PURE_IMPORTS_START .._util_isScheduler,._of,._from,.._operators_concatAll PURE_IMPORTS_END */\n\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    if (observables.length === 1 || observables.length === 2 && isScheduler(observables[1])) {\n        return from(observables[0]);\n    }\n    return concatAll()(of.apply(void 0, observables));\n}\n//# sourceMappingURL=concat.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/startWith.js\n/** PURE_IMPORTS_START .._observable_ArrayObservable,.._observable_ScalarObservable,.._observable_EmptyObservable,.._observable_concat,.._util_isScheduler PURE_IMPORTS_END */\n\n\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        } else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len === 1) {\n            return concat(new ScalarObservable(array[0], scheduler), source);\n        } else if (len > 1) {\n            return concat(new ArrayObservable_ArrayObservable(array, scheduler), source);\n        } else {\n            return concat(new EmptyObservable(scheduler), source);\n        }\n    };\n}\n//# sourceMappingURL=startWith.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/switchMap.js\n/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar switchMap___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return function switchMapOperatorFunction(source) {\n        return source.lift(new SwitchMapOperator(project, resultSelector));\n    };\n}\nvar SwitchMapOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new switchMap_SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar switchMap_SwitchMapSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    switchMap___extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        } catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        } else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        } catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber);\n//# sourceMappingURL=switchMap.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/withLatestFrom.js\n/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar withLatestFrom___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        var observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nvar WithLatestFromOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new withLatestFrom_WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar withLatestFrom_WithLatestFromSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    withLatestFrom___extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        _super.call(this, destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        var len = observables.length;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            this.add(subscribeToResult(this, observable, observable, i));\n        }\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            } else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        } catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber);\n//# sourceMappingURL=withLatestFrom.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/NeverObservable.js\n/** PURE_IMPORTS_START .._Observable,.._util_noop PURE_IMPORTS_END */\nvar NeverObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar NeverObservable_NeverObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    NeverObservable___extends(NeverObservable, _super);\n    function NeverObservable() {\n        _super.call(this);\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer.\n     *\n     * <span class=\"informal\">An Observable that never emits anything.</span>\n     *\n     * <img src=\"./img/never.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that emits\n     * neither values nor errors nor the completion notification. It can be used\n     * for testing purposes or for composing with other Observables. Please note\n     * that by never emitting a complete notification, this Observable keeps the\n     * subscription from being disposed automatically. Subscriptions need to be\n     * manually disposed.\n     *\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n     * function info() {\n     *   console.log('Will not be called');\n     * }\n     * var result = Rx.Observable.never().startWith(7);\n     * result.subscribe(x => console.log(x), info, info);\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @return {Observable} A \"never\" Observable: never emits anything.\n     * @static true\n     * @name never\n     * @owner Observable\n     */\n    NeverObservable.create = function () {\n        return new NeverObservable();\n    };\n    NeverObservable.prototype._subscribe = function (subscriber) {\n        noop();\n    };\n    return NeverObservable;\n}(Observable_Observable);\n//# sourceMappingURL=NeverObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/never.js\n/** PURE_IMPORTS_START ._NeverObservable PURE_IMPORTS_END */\n\nvar never = NeverObservable_NeverObservable.create;\n//# sourceMappingURL=never.js.map\n// CONCATENATED MODULE: ./src/mixin/operators.js\n// # src / mixin / operators.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n\n// ### Observable extensions\n// #### Unsubscribe when\n// This operator unsubscribes from the source observable when `pauser$` emits a truthy value,\n// and re-subscribes when it emits a falsy value.\nvar operators_unsubscribeWhen = function unsubscribeWhen(pauser$) {\n  return function (source) {\n    if (false) throw Error();\n    return pauser$.pipe(switchMap(function (paused) {\n      return paused ? never() : source;\n    }));\n  };\n};\n\n// #### Custom subscribe\n// A custom subscribe function that will `recover` from an error and log it to the console.\n// This is a line of last defense to make sure the entire pipeline/page doesn't crash.\n/*\nfunction subscribe(ne, er, co) {\n  let res = this;\n  if (process.env.DEBUG) res = this.pipe(tap({ error: e => console.error(e) }));\n  return res\n    .pipe(catchError((e, c) => c))\n    .subscribe(ne, er, co);\n}\n*/\n// CONCATENATED MODULE: ./src/mixin/methods.js\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar methods__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction methods__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction methods__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction methods__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / methods.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n\n\n// ## Functions\n// What you will notice about the following helper functions is that many make reference to `this`.\n// This is because they are invoked with the `::` operator, binding `this` to the component,\n// effectively turning them into (private) methods. Since the final export is a mixin,\n// we want to avoid potentially conflicting names as much as possible.\n\nvar methods_helperMixin = function helperMixin(C) {\n  return function (_C) {\n    methods__inherits(_class, _C);\n\n    function _class() {\n      methods__classCallCheck(this, _class);\n\n      return methods__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    methods__createClass(_class, [{\n      key: \"histId\",\n\n      // Returns an identifier to mark frames on the history stack.\n      value: function histId() {\n        return this.el.id || this.constructor.componentName;\n      }\n\n      // ### Event filters\n\n    }, {\n      key: \"shouldLoadAnchor\",\n      value: function shouldLoadAnchor(anchor, hrefRegex) {\n        return anchor && anchor.target === \"\" && (!hrefRegex || anchor.href.search(hrefRegex) !== -1);\n      }\n    }, {\n      key: \"isPushEvent\",\n      value: function isPushEvent(_ref) {\n        var url = _ref.url,\n            anchor = _ref.anchor,\n            _ref$event = _ref.event,\n            metaKey = _ref$event.metaKey,\n            ctrlKey = _ref$event.ctrlKey;\n\n        return !metaKey && !ctrlKey && this.shouldLoadAnchor(anchor, this.hrefRegex) && !isExternal(url, this);\n      }\n    }, {\n      key: \"isHintEvent\",\n      value: function isHintEvent(_ref2) {\n        var url = _ref2.url,\n            anchor = _ref2.anchor;\n\n        return this.shouldLoadAnchor(anchor, this.hrefRegex) && !isExternal(url, this) && !isHash(url, this);\n      }\n\n      // Determines if a pair of context's constitutes a hash change (vs. a page chagne)\n      // We take as a hash change when the pathname of the URLs is the same,\n      // and the `hash` isn't empty.\n\n    }, {\n      key: \"isHashChange\",\n      value: function isHashChange(_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            prevPathname = _ref4[0].url.pathname,\n            _ref4$ = _ref4[1],\n            _ref4$$url = _ref4$.url,\n            pathname = _ref4$$url.pathname,\n            hash = _ref4$$url.hash,\n            type = _ref4$.type;\n\n        return pathname === prevPathname && (type === POP || type === PUSH && hash !== \"\");\n      }\n    }]);\n\n    return _class;\n  }(C);\n};\n// CONCATENATED MODULE: ./src/mixin/scrolling.js\nvar scrolling__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction scrolling__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction scrolling__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction scrolling__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / scrolling.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n\n// ### Managing scroll positions\n// The following functions deal with managing the scroll position of the site.\n\nvar scrolling_scrollMixin = function scrollMixin(C) {\n  return function (_C) {\n    scrolling__inherits(_class, _C);\n\n    function _class() {\n      scrolling__classCallCheck(this, _class);\n\n      return scrolling__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    scrolling__createClass(_class, [{\n      key: \"scrollHashIntoView\",\n\n      // Given a hash, find the element of the same id on the page, and scroll it into view.\n      // If no hash is provided, scroll to the top instead.\n      value: function scrollHashIntoView(hash) {\n        if (hash) {\n          var el = document.getElementById(hash.substr(1));\n          if (el) el.scrollIntoView();else if (false) console.warn(\"Can't find element with id \" + hash);\n        } else window.scroll(window.pageXOffset, 0);\n      }\n\n      // Takes the current history state, and restores the scroll position.\n\n    }, {\n      key: \"restoreScrollPostion\",\n      value: function restoreScrollPostion() {\n        var id = this.histId(); // TODO\n        var state = window.history.state && window.history.state[id] || {};\n\n        if (state.scrollTop != null) {\n          document.body.style.minHeight = state.scrollHeight;\n          window.scroll(window.pageXOffset, state.scrollTop);\n          /* document.body.style.minHeight = ''; */\n        } else if (state.hash) {\n          this.scrollHashIntoView(window.location.hash);\n        }\n      }\n\n      // TODO\n\n    }, {\n      key: \"manageScrollPostion\",\n      value: function manageScrollPostion(_ref) {\n        var type = _ref.type,\n            hash = _ref.url.hash;\n\n        if (type === PUSH) {\n          this.scrollHashIntoView(hash);\n        }\n\n        if (type === POP && this.scrollRestoration) {\n          this.restoreScrollPostion();\n        }\n      }\n    }, {\n      key: \"saveScrollPosition\",\n      value: function saveScrollPosition(state) {\n        var id = this.histId();\n        return Object.assign(state, _defineProperty({}, id, Object.assign(state[id] || {}, {\n          scrollTop: getScrollTop(),\n          scrollHeight: getScrollHeight()\n        })));\n      }\n    }]);\n\n    return _class;\n  }(C);\n};\n// CONCATENATED MODULE: ./src/mixin/history.js\nvar history__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction history__defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction history__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction history__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction history__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / history.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// ## Overview\n// This file contains helper funtions related to managing the History API.\n\n// ## Imports\n\n\n\n\n\nvar history_historyMixin = function historyMixin(C) {\n  return function (_scrollMixin) {\n    history__inherits(_class, _scrollMixin);\n\n    function _class() {\n      history__classCallCheck(this, _class);\n\n      return history__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    history__createClass(_class, [{\n      key: \"updateHistoryState\",\n\n      // ## Update History state\n      // add a new entry on the history stack, assuming the href is differnt.\n      value: function updateHistoryState(_ref) {\n        var type = _ref.type,\n            replace = _ref.replace,\n            _ref$url = _ref.url,\n            href = _ref$url.href,\n            hash = _ref$url.hash;\n\n        if ((type === PUSH || type === INIT) && !isExternal(this)) {\n          var id = this.histId();\n          var method = replace || href === window.location.href ? \"replaceState\" : \"pushState\";\n          var state = Object.assign(window.history.state || {}, history__defineProperty({}, id, { hash: !!hash }));\n          window.history[method](state, document.title, href);\n        }\n      }\n    }, {\n      key: \"updateHistoryStateHash\",\n      value: function updateHistoryStateHash(_ref2) {\n        var type = _ref2.type,\n            url = _ref2.url;\n        var hash = url.hash,\n            href = url.href;\n\n\n        if (type === PUSH && !isExternal(this)) {\n          var id = this.histId();\n          var currState = Object.assign(window.history.state, history__defineProperty({}, id, Object.assign(window.history.state[id], { hash: true })));\n          var nextState = history__defineProperty({}, id, { hash: true });\n          window.history.replaceState(currState, document.title, window.location.href);\n          window.history.pushState(nextState, document.title, href);\n        }\n\n        this.scrollHashIntoView(hash);\n      }\n    }, {\n      key: \"updateHistoryTitle\",\n      value: function updateHistoryTitle(_ref3) {\n        var type = _ref3.type,\n            title = _ref3.title;\n\n        document.title = title;\n\n        if (type === PUSH && !isExternal(this)) {\n          window.history.replaceState(window.history.state, title, window.location);\n        }\n      }\n    }, {\n      key: \"saveScrollHistoryState\",\n      value: function saveScrollHistoryState() {\n        if (isExternal(this)) return;\n\n        var state = this.saveScrollPosition(window.history.state || {});\n        window.history.replaceState(state, document.title, window.location);\n      }\n    }]);\n\n    return _class;\n  }(scrolling_scrollMixin(C));\n};\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/ArgumentOutOfRangeError.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar ArgumentOutOfRangeError___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    ArgumentOutOfRangeError___extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var err = _super.call(this, 'argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ArgumentOutOfRangeError;\n}(Error);\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/take.js\n/** PURE_IMPORTS_START .._Subscriber,.._util_ArgumentOutOfRangeError,.._observable_EmptyObservable PURE_IMPORTS_END */\nvar take___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take(count) {\n    return function (source) {\n        if (count === 0) {\n            return new EmptyObservable();\n        } else {\n            return source.lift(new take_TakeOperator(count));\n        }\n    };\n}\nvar take_TakeOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError();\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    take___extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber_Subscriber);\n//# sourceMappingURL=take.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/zip.js\n/** PURE_IMPORTS_START .._observable_ArrayObservable,.._util_isArray,.._Subscriber,.._OuterSubscriber,.._util_subscribeToResult,.._symbol_iterator PURE_IMPORTS_END */\nvar zip___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n    };\n}\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nfunction zipStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = observables[observables.length - 1];\n    if (typeof project === 'function') {\n        observables.pop();\n    }\n    return new ArrayObservable_ArrayObservable(observables).lift(new ZipOperator(project));\n}\nvar ZipOperator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function ZipOperator(project) {\n        this.project = project;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new zip_ZipSubscriber(subscriber, this.project));\n    };\n    return ZipOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar zip_ZipSubscriber = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    zip___extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, project, values) {\n        if (values === void 0) {\n            values = Object.create(null);\n        }\n        _super.call(this, destination);\n        this.iterators = [];\n        this.active = 0;\n        this.project = typeof project === 'function' ? project : null;\n        this.values = values;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new zip_StaticArrayIterator(value));\n        } else if (typeof value[iterator_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[iterator_iterator]()));\n        } else {\n            iterators.push(new zip_ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            } else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.project) {\n            this._tryProject(args);\n        } else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        } catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber_Subscriber);\nvar StaticIterator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}();\nvar zip_StaticArrayIterator = /*@__PURE__*/ /*@__PURE__*/function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[iterator_iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar zip_ZipBufferIterator = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    zip___extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        _super.call(this, destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    ZipBufferIterator.prototype[iterator_iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        } else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        } else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber);\n//# sourceMappingURL=zip.js.map\n// CONCATENATED MODULE: ./src/mixin/fetching.js\nvar fetching__slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar fetching__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction fetching__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction fetching__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction fetching__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / fetching.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// ## Overview\n// This file contains helper functions related to fetching new content.\n\n// ## Imports\n\n\n\n\n\n\nvar fetching_fetchMixin = function fetchMixin(C) {\n  return function (_C) {\n    fetching__inherits(_class, _C);\n\n    function _class() {\n      fetching__classCallCheck(this, _class);\n\n      return fetching__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    fetching__createClass(_class, [{\n      key: \"recoverIfResponse\",\n\n      // ## Fetching\n      // The `ajax` method will throw when it encoutners an a 400+ status code,\n      // however these are still valid responses from the server that can be shown using this component.\n      // This assumes error pages have the same HTML strcuture as the other pages though.\n      value: function recoverIfResponse(context, error) {\n        var status = error.status,\n            xhr = error.xhr;\n\n        // If we have a response, recover and continue with the pipeline.\n\n        if (xhr && xhr.response && status > 400) {\n          return of(Object.assign(context, { response: xhr.response }));\n        }\n\n        // If we don't have a response, this is an acutal error that should be dealt with.\n        return of(Object.assign(context, { error: error }));\n      }\n\n      // This function returns the request that matches a given URL.\n      // The way the pipeline is set up,\n      // it is either the `latestPrefetch` value (when the request is already completed),\n      // or the next value on the prefetch observable (when still in progress).\n\n    }, {\n      key: \"getFetch$\",\n      value: function getFetch$(_ref, latestPrefetch, prefetch$) {\n        var href = _ref.url.href;\n\n        return href === latestPrefetch.url.href && latestPrefetch.error == null ? of(latestPrefetch) : prefetch$.pipe(take(1));\n      }\n\n      // Returns an observable that emits exactly one notice, which contains the response.\n      // It will not emit until an (optional) page transition animation completes.\n\n    }, {\n      key: \"getResponse\",\n      value: function getResponse(prefetch$, _ref2) {\n        var _ref3 = fetching__slicedToArray(_ref2, 2),\n            context = _ref3[0],\n            latestPrefetch = _ref3[1];\n\n        return this.getFetch$(context, latestPrefetch, prefetch$).pipe(map(function (fetch) {\n          return Object.assign(fetch, context);\n        }), zip(this.animPromise, function (x) {\n          return x;\n        }));\n      }\n    }]);\n\n    return _class;\n  }(C);\n};\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/operators/concatMap.js\n/** PURE_IMPORTS_START ._mergeMap PURE_IMPORTS_END */\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap(project, resultSelector) {\n  return mergeMap(project, resultSelector, 1);\n}\n//# sourceMappingURL=concatMap.js.map\n// CONCATENATED MODULE: ./src/mixin/script-hack.js\nvar script_hack__slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar script_hack__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction script_hack__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction script_hack__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction script_hack__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / script-hack.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n// Importing the subset of RxJS functions that we are going to use.\n\n\n\n\n\n\n\n// ### Experimental script feature\n// TODO\nvar script_hack_scriptMixin = function scriptMixin(C) {\n  return function (_C) {\n    script_hack__inherits(_class, _C);\n\n    function _class() {\n      script_hack__classCallCheck(this, _class);\n\n      return script_hack__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    script_hack__createClass(_class, [{\n      key: \"tempRemoveScriptTags\",\n\n      // This function removes all script tags (as query'ed by `scriptSelector`) from the response.\n      value: function tempRemoveScriptTags(replaceEls) {\n        var _this2 = this;\n\n        var scripts = [];\n\n        replaceEls.forEach(function (docfrag) {\n          return Array.from(docfrag.querySelectorAll(_this2.scriptSelector)).forEach(function (script) {\n            var pair = [script, script.previousSibling];\n            script.parentNode.removeChild(script);\n            scripts.push(pair);\n          });\n        });\n\n        return scripts;\n      }\n\n      // Attempts to (synchronously) insert a `script` tag into the DOM, *before* a given `ref` element.\n\n    }, {\n      key: \"insertScript\",\n      value: function insertScript(_ref) {\n        var _ref2 = script_hack__slicedToArray(_ref, 2),\n            script = _ref2[0],\n            ref = _ref2[1];\n\n        // Temporarily overwrite `document.wirte` to simulate its behavior during the initial load.\n        // This only works because scripts are inserted one-at-a-time (via `concatMap`).\n        var originalWrite = document.write;\n\n        document.write = function () {\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var temp = document.createElement(\"div\");\n          temp.innerHTML = args.join();\n          Array.from(temp.childNodes).forEach(function (node) {\n            ref.parentNode.insertBefore(node, ref.nextSibling);\n          });\n        };\n\n        // If the script tag needs to fetch its source code, we insert it into the DOM,\n        // but we return an observable that only completes once the script has fired its `load` event.\n        return script.src !== \"\" ? Observable_Observable.create(function (observer) {\n          script.addEventListener(\"load\", function (x) {\n            document.write = originalWrite;\n            observer.complete(x);\n          });\n\n          script.addEventListener(\"error\", function (x) {\n            document.write = originalWrite;\n            observer.error(x);\n          });\n\n          ref.parentNode.insertBefore(script, ref.nextSibling);\n        }) : // Otherwise we insert it into the DOM and reset the `document.write` function.\n        of({}).pipe(tap(function () {\n          ref.parentNode.insertBefore(script, ref.nextSibling);\n          document.write = originalWrite;\n        }));\n      }\n\n      // Takes a list of `script`--`ref` pairs, and inserts them into the DOM one-by-one.\n\n    }, {\n      key: \"reinsertScriptTags\",\n      value: function reinsertScriptTags(context) {\n        if (!this.scriptSelector) return of(context);\n\n        var scripts = context.scripts;\n\n\n        return from(scripts).pipe(concatMap(this.insertScript.bind(this)), catchError(function (error) {\n          throw Object.assign(context, { error: error });\n        })).toPromise().then(function () {\n          return context;\n        });\n      }\n    }]);\n\n    return _class;\n  }(C);\n};\n// CONCATENATED MODULE: ./src/mixin/update.js\nvar update__slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar update__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction update__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction update__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction update__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / update.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n\n\nvar update_updateMixin = function updateMixin(C) {\n  return function (_scriptMixin) {\n    update__inherits(_class, _scriptMixin);\n\n    function _class() {\n      update__classCallCheck(this, _class);\n\n      return update__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    update__createClass(_class, [{\n      key: \"getTitle\",\n\n      // Extracts the title of the page\n      value: function getTitle(fragment) {\n        return (fragment.querySelector(\"title\") || {}).textContent;\n      }\n\n      // Extracts the elements to be replaced\n\n    }, {\n      key: \"getReplaceElements\",\n      value: function getReplaceElements(fragment) {\n        if (this.replaceIds.length > 0) {\n          return this.replaceIds.map(function (id) {\n            return fragment.getElementById(id);\n          });\n        } else if (this.el.id) {\n          return [fragment.getElementById(this.el.id)];\n        } else {\n          var index = Array.from(document.getElementsByTagName(this.el.tagName)).indexOf(this.el);\n          return [fragment.querySelectorAll(this.el.tagName)[index]];\n        }\n      }\n\n      // Takes the response string and turns it into document fragments\n      // that can be inserted into the DOM.\n\n    }, {\n      key: \"responseToContent\",\n      value: function responseToContent(context) {\n        var response = context.response;\n\n\n        var fragment = common_fragmentFromString(response);\n        var title = this.getTitle(fragment);\n        var replaceEls = this.getReplaceElements(fragment);\n\n        if (replaceEls.some(function (x) {\n          return x == null;\n        })) {\n          throw Object.assign(context, { replaceElMissing: true });\n        }\n\n        var scripts = this.scriptSelector ? this.tempRemoveScriptTags(replaceEls) : [];\n\n        return Object.assign(context, { title: title, replaceEls: replaceEls, scripts: scripts });\n      }\n\n      // Replaces the old elments with the new one, one-by-one.\n\n    }, {\n      key: \"replaceContentByIds\",\n      value: function replaceContentByIds(elements) {\n        this.replaceIds.map(function (id) {\n          return document.getElementById(id);\n        }).forEach(function (oldElement, i) {\n          oldElement.parentNode.replaceChild(elements[i], oldElement);\n        });\n      }\n\n      // When no `relaceIds` are set, replace the entire content of the component (slow).\n\n    }, {\n      key: \"replaceContentWholesale\",\n      value: function replaceContentWholesale(_ref) {\n        var _ref2 = update__slicedToArray(_ref, 1),\n            el = _ref2[0];\n\n        this.el.innerHTML = el.innerHTML;\n      }\n\n      // TODO: doc\n\n    }, {\n      key: \"replaceContent\",\n      value: function replaceContent(replaceEls) {\n        if (this.replaceIds.length > 0) {\n          this.replaceContentByIds(replaceEls);\n        } else {\n          this.replaceContentWholesale(replaceEls);\n        }\n      }\n\n      // TODO: doc\n\n    }, {\n      key: \"updateDOM\",\n      value: function updateDOM(context) {\n        try {\n          var replaceEls = context.replaceEls;\n\n          this.updateHistoryTitle(context);\n          if (isExternal(this)) this.rewriteURLs(replaceEls);\n          this.replaceContent(replaceEls);\n        } catch (error) {\n          throw Object.assign(context, { error: error });\n        }\n      }\n\n      // When fetching documents from an external source,\n      // relative URLs will be resolved relative to the current `window.location`.\n      // We can rewrite URL to absolute urls\n\n    }, {\n      key: \"rewriteURLs\",\n      value: function rewriteURLs(replaceEls) {\n        var _this2 = this;\n\n        replaceEls.forEach(function (el) {\n          /* console.time(); */\n          el.querySelectorAll(\"[href]\").forEach(_this2.rewriteURL(\"href\"));\n          el.querySelectorAll(\"[src]\").forEach(_this2.rewriteURL(\"src\"));\n          el.querySelectorAll(\"img[srcset]\").forEach(_this2.rewriteURLSrcSet(\"srcset\"));\n          el.querySelectorAll(\"blockquote[cite]\").forEach(_this2.rewriteURL(\"cite\"));\n          el.querySelectorAll(\"del[cite]\").forEach(_this2.rewriteURL(\"cite\"));\n          el.querySelectorAll(\"ins[cite]\").forEach(_this2.rewriteURL(\"cite\"));\n          el.querySelectorAll(\"q[cite]\").forEach(_this2.rewriteURL(\"cite\"));\n          el.querySelectorAll(\"img[longdesc]\").forEach(_this2.rewriteURL(\"longdesc\"));\n          el.querySelectorAll(\"frame[longdesc]\").forEach(_this2.rewriteURL(\"longdesc\"));\n          el.querySelectorAll(\"iframe[longdesc]\").forEach(_this2.rewriteURL(\"longdesc\"));\n          el.querySelectorAll(\"img[usemap]\").forEach(_this2.rewriteURL(\"usemap\"));\n          el.querySelectorAll(\"input[usemap]\").forEach(_this2.rewriteURL(\"usemap\"));\n          el.querySelectorAll(\"object[usemap]\").forEach(_this2.rewriteURL(\"usemap\"));\n          el.querySelectorAll(\"form[action]\").forEach(_this2.rewriteURL(\"action\"));\n          el.querySelectorAll(\"button[formaction]\").forEach(_this2.rewriteURL(\"formaction\"));\n          el.querySelectorAll(\"input[formaction]\").forEach(_this2.rewriteURL(\"formaction\"));\n          el.querySelectorAll(\"video[poster]\").forEach(_this2.rewriteURL(\"poster\"));\n          el.querySelectorAll(\"object[data]\").forEach(_this2.rewriteURL(\"data\"));\n          el.querySelectorAll(\"object[codebase]\").forEach(_this2.rewriteURL(\"codebase\"));\n          el.querySelectorAll(\"object[archive]\").forEach(_this2.rewriteURLList(\"archive\"));\n          /* console.timeEnd(); */\n          /* el.querySelectorAll(\"command[icon]\").forEach(this.rewriteURL(\"icon\")); */ // obsolte\n        });\n      }\n    }, {\n      key: \"rewriteURL\",\n      value: function rewriteURL(attr) {\n        var _this3 = this;\n\n        return function (el) {\n          try {\n            el.setAttribute(attr, new URL(el.getAttribute(attr), _this3.href).href);\n          } catch (e) {\n            if (false) console.warn(\"Couldn't rewrite URL in attribute \" + attr + \" on element\", el);\n          }\n        };\n      }\n    }, {\n      key: \"rewriteURLSrcSet\",\n      value: function rewriteURLSrcSet(attr) {\n        var _this4 = this;\n\n        return function (el) {\n          try {\n            el.setAttribute(attr, el.getAttribute(attr).split(/\\s*,\\s*/).map(function (str) {\n              var pair = str.split(/\\s+/);\n              pair[0] = new URL(pair[0], _this4.href).href;\n              return pair.join(\" \");\n            }).join(\", \"));\n          } catch (e) {\n            if (false) console.warn(\"Couldn't rewrite URLs in attribute \" + attr + \" on element\", el);\n          }\n        };\n      }\n    }, {\n      key: \"rewriteURLList\",\n      value: function rewriteURLList(attr) {\n        var _this5 = this;\n\n        return function (el) {\n          try {\n            el.setAttribute(attr, el.getAttribute(attr).split(/[\\s,]+/).map(function (str) {\n              return new URL(str, _this5.href).href;\n            }).join(\", \"));\n          } catch (e) {\n            if (false) console.warn(\"Couldn't rewrite URLs in attribute \" + attr + \" on element\", el);\n          }\n        };\n      }\n    }]);\n\n    return _class;\n  }(script_hack_scriptMixin(C));\n};\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isNumeric.js\n/** PURE_IMPORTS_START .._util_isArray PURE_IMPORTS_END */\n\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray(val) && val - parseFloat(val) + 1 >= 0;\n}\n;\n//# sourceMappingURL=isNumeric.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/scheduler/Action.js\n/** PURE_IMPORTS_START .._Subscription PURE_IMPORTS_END */\nvar Action___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    Action___extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription_Subscription);\n//# sourceMappingURL=Action.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/scheduler/AsyncAction.js\n/** PURE_IMPORTS_START .._util_root,._Action PURE_IMPORTS_END */\nvar AsyncAction___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction_AsyncAction = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    AsyncAction___extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return root[\"a\" /* root */].setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root[\"a\" /* root */].clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        } else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        } catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action);\n//# sourceMappingURL=AsyncAction.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/Scheduler.js\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = /*@__PURE__*/ /*@__PURE__*/function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () {\n        return +new Date();\n    };\n    return Scheduler;\n}();\n//# sourceMappingURL=Scheduler.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/scheduler/AsyncScheduler.js\n/** PURE_IMPORTS_START .._Scheduler PURE_IMPORTS_END */\nvar AsyncScheduler___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar AsyncScheduler = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    AsyncScheduler___extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler);\n//# sourceMappingURL=AsyncScheduler.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/scheduler/async.js\n/** PURE_IMPORTS_START ._AsyncAction,._AsyncScheduler PURE_IMPORTS_END */\n\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nvar async_async = /*@__PURE__*/new AsyncScheduler(AsyncAction_AsyncAction);\n//# sourceMappingURL=async.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/util/isDate.js\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n//# sourceMappingURL=isDate.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/TimerObservable.js\n/** PURE_IMPORTS_START .._util_isNumeric,.._Observable,.._scheduler_async,.._util_isScheduler,.._util_isDate PURE_IMPORTS_END */\nvar TimerObservable___extends = this && this.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable_TimerObservable = /*@__PURE__*/ /*@__PURE__*/function (_super) {\n    TimerObservable___extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) {\n            dueTime = 0;\n        }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        } else if (isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler(scheduler)) {\n            scheduler = async_async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate(dueTime) ? +dueTime - this.scheduler.now() : dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) {\n            initialDelay = 0;\n        }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index,\n            period = state.period,\n            subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        } else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this,\n            period = _a.period,\n            dueTime = _a.dueTime,\n            scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_Observable);\n//# sourceMappingURL=TimerObservable.js.map\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm5/observable/timer.js\n/** PURE_IMPORTS_START ._TimerObservable PURE_IMPORTS_END */\n\nvar timer = TimerObservable_TimerObservable.create;\n//# sourceMappingURL=timer.js.map\n// CONCATENATED MODULE: ./src/mixin/events.js\nvar events__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction events__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction events__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction events__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / events.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n// ### Event functions\n// These functions are called at various points along the observable pipeline to fire events,\n// and cause other side effects.\nvar events_eventMixin = function eventMixin(C) {\n  return function (_C) {\n    events__inherits(_class, _C);\n\n    function _class() {\n      events__classCallCheck(this, _class);\n\n      return events__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    events__createClass(_class, [{\n      key: \"onStart\",\n\n      // #### On start\n      value: function onStart(context) {\n        var _this2 = this;\n\n        // By default, hy-push-state will wait at least `duration` ms before replacing the content,\n        // so that animations have enough time to finish.\n        // The behavior is encoded with a promise that resolves after `duration` ms.\n        this.animPromise = timer(this.duration);\n\n        // The `waitUntil` function lets users of this component override the animation promise.\n        // This allows for event-based code execution, rather than timing-based, which prevents hiccups\n        // and glitches when, for example, painting takes longer than expected.\n        var waitUntil = function waitUntil(promise) {\n          if (false) {\n            console.warn(\"waitUntil expects a Promise as first argument.\");\n          }\n          _this2.animPromise = promise;\n        };\n\n        this.fireEvent(\"start\", {\n          detail: Object.assign(context, { waitUntil: waitUntil })\n        });\n      }\n\n      // Example usage of `waitUntil`:\n      //\n      // ```js\n      // hyPushStateEl.addEventListener('hy-push-state-start', ({ detail }) => {\n      //   const animPromise = new Promise((resolve) => {\n      //     const anim = myContent.animate(...);\n      //     anim.addEventListener('finish', resolve);\n      //   });\n      //   detail.waitUntil(animPromise);\n      // });\n      // ```\n      // {:style=\"font-style:italic\"}\n\n      // #### Error callbacks\n      // This function handles errors while trying to insert the new content into the document.\n      // If the retrieved documened doesn't contain the ids we are looking for\n      // we can't insert the content dynamically, so we tell the browser to open the link directly.\n\n    }, {\n      key: \"onDOMError\",\n      value: function onDOMError(context) {\n        var replaceElMissing = context.replaceElMissing,\n            url = context.url;\n\n        // Ideally you should prevent this situation by adding the\n        // `no-push-state` CSS class\n        // on links to documents that don't match the expected document layout.\n        // This only serves as a fallback.\n\n        if (replaceElMissing) {\n          if (false) {\n            var ids = this.replaceIds.concat(this.el.id || []).map(function (x) {\n              return \"#\" + x;\n            }).join(\", \");\n            console.warn(\"Couldn't find one or more ids of '\" + ids + \"' in the document at '\" + window.location + \"'. Opening the link directly.\");\n          }\n\n          // To open the link directly, we first pop one entry off the browser history.\n          // We have to do this because (some) browsers won't handle the back button correctly otherwise.\n          // We then wait for a short time and change the document's location.\n          // TODO: If we didn't call `pushState` optimistically we wouldn't have to do this.\n          window.history.back();\n          setTimeout(function () {\n            document.location.href = url;\n          }, 100);\n\n          // If it's a different error, throw the generic `error` event.\n        } else {\n          if (false) console.error(context);\n          this.fireEvent(\"error\", { detail: context });\n        }\n      }\n\n      // If there is a network error during (pre-) fetching, fire `networkerror` event.\n\n    }, {\n      key: \"onNetworkError\",\n      value: function onNetworkError(context) {\n        if (false) console.error(context);\n        this.fireEvent(\"networkerror\", { detail: context });\n      }\n\n      // When using the experimental script feature,\n      // fire `scripterror` event if something goes wrong during script insertion.\n\n    }, {\n      key: \"onError\",\n      value: function onError(context) {\n        if (false) console.error(context);\n        this.fireEvent(\"error\", { detail: context });\n      }\n\n      // #### Others\n      // These event callbacks simply fire an event and pass the context as `detail`.\n\n    }, {\n      key: \"onReady\",\n      value: function onReady(context) {\n        this.fireEvent(\"ready\", { detail: context });\n      }\n    }, {\n      key: \"onAfter\",\n      value: function onAfter(context) {\n        this.fireEvent(\"after\", { detail: context });\n      }\n    }, {\n      key: \"onProgress\",\n      value: function onProgress(context) {\n        this.fireEvent(\"progress\", { detail: context });\n      }\n    }, {\n      key: \"onLoad\",\n      value: function onLoad(context) {\n        this.fireEvent(\"load\", { detail: context });\n      }\n    }]);\n\n    return _class;\n  }(C);\n};\n// CONCATENATED MODULE: ./src/mixin/setup.js\nvar setup__slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar setup__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction setup__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction setup__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction setup__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// # src / mixin / setup.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n// Importing the subset of RxJS functions that we are going to use.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar setup_setupObservablesMixin = function setupObservablesMixin(C) {\n  return function (_eventMixin) {\n    setup__inherits(_class, _eventMixin);\n\n    function _class() {\n      setup__classCallCheck(this, _class);\n\n      return setup__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    setup__createClass(_class, [{\n      key: \"compareContext\",\n\n      // A compare function for contexts, used in combination with `distinctUntilChanged`.\n      // We use `cacheNr` as it is a convenient (hacky) way of circumventing\n      // `distinctUntilChanged` when retrying requests.\n      value: function compareContext(p, q) {\n        return p.url.href === q.url.href && p.error === q.error && p.cacheNr === q.cacheNr;\n      }\n\n      // ### Setup observable\n      // This functions sets up the core observable pipeline of this component.\n\n    }, {\n      key: \"setupObservables\",\n      value: function setupObservables() {\n        var _this2 = this;\n\n        this.cacheNr = 1;\n\n        // For now, we take for granted that we have a stream of all `PUSH` events (loading a new page by\n        // clicking on a link) and `HINT` events (probable click on a link) which are `pushSubject` and\n        // `hintSubject` respectively.\n        var pushSubject = new Subject_Subject();\n        var hintSubject = new Subject_Subject();\n\n        // TODO: doc\n        var push$ = pushSubject.pipe(takeUntil(this.subjects.disconnect), map(function (event) {\n          return {\n            type: PUSH,\n            url: new url_URL(event.currentTarget.href, _this2.href),\n            anchor: event.currentTarget,\n            event: event,\n            cacheNr: _this2.cacheNr\n          };\n        }), filter(this.isPushEvent.bind(this)), tap(function (_ref) {\n          var event = _ref.event;\n\n          event.preventDefault();\n          _this2.saveScrollHistoryState();\n        }));\n\n        // In additon to `HINT` and `PUSH` events, there's also `POP` events, which are caused by\n        // modifying the browser history, e.g. clicking the back button, etc.\n        var pop$ = fromEvent(window, \"popstate\").pipe(takeUntil(this.subjects.disconnect), filter(function () {\n          return window.history.state && window.history.state[_this2.histId()];\n        }), map(function (event) {\n          return {\n            type: POP,\n            url: new url_URL(window.location, _this2.href),\n            event: event,\n            cacheNr: _this2.cacheNr\n          };\n        }));\n\n        var reload$ = this.reload$.pipe(takeUntil(this.subjects.disconnect));\n\n        // TODO: doc\n\n        var _merge$pipe$map = merge(push$, pop$, reload$).pipe(startWith({ url: new url_URL(this.initialHref) }), tap(function (_ref2) {\n          var url = _ref2.url;\n\n          // HACK: make hy-push-state mimic window.location?\n          _this2._url = url;\n        }), pairwise(), share(), partition(this.isHashChange)).map(function (obs$) {\n          return obs$.pipe(map(function (_ref3) {\n            var _ref4 = setup__slicedToArray(_ref3, 2),\n                x = _ref4[1];\n\n            return x;\n          }), share());\n        }),\n            _merge$pipe$map2 = setup__slicedToArray(_merge$pipe$map, 2),\n            hash$ = _merge$pipe$map2[0],\n            page$ = _merge$pipe$map2[1];\n\n        // We don't want to prefetch (i.e. use bandwidth) for a _possible_ page load,\n        // while a _certain_ page load is going on.\n        // The `pauser$` observable let's us achieve this.\n        // Needs to be deferred b/c of \"cyclical\" dependency.\n\n\n        var pauser$ = defer(function () {\n          return (\n            // A page change event means we want to pause prefetching, while\n            // a response event means we want to resume prefetching.\n            merge(page$.pipe(mapTo(true)), _this2.fetch$.pipe(mapTo(false)))\n          );\n        })\n        // Start with `false`, i.e. we want the prefetch pipelien to be active\n        .pipe(startWith(false), share());\n\n        // TODO: doc\n        var hint$ = hintSubject.pipe(takeUntil(this.subjects.disconnect), operators_unsubscribeWhen(pauser$), map(function (event) {\n          return {\n            type: HINT,\n            url: new url_URL(event.currentTarget.href, _this2.href),\n            anchor: event.currentTarget,\n            event: event,\n            cacheNr: _this2.cacheNr\n          };\n        }), filter(this.isHintEvent.bind(this)));\n\n        // The stream of (pre-)fetch events.\n        // Includes definitive page change events do deal with unexpected page changes.\n        var prefetch$ = merge(hint$, page$).pipe(\n        // Don't abort a request if the user \"jiggles\" over a link\n        distinctUntilChanged(this.compareContext.bind(this)), switchMap(function (context) {\n          return ajax({\n            method: \"GET\",\n            responseType: \"text\",\n            url: context.url,\n            crossDomain: isExternal(_this2)\n          }).pipe(map(function (_ref5) {\n            var response = _ref5.response;\n            return Object.assign(context, { response: response });\n          }), catchError(function (error) {\n            return _this2.recoverIfResponse(context, error);\n          }));\n        }),\n        // Start with some value so `withLatestFrom` below doesn't \"block\"\n        startWith({ url: {} }), share());\n\n        // TODO: doc\n        this.fetch$ = page$.pipe(tap(function (context) {\n          _this2.updateHistoryState(context);\n          _this2.onStart(context);\n        }), withLatestFrom(prefetch$), switchMap(this.getResponse.bind(this, prefetch$)), share());\n\n        // TODO: doc\n\n        var _fetch$$pipe = this.fetch$.pipe(partition(function (_ref6) {\n          var error = _ref6.error;\n          return !error;\n        })),\n            _fetch$$pipe2 = setup__slicedToArray(_fetch$$pipe, 2),\n            fetchOk$ = _fetch$$pipe2[0],\n            fetchError$ = _fetch$$pipe2[1];\n\n        // TODO: doc\n\n\n        var main$ = fetchOk$.pipe(map(this.responseToContent.bind(this)), tap(function (context) {\n          _this2.onReady(context);\n          _this2.updateDOM(context);\n          _this2.onAfter(context);\n          _this2.manageScrollPostion(context);\n        }), tap({ error: function error(e) {\n            return _this2.onDOMError(e);\n          } }), catchError(function (e, c) {\n          return c;\n        }),\n\n        // If the experimental script feature is enabled,\n        // scripts tags have been stripped from the content,\n        // and this is where we insert them again.\n        switchMap(this.reinsertScriptTags.bind(this)), tap({ error: function error(e) {\n            return _this2.onError(e);\n          } }), catchError(function (e, c) {\n          return c;\n        }));\n\n        // #### Subscriptions\n        // Subscribe to main and hash observables.\n        main$.subscribe(this.onLoad.bind(this));\n        hash$.subscribe(this.updateHistoryStateHash.bind(this));\n\n        // Subscribe to the fetch error branch.\n        fetchError$.subscribe(this.onNetworkError.bind(this));\n\n        // Fire `progress` event when fetching takes longer than expected.\n        page$.pipe(switchMap(function (context) {\n          return defer(function () {\n            return _this2.animPromise;\n          }).pipe(takeUntil(_this2.fetch$), mapTo(context));\n        })).subscribe(this.onProgress.bind(this));\n\n        // #### Keeping track of links\n        // We use a `MutationObserver` to keep track of all the links inside the component,\n        // and put events on the `pushSubject` and `hintSubject` observables,\n        // but first we need to check if `MutationObserver` is available.\n        if (\"MutationObserver\" in window && \"WeakSet\" in window) {\n          // A `Set` of `Element`s.\n          // We use this to keep track of which links already have their event listeners registered.\n          var links = new WeakSet();\n\n          // Binding `next` functions to their `Subject`s,\n          // so that we can pass them as callbacks directly. This is just for convenience.\n          var pushNext = pushSubject.next.bind(pushSubject);\n          var hintNext = hintSubject.next.bind(hintSubject);\n\n          // We don't use `Observable.fromEvent` here to avoid creating too many observables.\n          // Registering an unknown number of event listeners is somewhat debatable,\n          // but we certainly don't want to make it wrose.\n          // (The number could be brought down by using an `IntersectionObserver` in the future.\n          // Also note that typically there will be an animation playing while this is happening,\n          // so the effects are not easily noticed).\n          //\n          // In any case, `MutationObserver` and `Set` help us keep track of which links are children\n          // of this component, so that we can reliably add and remove the event listeners.\n          // The function to be called for every added node:\n          var addLink = function addLink(link) {\n            if (!links.has(link)) {\n              links.add(link);\n              link.addEventListener(\"click\", pushNext);\n              link.addEventListener(\"mouseenter\", hintNext, { passive: true });\n              link.addEventListener(\"touchstart\", hintNext, { passive: true });\n              link.addEventListener(\"focus\", hintNext, { passive: true });\n\n              // When fetching resources from an external domain, rewrite the link's href,\n              // so that shift-click, etc works as expected.\n              // if (isExternal(this)) {\n              //   link.href = new URL(link.getAttribute(\"href\"), this.href).href;\n              // }\n            }\n          };\n\n          var addListeners = function addListeners(addedNode) {\n            if (addedNode instanceof Element) {\n              if (matches.call(addedNode, _this2.linkSelector)) {\n                addLink(addedNode);\n              } else {\n                Array.from(addedNode.querySelectorAll(_this2.linkSelector)).forEach(addLink);\n              }\n            }\n          };\n\n          // Next, The function to be called for every removed node.\n          // Usually the elments will be removed from the document altogher\n          // when they are removed from this component,\n          // but since we can't be sure, we remove the event listeners anyway.\n          var removeLink = function removeLink(link) {\n            links.delete(link);\n            link.removeEventListener(\"click\", pushNext);\n            link.removeEventListener(\"mouseenter\", hintNext, { passive: true });\n            link.removeEventListener(\"touchstart\", hintNext, { passive: true });\n            link.removeEventListener(\"focus\", hintNext, { passive: true });\n          };\n\n          var removeListeners = function removeListeners(removedNode) {\n            if (removedNode instanceof Element) {\n              if (matches.call(removedNode, _this2.linkSelector)) {\n                removeLink(removedNode);\n              } else {\n                Array.from(removedNode.querySelectorAll(_this2.linkSelector)).forEach(removeLink);\n              }\n            }\n          };\n\n          // An observable wrapper around the mutation observer.\n          // We're only interested in nodes entering and leaving the entire subtree of this component,\n          // but not attribute changes.\n          Observable_Observable.create(function (obs) {\n            var next = obs.next.bind(obs);\n            _this2.mutationObserver = new MutationObserver(function (mutations) {\n              return Array.from(mutations).forEach(next);\n            });\n            _this2.mutationObserver.observe(_this2.el, {\n              childList: true,\n              subtree: true\n            });\n          })\n          // For every mutation, we remove the event listeners of elements that go out of the component\n          // (if any), and add event listeners to all elements that make it into the compnent (if any).\n          .subscribe(function (_ref7) {\n            var addedNodes = _ref7.addedNodes,\n                removedNodes = _ref7.removedNodes;\n\n            Array.from(removedNodes).forEach(removeListeners.bind(_this2));\n            Array.from(addedNodes).forEach(addListeners.bind(_this2));\n          });\n\n          // TODO\n          this.subjects.linkSelector.subscribe(function () {\n            // TODO\n            Array.from(links).forEach(removeLink);\n\n            // The mutation observer does not pick up the links that are already on the page,\n            // so we add them manually here, once.\n            addListeners.call(_this2, _this2.el);\n          });\n\n          // If we don't have `MutationObserver` and `Set`, we just register a `click` event listener\n          // on the entire component, and check if a click occurred on one of our links.\n          // Note that we can't reliably generate hints this way, so we don't.\n        } else {\n          this.el.addEventListener(\"click\", function (event) {\n            var anchor = matchesAncestors.call(event.target, _this2.linkSelector);\n            if (anchor && anchor.href) {\n              event.currentTarget = anchor; // eslint-disable-line no-param-reassign\n              pushSubject.next(event);\n            }\n          });\n        }\n      }\n    }]);\n\n    return _class;\n  }(events_eventMixin(update_updateMixin(fetching_fetchMixin(history_historyMixin(methods_helperMixin(C))))));\n};\n// CONCATENATED MODULE: ./src/mixin/index.js\nvar mixin__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar mixin__get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction mixin__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction mixin__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction mixin__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction mixin__toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// # src / mixin / index.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// ## Overview\n// This component is written in [RxJS] and reading its code requires some basic understanding\n// of how RxJS works. It may also serve as an example of how to use RxJS.\n//\n// Other than RxJS, you should be familiar with [ES6 Mixin][esmixins],\n// which is a clever way of using the ES6 class syntax to achieve inheritance-based mixins.\n// The mixin in the main export of this file.\n\n// ## Imports\n// Including the patches for ES6+ functions, but\n// there is a -lite version of the component that comes without these.\n// import 'core-js/fn/array/for-each';\n// import 'core-js/fn/array/from';\n// import 'core-js/fn/function/bind';\n// import 'core-js/fn/object/assign';\n\n// Importing the hy-compontent base libary,\n// which helps with making multiple versions of the component (Vanilla JS, WebComponent, etc...).\n\n\n\n\n\n\n\n// Partial polyfill of the URL class. Only provides the most basic funtionality of `URL`,\n// but sufficient for this compoennt.\n\n\n\n\n\n\n\n\n// ## Constants\n// A set of [Modernizr] tests that are required to run this component.\n// These are the bare-minimum requirements, more ad-hoc features tests for optional behavior\n// is part of the code below.\nvar MIXIN_FEATURE_TESTS = new _Set([].concat(mixin__toConsumableArray(COMPONENT_FEATURE_TESTS), [\"documentfragment\", \"eventlistener\", \"history\", \"promises\", \"queryselector\", \"requestanimationframe\"]));\n\n\n\n// Patching the document fragment's `getElementById` function, which is\n// not implemented in all browsers, even some modern ones.\nDocumentFragment.prototype.getElementById = DocumentFragment.prototype.getElementById || function getElementById(id) {\n  return this.querySelector(\"#\" + id);\n};\n\n// ## Push state mixin\nvar mixin_pushStateMixin = function pushStateMixin(C) {\n  return function (_setupObservablesMixi) {\n    mixin__inherits(_class, _setupObservablesMixi);\n\n    function _class() {\n      mixin__classCallCheck(this, _class);\n\n      return mixin__possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    mixin__createClass(_class, [{\n      key: \"setupComponent\",\n\n\n      // ### Setup\n      value: function setupComponent(el, props) {\n        mixin__get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), \"setupComponent\", this).call(this, el, props);\n\n        this.saveScrollHistoryState = this.saveScrollHistoryState.bind(this);\n\n        this.reload$ = new Subject_Subject();\n      }\n\n      // This component has no shadow DOM, so we just return the element.\n\n    }, {\n      key: \"setupShadowDOM\",\n      value: function setupShadowDOM(el) {\n        return el;\n      }\n\n      // Overriding the setup function.\n\n    }, {\n      key: \"connectComponent\",\n      value: function connectComponent() {\n        if (false) {\n          console.warn(\"hy-push-state needs a 'replace-ids' or 'id' attribute.\");\n        }\n\n        // Setting up scroll restoration\n        if (\"scrollRestoration\" in window.history) {\n          var orig = window.history.scrollRestoration;\n\n          this.subjects.scrollRestoration.pipe(takeUntil(this.subjects.disconnect)).subscribe(function (scrollRestoration) {\n            window.history.scrollRestoration = scrollRestoration ? \"manual\" : orig;\n          });\n        }\n\n        // If restore the last scroll position, if any.\n        this.restoreScrollPostion();\n\n        // Remember the current scroll position (for F5/reloads).\n        window.addEventListener(\"beforeunload\", this.saveScrollHistoryState);\n\n        // Calling the [setup observables function](./setup.md) function.\n        this.setupObservables();\n        mixin__get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), \"connectComponent\", this).call(this);\n\n        // Setting the initial `history.state`.\n        var url = new url_URL(this.initialHref);\n        this.updateHistoryState({ type: INIT, replace: true, url: url });\n\n        var replaceEls = this.getReplaceElements(document);\n        if (isExternal(this)) this.rewriteURLs(replaceEls);\n\n        // After all this is done, we can fire the one-time `init` event...\n        this.fireEvent(\"init\");\n\n        // ...and our custom `load` event, which gets fired on every page change.\n        // We provide similar data as subsequent `load` events,\n        // however we can't provide an `anchor` or `event`,\n        // since this `load` event wasn't caused by a user interaction.\n        this.onLoad({\n          type: INIT,\n          title: this.getTitle(document),\n          replaceEls: replaceEls,\n          url: url,\n          cacheNr: this.cacheNr\n        });\n      }\n    }, {\n      key: \"disconnectComponent\",\n      value: function disconnectComponent() {\n        mixin__get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), \"disconnectComponent\", this).call(this);\n        window.removeEventListener(\"beforeunload\", this.saveScrollHistoryState);\n      }\n\n      // ### Methods\n      // Public methods of this component. See [Methods](../../methods.md) for more.\n\n    }, {\n      key: \"assign\",\n      value: function assign(url) {\n        this.reload$.next({\n          type: PUSH,\n          url: new url_URL(url, this.href),\n          cacheNr: ++this.cacheNr // eslint-disable-line no-plusplus\n        });\n      }\n    }, {\n      key: \"reload\",\n      value: function reload() {\n        this.reload$.next({\n          type: PUSH,\n          cacheNr: ++this.cacheNr, // eslint-disable-line no-plusplus\n          url: new url_URL(this.href),\n          replace: true\n        });\n      }\n    }, {\n      key: \"replace\",\n      value: function replace(url) {\n        this.reload$.next({\n          type: PUSH,\n          url: new url_URL(url, this.href),\n          cacheNr: ++this.cacheNr, // eslint-disable-line no-plusplus\n          replace: true\n        });\n      }\n    }, {\n      key: \"hash\",\n\n\n      // ### Properties\n      // We expose the same properties as `window.location`\n      // (in many ways this component can be thought of as a \"replacement\" for the global `Location` object).\n      // Currently they are read-only.\n      get: function get() {\n        return this._url.hash;\n      }\n    }, {\n      key: \"host\",\n      get: function get() {\n        return this._url.host;\n      }\n    }, {\n      key: \"hostname\",\n      get: function get() {\n        return this._url.hostname;\n      }\n    }, {\n      key: \"href\",\n      get: function get() {\n        return this._url.href;\n      }\n    }, {\n      key: \"origin\",\n      get: function get() {\n        return this._url.origin;\n      }\n    }, {\n      key: \"pathname\",\n      get: function get() {\n        return this._url.pathname;\n      }\n    }, {\n      key: \"port\",\n      get: function get() {\n        return this._url.port;\n      }\n    }, {\n      key: \"protocol\",\n      get: function get() {\n        return this._url.protocol;\n      }\n    }, {\n      key: \"search\",\n      get: function get() {\n        return this._url.search;\n      }\n    }], [{\n      key: \"componentName\",\n\n      // The name of the component (required by hy-component)\n      get: function get() {\n        return \"hy-push-state\";\n      }\n\n      // ### Options\n      // The default values (and types) of the configuration options (required by hy-component)\n      // See [Options](../../options.md) for usage information.\n\n    }, {\n      key: \"types\",\n      get: function get() {\n        return {\n          replaceIds: array_array,\n          linkSelector: string,\n          scrollRestoration: bool,\n          duration: number,\n          hrefRegex: regex,\n          scriptSelector: string,\n          initialHref: string\n        };\n      }\n    }, {\n      key: \"defaults\",\n      get: function get() {\n        return {\n          replaceIds: [],\n          linkSelector: \"a[href]:not(.no-push-state)\",\n          scrollRestoration: false,\n          duration: 0,\n          hrefRegex: null,\n          scriptSelector: null,\n          initialHref: window.location.href\n        };\n      }\n    }]);\n\n    return _class;\n  }(setup_setupObservablesMixin(rxjs_rxjsMixin(componentMixin(C))));\n};\n\n// [rxjs]: https://github.com/ReactiveX/rxjs\n// [esmixins]: http://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/\n// [modernizr]: https://modernizr.com/\n// CONCATENATED MODULE: ./src/webcomponent/index.js\nvar webcomponent__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction webcomponent__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction webcomponent__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction webcomponent__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction webcomponent__toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// # src / webcomponent / index.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// import 'core-js/fn/array/from';\n\n\n\n\n\nvar WEBCOMPONENT_FEATURE_TESTS = new _Set([].concat(webcomponent__toConsumableArray(CUSTOM_ELEMENT_FEATURE_TESTS), webcomponent__toConsumableArray(MIXIN_FEATURE_TESTS)));\n\n\n\nvar HyPushStateElement = function (_customElementMixin) {\n  webcomponent__inherits(HyPushStateElement, _customElementMixin);\n\n  function HyPushStateElement() {\n    webcomponent__classCallCheck(this, HyPushStateElement);\n\n    return webcomponent__possibleConstructorReturn(this, (HyPushStateElement.__proto__ || Object.getPrototypeOf(HyPushStateElement)).apply(this, arguments));\n  }\n\n  webcomponent__createClass(HyPushStateElement, [{\n    key: \"getTemplate\",\n    value: function getTemplate() {\n      return null;\n    }\n  }], [{\n    key: \"observedAttributes\",\n    get: function get() {\n      return this.getObservedAttributes();\n    }\n  }]);\n\n  return HyPushStateElement;\n}(custom_element_customElementMixin(mixin_pushStateMixin(CustomElement)));\n// CONCATENATED MODULE: ./src/webcomponent/module.js\n// # src / webcomponent / module.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// ## Overview\n// TODO\n\n\n\nvar module_define = function define() {\n  window.customElements.define(\"hy-push-state\", HyPushStateElement);\n};\n\n// Make sure the polyfills are ready (if they are being used).\nif (\"customElements\" in window || window.WebComponents && window.WebComponents.ready) {\n  module_define();\n} else if (window.WebComponents) {\n  window.addEventListener(\"WebComponentsReady\", module_define);\n} else if (false) {\n  console.warn(\"Couldn't register component. Did you forget to include a WebComponents polyfill?\");\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// module.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 534ce02d929464ed2c3f","// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n/*@__PURE__*/ (function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\nexport { _root as root };\n//# sourceMappingURL=root.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/root.js","// # src / common.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n// Licensed under MIT\n\n/* eslint-disable no-plusplus */\n\nexport function parseType(type, attr) {\n  if (process.env.DEBUG && !type) {\n    return console.warn(`No type provided for attribute ${attr}.`);\n  }\n  return type ? type(attr) : attr;\n}\n\nexport function decamelize(str, sep = \"-\") {\n  return str\n    .replace(/([a-z\\d])([A-Z])/g, `$1${sep}$2`)\n    .replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, `$1${sep}$2`)\n    .toLowerCase();\n}\n\nfunction preserveCamelCase(strarg) {\n  let str = strarg;\n  let isLastCharLower = false;\n  let isLastCharUpper = false;\n  let isLastLastCharUpper = false;\n\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charAt(i);\n\n    if (isLastCharLower && /[a-zA-Z]/.test(c) && c.toUpperCase() === c) {\n      str = `${str.substr(0, i)}-${str.substr(i)}`;\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (\n      isLastCharUpper &&\n      isLastLastCharUpper &&\n      /[a-zA-Z]/.test(c) &&\n      c.toLowerCase() === c\n    ) {\n      str = `${str.substr(0, i - 1)}-${str.substr(i - 1)}`;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = c.toLowerCase() === c;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = c.toUpperCase() === c;\n    }\n  }\n\n  return str;\n}\n\nexport function camelCase(...args) {\n  let str = [].map\n    .call(args, x => x.trim())\n    .filter(x => x.length)\n    .join(\"-\");\n\n  if (str.length === 0) {\n    return \"\";\n  }\n\n  if (str.length === 1) {\n    return str.toLowerCase();\n  }\n\n  str = preserveCamelCase(str);\n\n  return str\n    .replace(/^[_.\\- ]+/, \"\")\n    .toLowerCase()\n    .replace(/[_.\\- ]+(\\w|$)/g, (m, p1) => p1.toUpperCase());\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/hy-component/src/common.js","// # src / custom-element.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n// Licensed under MIT\n\n// import 'core-js/fn/array/for-each';\n// import 'core-js/fn/array/from';\n// import 'core-js/fn/array/map';\n// import 'core-js/fn/number/constructor';\n// import 'core-js/fn/object/keys';\n// import 'core-js/fn/object/set-prototype-of';\n// import 'core-js/fn/reflect/construct';\n// import 'core-js/fn/string/trim'; // used by camelcase\n\nimport { Set } from \"qd-set\";\n\nimport { parseType, camelCase, decamelize } from \"./common\";\nimport { COMPONENT_FEATURE_TESTS } from \"./component\";\n\nexport { Set };\n\nexport const CUSTOM_ELEMENT_FEATURE_TESTS = new Set([\n  ...COMPONENT_FEATURE_TESTS,\n  \"template\",\n  \"customelements\"\n]);\n\nlet circutBreaker = null;\n\nexport const customElementMixin = C =>\n  class extends C {\n    static getObservedAttributes() {\n      const { types } = this;\n      return Object.keys(types).map(x => decamelize(x));\n    }\n\n    constructor(...args) {\n      super(...args);\n      this.setupComponent(this, this.getStateFromAttributes());\n    }\n\n    reflectAttribute(key, val, silent = false) {\n      const attrName = decamelize(key);\n\n      if (silent) circutBreaker = attrName;\n\n      const { types } = this.constructor;\n      const type = types[key];\n\n      if (process.env.DEBUG && (!type || !type.stringify)) {\n        console.warn(`No type provided for key '${key}'`);\n      }\n\n      const attr = type.stringify(val);\n\n      if (attr == null) {\n        this.removeAttribute(attrName);\n      } else {\n        this.setAttribute(attrName, attr);\n      }\n    }\n\n    /*\n    reflectAttributes() {\n      const { types } = this.constructor;\n      Object.keys(types).forEach(key => this.reflectAttribute(key, this[key], true));\n    }\n    */\n\n    getStateFromAttributes() {\n      const { types } = this.constructor;\n\n      const state = {};\n      Object.keys(types).forEach(key => {\n        const attrName = decamelize(key);\n        const attr = this.hasAttribute(attrName) ? this.getAttribute(attrName) : null;\n        const value = parseType(types[key], attr);\n        if (value != null) state[key] = value;\n      });\n\n      return state;\n    }\n\n    get template() {\n      return this.getTemplate();\n    }\n\n    connectedCallback() {\n      /* this.reflectAttributes(); */\n      this.connectComponent();\n    }\n\n    disconnectedCallback() {\n      this.disconnectComponent();\n    }\n\n    adoptedCallback() {\n      this.adoptComponent();\n    }\n\n    attributeChangedCallback(attrName, oldAttr, attr) {\n      if (circutBreaker === attrName) circutBreaker = null;\n      else if (oldAttr !== attr) {\n        const { types } = this.constructor;\n\n        const key = camelCase(attrName);\n        const value = parseType(types[key], attr);\n\n        this[key] = value != null ? value : this.constructor.defaults[key];\n      }\n    }\n\n    setInternalState(key, value) {\n      super.setInternalState(key, value);\n      this.reflectAttribute(key, value, true);\n    }\n\n    setupShadowDOM(el) {\n      const instance = this.getTemplate();\n      if (instance) {\n        if (\"attachShadow\" in Element.prototype) {\n          el.attachShadow({ mode: \"open\" });\n          el.shadowRoot.appendChild(instance);\n          return el.shadowRoot;\n        }\n        if (process.env.DEBUG) console.warn(\"Component doesnt define a template. Intentional?\");\n        throw Error(\"ShadowDOM API not supported\");\n      }\n      return el;\n    }\n\n    getEl() {\n      return this;\n    }\n\n    getTemplate() {\n      const { componentName } = this.constructor;\n      return document\n        .querySelector(`link[href*=\"${componentName}\"]`)\n        .import.querySelector(`#${componentName}-template`)\n        .content.cloneNode(true);\n    }\n  };\n\n// This is a drop-in replacement for `HTMLElement` which is compatible with babel.\nexport function CustomElement() {\n  const HTMLElement = typeof window.HTMLElement === \"function\" ? window.HTMLElement : () => {};\n  return Reflect.construct(HTMLElement, [], this.__proto__.constructor); // eslint-disable-line\n}\n\nif (Object.setPrototypeOf) {\n  Object.setPrototypeOf(CustomElement.prototype, HTMLElement.prototype);\n  Object.setPrototypeOf(CustomElement, HTMLElement);\n}\n\n// TODO\nexport function fragmentFromString(strHTML) {\n  return document.createRange().createContextualFragment(strHTML);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/hy-component/src/custom-element.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isFunction.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x != null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isObject.js","/** PURE_IMPORTS_START ._errorObject PURE_IMPORTS_END */\nimport { errorObject } from './errorObject';\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n}\nexport function tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n;\n//# sourceMappingURL=tryCatch.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/tryCatch.js","/** PURE_IMPORTS_START ._util_isArray,._util_isObject,._util_isFunction,._util_tryCatch,._util_errorObject,._util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport var Subscription = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            var trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    var trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/Subscription.js","/** PURE_IMPORTS_START .._Subscriber,.._symbol_rxSubscriber,.._Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/toSubscriber.js","/* tslint:disable:no-empty */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/noop.js","/** PURE_IMPORTS_START ._noop PURE_IMPORTS_END */\nimport { noop } from './noop';\n/* tslint:enable:max-line-length */\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\n/* @internal */\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/pipe.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isPromise.js","/** PURE_IMPORTS_START ._root,._isArrayLike,._isPromise,._isObject,.._Observable,.._symbol_iterator,.._InnerSubscriber,.._symbol_observable PURE_IMPORTS_END */\nimport { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            destination.syncErrorThrowable = true;\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[Symbol_iterator] === 'function') {\n        var iterator = result[Symbol_iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[Symbol_observable] === 'function') {\n        var obs = result[Symbol_observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\n//# sourceMappingURL=subscribeToResult.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/subscribeToResult.js","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil(notifier) {\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\n}\nvar TakeUntilOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n    };\n    return TakeUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeUntilSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.add(subscribeToResult(this, notifier));\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/takeUntil.js","// # src / common.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const matches =\n  Element.prototype.matches ||\n  Element.prototype.matchesSelector ||\n  Element.prototype.msMatchesSelector ||\n  Element.prototype.mozMatchesSelector ||\n  Element.prototype.webkitMatchesSelector ||\n  Element.prototype.oMatchesSelector;\n\n// Checks if this element or any of its parents matches a given `selector`.\nexport function matchesAncestors(selector) {\n  let curr = this;\n  while (curr !== document && curr !== document.documentElement) {\n    if (matches.call(curr, selector)) return curr;\n    curr = curr.parentNode;\n  }\n  return null;\n}\n\n// Consider a URL external if either the protocol, hostname or port is different.\nexport function isExternal({ protocol, host }, location = window.location) {\n  return protocol !== location.protocol || host !== location.host;\n}\n\nexport function isHash({ hash, origin, pathname }, location = window.location) {\n  return hash !== \"\" && origin === location.origin && pathname === location.pathname;\n}\n\nexport function getScrollHeight() {\n  const h = document.documentElement;\n  const b = document.body;\n  const sh = \"scrollHeight\";\n  return h[sh] || b[sh];\n}\n\nexport function getScrollLeft() {\n  return window.pageXOffset || document.body.scrollLeft;\n}\n\nexport function getScrollTop() {\n  return window.pageYOffset || document.body.scrollTop;\n}\n\nexport function fragmentFromString(strHTML) {\n  return document.createRange().createContextualFragment(strHTML);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common.js","/** PURE_IMPORTS_START .._Observable,.._util_tryCatch,.._util_isFunction,.._util_errorObject,.._Subscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { tryCatch } from '../util/tryCatch';\nimport { isFunction } from '../util/isFunction';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nvar toString = Object.prototype.toString;\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var FromEventObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n        this.options = options;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * `fromEvent` accepts as a first argument event target, which is an object with methods\n     * for registering event handler functions. As a second argument it takes string that indicates\n     * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n     * which are described in detail below. If your event target does not match any of the ones listed,\n     * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n     * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n     * handler functions have different names, but they all accept a string describing event type\n     * and function itself, which will be called whenever said event happens.\n     *\n     * Every time resulting Observable is subscribed, event handler function will be registered\n     * to event target on given event type. When that event fires, value\n     * passed as a first argument to registered function will be emitted by output Observable.\n     * When Observable is unsubscribed, function will be unregistered from event target.\n     *\n     * Note that if event target calls registered function with more than one argument, second\n     * and following arguments will not appear in resulting stream. In order to get access to them,\n     * you can pass to `fromEvent` optional project function, which will be called with all arguments\n     * passed to event handler. Output Observable will then emit value returned by project function,\n     * instead of the usual value.\n     *\n     * Remember that event targets listed below are checked via duck typing. It means that\n     * no matter what kind of object you have and no matter what environment you work in,\n     * you can safely use `fromEvent` on that object if it exposes described methods (provided\n     * of course they behave as was described above). So for example if Node.js library exposes\n     * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n     * a good choice.\n     *\n     * If the API you use is more callback then event handler oriented (subscribed\n     * callback function fires only once and thus there is no need to manually\n     * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n     * instead.\n     *\n     * `fromEvent` supports following types of event targets:\n     *\n     * **DOM EventTarget**\n     *\n     * This is an object with `addEventListener` and `removeEventListener` methods.\n     *\n     * In the browser, `addEventListener` accepts - apart from event type string and event\n     * handler function arguments - optional third parameter, which is either an object or boolean,\n     * both used for additional configuration how and when passed function will be called. When\n     * `fromEvent` is used with event target of that type, you can provide this values\n     * as third parameter as well.\n     *\n     * **Node.js EventEmitter**\n     *\n     * An object with `addListener` and `removeListener` methods.\n     *\n     * **JQuery-style event target**\n     *\n     * An object with `on` and `off` methods\n     *\n     * **DOM NodeList**\n     *\n     * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n     *\n     * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n     * it contains and install event handler function in every of them. When returned Observable\n     * is unsubscribed, function will be removed from all Nodes.\n     *\n     * **DOM HtmlCollection**\n     *\n     * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n     * installed and removed in each of elements.\n     *\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * // Results in:\n     * // MouseEvent object logged to console every time a click\n     * // occurs on the document.\n     *\n     *\n     * @example <caption>Use addEventListener with capture option</caption>\n     * var clicksInDocument = Rx.Observable.fromEvent(document, 'click', true); // note optional configuration parameter\n     *                                                                          // which will be passed to addEventListener\n     * var clicksInDiv = Rx.Observable.fromEvent(someDivInDocument, 'click');\n     *\n     * clicksInDocument.subscribe(() => console.log('document'));\n     * clicksInDiv.subscribe(() => console.log('div'));\n     *\n     * // By default events bubble UP in DOM tree, so normally\n     * // when we would click on div in document\n     * // \"div\" would be logged first and then \"document\".\n     * // Since we specified optional `capture` option, document\n     * // will catch event when it goes DOWN DOM tree, so console\n     * // will log \"document\" and then \"div\".\n     *\n     * @see {@link bindCallback}\n     * @see {@link bindNodeCallback}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOM EventTarget, Node.js\n     * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return source_2.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n        }\n        else {\n            throw new TypeError('Invalid event target');\n        }\n        subscriber.add(new Subscription(unsubscribe));\n    };\n    FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch(selector).apply(void 0, args);\n            if (result === errorObject) {\n                subscriber.error(errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable));\n//# sourceMappingURL=FromEventObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/FromEventObservable.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isScheduler.js","/** PURE_IMPORTS_START .._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return function mergeMapOperatorFunction(source) {\n        if (typeof resultSelector === 'number') {\n            concurrent = resultSelector;\n            resultSelector = null;\n        }\n        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\n    };\n}\nexport var MergeMapOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var MergeMapSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=mergeMap.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/mergeMap.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/identity.js","/** PURE_IMPORTS_START ._mergeMap,.._util_identity PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll(concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return mergeMap(identity, null, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/mergeAll.js","/** PURE_IMPORTS_START .._Observable,._ArrayObservable,.._util_isScheduler,.._operators_mergeAll PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(new ArrayObservable(observables, scheduler));\n}\n//# sourceMappingURL=merge.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/merge.js","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nexport var MapOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/map.js","/** PURE_IMPORTS_START .._.._util_root,.._.._util_tryCatch,.._.._util_errorObject,.._.._Observable,.._.._Subscriber,.._.._operators_map PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { root } from '../../util/root';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\nfunction getCORSRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else if (!!root.XDomainRequest) {\n        return new root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nexport function ajaxGet(url, headers) {\n    if (headers === void 0) {\n        headers = null;\n    }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\n;\nexport function ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\n;\nexport function ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\n;\nexport function ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\n;\nexport function ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n}\n;\nvar mapResponse = /*@__PURE__*/ map(function (x, index) { return x.response; });\nexport function ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url: url,\n        responseType: 'json',\n        headers: headers\n    }));\n}\n;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var AjaxObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        _super.call(this);\n        var request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n            },\n            crossDomain: false,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    };\n    /**\n     * Creates an observable for an Ajax request with either a request object with\n     * url, headers, etc or a string for a URL.\n     *\n     * @example\n     * source = Rx.Observable.ajax('/products');\n     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n     *\n     * @param {string|Object} request Can be one of the following:\n     *   A string of the URL to make the Ajax call.\n     *   An object with the following properties\n     *   - url: URL of the request\n     *   - body: The body of the request\n     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n     *   - async: Whether the request is async\n     *   - headers: Optional headers\n     *   - crossDomain: true if a cross domain request, else false\n     *   - createXHR: a function to override if you need to use an alternate\n     *   XMLHttpRequest implementation.\n     *   - resultSelector: a function to use to alter the output value type of\n     *   the Observable. Gets {@link AjaxResponse} as an argument.\n     * @return {Observable} An observable sequence containing the XMLHttpRequest.\n     * @static true\n     * @name ajax\n     * @owner Observable\n    */\n    AjaxObservable.create = (function () {\n        var create = function (urlOrRequest) {\n            return new AjaxObservable(urlOrRequest);\n        };\n        create.get = ajaxGet;\n        create.post = ajaxPost;\n        create.delete = ajaxDelete;\n        create.put = ajaxPut;\n        create.patch = ajaxPatch;\n        create.getJSON = ajaxGetJSON;\n        return create;\n    })();\n    return AjaxObservable;\n}(Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var AjaxSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        _super.call(this, destination);\n        this.request = request;\n        this.done = false;\n        var headers = request.headers = request.headers || {};\n        // force CORS if requested\n        if (!request.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        // ensure content type is set\n        if (!('Content-Type' in headers) && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        // properly serialize body\n        request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n        this.send();\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n        var response = new AjaxResponse(e, xhr, request);\n        destination.next(response);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n        var createXHR = request.createXHR;\n        var xhr = tryCatch(createXHR).call(request);\n        if (xhr === errorObject) {\n            this.error(errorObject.e);\n        }\n        else {\n            this.xhr = xhr;\n            // set up the events before open XHR\n            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n            // You need to add the event listeners before calling open() on the request.\n            // Otherwise the progress events will not fire.\n            this.setupEvents(xhr, request);\n            // open XHR\n            var result = void 0;\n            if (user) {\n                result = tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n            }\n            else {\n                result = tryCatch(xhr.open).call(xhr, method, url, async);\n            }\n            if (result === errorObject) {\n                this.error(errorObject.e);\n                return null;\n            }\n            // timeout, responseType and withCredentials can be set once the XHR is open\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            // set headers\n            this.setHeaders(xhr, headers);\n            // finally send the request\n            result = body ? tryCatch(xhr.send).call(xhr, body) : tryCatch(xhr.send).call(xhr);\n            if (result === errorObject) {\n                this.error(errorObject.e);\n                return null;\n            }\n        }\n        return xhr;\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root.FormData && body instanceof root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) { return (encodeURI(key) + \"=\" + encodeURI(body[key])); }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n        }\n        ;\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                var xhrProgress_1;\n                xhrProgress_1 = function (e) {\n                    var progressSubscriber = xhrProgress_1.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                if (root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress_1;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress_1;\n                }\n                xhrProgress_1.progressSubscriber = progressSubscriber;\n            }\n            var xhrError_1;\n            xhrError_1 = function (e) {\n                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                subscriber.error(new AjaxError('ajax error', this, request));\n            };\n            xhr.onerror = xhrError_1;\n            xhrError_1.request = request;\n            xhrError_1.subscriber = this;\n            xhrError_1.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (this.readyState === 4) {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                if (200 <= status_1 && status_1 < 300) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n                }\n            }\n        }\n        ;\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this, done = _a.done, xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber));\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nexport var AjaxResponse = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxResponse;\n}());\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nexport var AjaxError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AjaxError, _super);\n    function AjaxError(message, xhr, request) {\n        _super.call(this, message);\n        this.message = message;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxError;\n}(Error));\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            if ('response' in xhr) {\n                //IE does not support json as responseType, parse it internally\n                return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n            }\n            else {\n                // HACK(benlesh): TypeScript shennanigans\n                // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n                return JSON.parse(xhr.responseText || 'null');\n            }\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            // HACK(benlesh): TypeScript shennanigans\n            // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nexport var AjaxTimeoutError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AjaxTimeoutError, _super);\n    function AjaxTimeoutError(xhr, request) {\n        _super.call(this, 'ajax timeout', xhr, request);\n    }\n    return AjaxTimeoutError;\n}(AjaxError));\n//# sourceMappingURL=AjaxObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/dom/AjaxObservable.js","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        var operator = new CatchOperator(selector);\n        var caught = source.lift(operator);\n        return (operator.caught = caught);\n    };\n}\nvar CatchOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=catchError.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/catchError.js","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nvar DoOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber));\n//# sourceMappingURL=tap.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/tap.js","/** PURE_IMPORTS_START .._Subscriber,.._util_tryCatch,.._util_errorObject PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged(compare, keySelector) {\n    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };\n}\nvar DistinctUntilChangedOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch(this.keySelector)(value);\n            if (key === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch(this.compare)(this.key, key);\n            if (result === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/distinctUntilChanged.js","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=filter.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/filter.js","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo(value) {\n    return function (source) { return source.lift(new MapToOperator(value)); };\n}\nvar MapToOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        _super.call(this, destination);\n        this.value = value;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber));\n//# sourceMappingURL=mapTo.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/mapTo.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\n//# sourceMappingURL=not.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/not.js","/** PURE_IMPORTS_START .._util_not,._filter PURE_IMPORTS_END */\nimport { not } from '../util/not';\nimport { filter } from './filter';\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nexport function partition(predicate, thisArg) {\n    return function (source) {\n        return [\n            filter(predicate, thisArg)(source),\n            filter(not(predicate, thisArg))(source)\n        ];\n    };\n}\n//# sourceMappingURL=partition.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/partition.js","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise() {\n    return function (source) { return source.lift(new PairwiseOperator()); };\n}\nvar PairwiseOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar PairwiseSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasPrev = false;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber));\n//# sourceMappingURL=pairwise.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/pairwise.js","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nvar RefCountOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=refCount.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/refCount.js","/** PURE_IMPORTS_START .._observable_ConnectableObservable PURE_IMPORTS_END */\nimport { connectableObservableDescriptor } from '../observable/ConnectableObservable';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nexport var MulticastOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\n//# sourceMappingURL=multicast.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/multicast.js","/** PURE_IMPORTS_START ._multicast,._refCount,.._Subject PURE_IMPORTS_END */\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\nfunction shareSubjectFactory() {\n    return new Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share() {\n    return function (source) { return refCount()(multicast(shareSubjectFactory)(source)); };\n}\n;\n//# sourceMappingURL=share.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/share.js","/** PURE_IMPORTS_START .._util_root,.._Observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { root } from '../util/root';\nimport { Observable } from '../Observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var PromiseObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {PromiseLike<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable));\nfunction dispatchNext(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/PromiseObservable.js","/** PURE_IMPORTS_START .._util_root,.._Observable,.._symbol_iterator PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { root } from '../util/root';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var IteratorObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(IteratorObservable, _super);\n    function IteratorObservable(iterator, scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n        if (iterator == null) {\n            throw new Error('iterator cannot be null.');\n        }\n        this.iterator = getIterator(iterator);\n    }\n    IteratorObservable.create = function (iterator, scheduler) {\n        return new IteratorObservable(iterator, scheduler);\n    };\n    IteratorObservable.dispatch = function (state) {\n        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;\n        if (hasError) {\n            subscriber.error(state.error);\n            return;\n        }\n        var result = iterator.next();\n        if (result.done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(result.value);\n        state.index = index + 1;\n        if (subscriber.closed) {\n            if (typeof iterator.return === 'function') {\n                iterator.return();\n            }\n            return;\n        }\n        this.schedule(state);\n    };\n    IteratorObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\n                index: index, iterator: iterator, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                var result = iterator.next();\n                if (result.done) {\n                    subscriber.complete();\n                    break;\n                }\n                else {\n                    subscriber.next(result.value);\n                }\n                if (subscriber.closed) {\n                    if (typeof iterator.return === 'function') {\n                        iterator.return();\n                    }\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return IteratorObservable;\n}(Observable));\nvar StringIterator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function StringIterator(str, idx, len) {\n        if (idx === void 0) {\n            idx = 0;\n        }\n        if (len === void 0) {\n            len = str.length;\n        }\n        this.str = str;\n        this.idx = idx;\n        this.len = len;\n    }\n    StringIterator.prototype[Symbol_iterator] = function () { return (this); };\n    StringIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.str.charAt(this.idx++)\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return StringIterator;\n}());\nvar ArrayIterator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ArrayIterator(arr, idx, len) {\n        if (idx === void 0) {\n            idx = 0;\n        }\n        if (len === void 0) {\n            len = toLength(arr);\n        }\n        this.arr = arr;\n        this.idx = idx;\n        this.len = len;\n    }\n    ArrayIterator.prototype[Symbol_iterator] = function () { return this; };\n    ArrayIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return ArrayIterator;\n}());\nfunction getIterator(obj) {\n    var i = obj[Symbol_iterator];\n    if (!i && typeof obj === 'string') {\n        return new StringIterator(obj);\n    }\n    if (!i && obj.length !== undefined) {\n        return new ArrayIterator(obj);\n    }\n    if (!i) {\n        throw new TypeError('object is not iterable');\n    }\n    return obj[Symbol_iterator]();\n}\nvar maxSafeInteger = /*@__PURE__*/ Math.pow(2, 53) - 1;\nfunction toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) {\n        return 0;\n    }\n    if (len === 0 || !numberIsFinite(len)) {\n        return len;\n    }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) {\n        return 0;\n    }\n    if (len > maxSafeInteger) {\n        return maxSafeInteger;\n    }\n    return len;\n}\nfunction numberIsFinite(value) {\n    return typeof value === 'number' && root.isFinite(value);\n}\nfunction sign(value) {\n    var valueAsNumber = +value;\n    if (valueAsNumber === 0) {\n        return valueAsNumber;\n    }\n    if (isNaN(valueAsNumber)) {\n        return valueAsNumber;\n    }\n    return valueAsNumber < 0 ? -1 : 1;\n}\n//# sourceMappingURL=IteratorObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/IteratorObservable.js","/** PURE_IMPORTS_START ._mergeAll PURE_IMPORTS_END */\nimport { mergeAll } from './mergeAll';\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll() {\n    return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/concatAll.js","/** PURE_IMPORTS_START .._util_isScheduler,._of,._from,.._operators_concatAll PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    if (observables.length === 1 || (observables.length === 2 && isScheduler(observables[1]))) {\n        return from(observables[0]);\n    }\n    return concatAll()(of.apply(void 0, observables));\n}\n//# sourceMappingURL=concat.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/concat.js","/** PURE_IMPORTS_START .._observable_ArrayObservable,.._observable_ScalarObservable,.._observable_EmptyObservable,.._observable_concat,.._util_isScheduler PURE_IMPORTS_END */\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { ScalarObservable } from '../observable/ScalarObservable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len === 1) {\n            return concatStatic(new ScalarObservable(array[0], scheduler), source);\n        }\n        else if (len > 1) {\n            return concatStatic(new ArrayObservable(array, scheduler), source);\n        }\n        else {\n            return concatStatic(new EmptyObservable(scheduler), source);\n        }\n    };\n}\n//# sourceMappingURL=startWith.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/startWith.js","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap(project, resultSelector) {\n    return function switchMapOperatorFunction(source) {\n        return source.lift(new SwitchMapOperator(project, resultSelector));\n    };\n}\nvar SwitchMapOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/switchMap.js","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        var observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nvar WithLatestFromOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        _super.call(this, destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        var len = observables.length;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            this.add(subscribeToResult(this, observable, observable, i));\n        }\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=withLatestFrom.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/withLatestFrom.js","/** PURE_IMPORTS_START .._Subscriber,.._util_ArgumentOutOfRangeError,.._observable_EmptyObservable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take(count) {\n    return function (source) {\n        if (count === 0) {\n            return new EmptyObservable();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nvar TakeOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=take.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/take.js","/** PURE_IMPORTS_START .._observable_ArrayObservable,.._util_isArray,.._Subscriber,.._OuterSubscriber,.._util_subscribeToResult,.._symbol_iterator PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n    };\n}\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zipStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = observables[observables.length - 1];\n    if (typeof project === 'function') {\n        observables.pop();\n    }\n    return new ArrayObservable(observables).lift(new ZipOperator(project));\n}\nexport var ZipOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ZipOperator(project) {\n        this.project = project;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.project));\n    };\n    return ZipOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var ZipSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, project, values) {\n        if (values === void 0) {\n            values = Object.create(null);\n        }\n        _super.call(this, destination);\n        this.iterators = [];\n        this.active = 0;\n        this.project = (typeof project === 'function') ? project : null;\n        this.values = values;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.project) {\n            this._tryProject(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber));\nvar StaticIterator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        _super.call(this, destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    ZipBufferIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber));\n//# sourceMappingURL=zip.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/zip.js","/** PURE_IMPORTS_START ._mergeMap PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap(project, resultSelector) {\n    return mergeMap(project, resultSelector, 1);\n}\n//# sourceMappingURL=concatMap.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/concatMap.js","/** PURE_IMPORTS_START .._util_isArray PURE_IMPORTS_END */\nimport { isArray } from '../util/isArray';\nexport function isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n;\n//# sourceMappingURL=isNumeric.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isNumeric.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n//# sourceMappingURL=isDate.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isDate.js","var _Set = typeof Set !== 'undefined' && new Set([1]).size === 1 ? Set : function () {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  a = a.filter(function (x, i) {\n    return i === a.indexOf(x);\n  });\n  a.size = a.length;\n  a.has = function (x) {\n    return a.indexOf(x) > -1;\n  };\n  a.add = function (x) {\n    if (!a.has(x)) {\n      a.size++;a.push(x);\n    }return a;\n  };\n  a.delete = function (x) {\n    var t = void 0;if (t = a.has(x)) {\n      a.size--;a.splice(a.indexOf(x), 1);\n    }return t;\n  };\n  a.clear = function () {\n    while (a.pop()) {}a.size = 0;\n  };\n  return a;\n};\n\nexport { _Set as Set };\n\n\n// WEBPACK FOOTER //\n// ./node_modules/qd-set/esm/index.js","// # src / component.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n// Licensed under MIT\n\n// import 'core-js/fn/array/for-each';\n// import 'core-js/fn/object/assign';\n// import 'core-js/fn/object/define-property';\n// import 'core-js/fn/object/keys';\n\nimport { Set } from \"qd-set\";\n\nexport { Set };\n\nexport const COMPONENT_FEATURE_TESTS = new Set([\"customevent\"]);\n\nconst aSymbol = Symbol || (x => `_${x}`);\nconst sRoot = aSymbol(\"sroot\");\nconst sState = aSymbol(\"state\");\n\nwindow.process = window.process || {};\nwindow.process.env = window.process.env || {};\n\nclass Component {}\n\nexport const componentMixin = (C = Component) =>\n  class extends C {\n    get sroot() {\n      return this.getRoot();\n    }\n\n    get el() {\n      return this.getEl();\n    }\n\n    setupComponent(el, state) {\n      const { defaults } = this.constructor;\n\n      if (process.env.DEBUG) {\n        const { componentName, sideEffects } = this.constructor;\n        if (!componentName) {\n          console.warn(\n            \"Component needs to have a name, e.g. `my-tag`. To set a name, provide a static getter called `componentName`.\"\n          );\n        }\n        if (!defaults) {\n          console.warn(\n            \"No default properties provided. Implement a static getter called `defaults`.\"\n          );\n        }\n        if (!sideEffects) {\n          console.warn(\"No side effects provided. Implement a static getter called `sideEffects`.\");\n        }\n      }\n\n      this[sState] = Object.assign({}, defaults, state);\n      this.setupProperties(this);\n      this[sRoot] = this.setupShadowDOM(el);\n    }\n\n    setupShadowDOM(el) {\n      return el;\n    }\n\n    connectComponent() {}\n\n    disconnectComponent() {}\n\n    adoptComponent() {}\n\n    getRoot() {\n      return this[sRoot];\n    }\n\n    getEl() {\n      return this[sRoot];\n    }\n\n    fireEvent(eventName, data) {\n      const { componentName } = this.constructor;\n      const event = new CustomEvent(`${componentName}-${eventName}`, data);\n      this.el.dispatchEvent(event);\n    }\n\n    setInternalState(key, value) {\n      this[sState][key] = value;\n    }\n\n    setupProperties() {\n      const { sideEffects } = this.constructor;\n\n      Object.keys(this[sState]).forEach(key => {\n        const sideEffect = sideEffects[key];\n        this.setupProperty(key, sideEffect);\n      });\n    }\n\n    setupProperty(key, sideEffect) {\n      Object.defineProperty(this, key, {\n        get: () => this[sState][key],\n        set: value => {\n          const oldValue = this[sState][key];\n          this.setInternalState(key, value);\n          if (sideEffect) sideEffect.call(this, value, oldValue);\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/hy-component/src/component.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isArray.js","// typeof any so that it we don't have to cast when comparing a result to the error object\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/errorObject.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport var UnsubscriptionError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/UnsubscriptionError.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/Observer.js","/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\nimport { root } from '../util/root';\nvar Symbol = root.Symbol;\nexport var rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    /*@__PURE__*/ Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/symbol/rxSubscriber.js","/** PURE_IMPORTS_START ._util_isFunction,._Subscription,._Observer,._symbol_rxSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { isFunction } from './util/isFunction';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport var Subscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/Subscriber.js","/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\nimport { root } from '../util/root';\nexport function getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexport var observable = /*@__PURE__*/ getSymbolObservable(root);\n/**\n * @deprecated use observable instead\n */\nexport var $$observable = observable;\n//# sourceMappingURL=observable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/symbol/observable.js","/** PURE_IMPORTS_START ._util_root,._util_toSubscriber,._symbol_observable,._util_pipe PURE_IMPORTS_END */\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport var Observable = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n                PromiseCtor = root.Rx.config.Promise;\n            }\n            else if (root.Promise) {\n                PromiseCtor = root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n                PromiseCtor = root.Rx.config.Promise;\n            }\n            else if (root.Promise) {\n                PromiseCtor = root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\n//# sourceMappingURL=Observable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/Observable.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport var ObjectUnsubscribedError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/ObjectUnsubscribedError.js","/** PURE_IMPORTS_START ._Subscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscription } from './Subscription';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var SubjectSubscription = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\n//# sourceMappingURL=SubjectSubscription.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/SubjectSubscription.js","/** PURE_IMPORTS_START ._Observable,._Subscriber,._Subscription,._util_ObjectUnsubscribedError,._SubjectSubscription,._symbol_rxSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n/**\n * @class SubjectSubscriber<T>\n */\nexport var SubjectSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\n/**\n * @class Subject<T>\n */\nexport var Subject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\n/**\n * @class AnonymousSubject<T>\n */\nexport var AnonymousSubject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\n//# sourceMappingURL=Subject.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/Subject.js","// # src / rxjs.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n// Licensed under MIT\n\nimport { Subject } from \"rxjs/_esm5/Subject\";\n\nexport const rxjsMixin = C =>\n  class extends C {\n    static get sideEffects() {}\n\n    setupComponent(el, opts) {\n      this.subjects = {};\n      const sideEffects = {};\n\n      this.subjects.disconnect = new Subject();\n      this.subjects.adapt = new Subject();\n\n      const { types } = this.constructor;\n      Object.keys(types).map(key => {\n        this.subjects[key] = new Subject();\n        sideEffects[key] = x => this.subjects[key].next(x);\n      });\n\n      Object.defineProperty(this.constructor, \"sideEffects\", {\n        get: () => sideEffects,\n        set: () => {},\n        enumerable: true,\n        configurable: true\n      });\n\n      super.setupComponent(el, opts);\n    }\n\n    connectComponent() {\n      super.connectComponent();\n\n      this.subjects.adapt.next(document); // TODO: should rename to document?\n\n      const { types } = this.constructor;\n      Object.keys(types).map(key => {\n        this.subjects[key].next(this[key]);\n      });\n    }\n\n    disconnectComponent() {\n      this.subjects.disconnect.next({});\n      super.disconnectComponent();\n    }\n\n    adaptComponent() {\n      this.subjects.adapt.next(document);\n      super.adaptComponent();\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/hy-component/src/rxjs.js","export const array = (attr) => {\n  if (attr == null) return null;\n\n  const str = attr.trim()\n    .replace(/^\\[?(.*?)\\]?$/, '$1')\n    .split(',')\n    .map(x => x.trim());\n\n  return str || null;\n};\n\narray.stringify = a => (a && a.length > 0 ? a.join(',') : null);\n\nexport default array;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/attr-types/array.js","export const bool = (attr) => {\n  if (attr == null) return false;\n  const attr2 = (attr.trim && attr.trim()) || attr;\n  return !(\n    attr2 === 'false' ||\n    attr2 === 'null' ||\n    attr2 === 'undefined' ||\n    attr2 === '0' ||\n    attr2 === false\n  );\n};\n\nbool.stringify = b => (b ? '' : null);\n\nexport default bool;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/attr-types/bool.js","export const number = (attr) => {\n  if (attr == null) return null;\n  return Number(attr);\n};\n\nnumber.stringify = (n) => {\n  if (n == null) return null;\n  return `${n}`;\n};\n\nexport default number;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/attr-types/number.js","export const regex = (attr) => {\n  if (attr == null) return null;\n  const attr2 = (attr.trim && attr.trim()) || attr;\n  const match = attr2.match(/^\\/?(.*?)(\\/([gimy]*))?$/);\n  return new RegExp(match[1], match[3]);\n};\n\nregex.stringify = r => (r && r.toString()) || null;\n\nexport default regex;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/attr-types/regex.js","export const string = attr => attr;\n\nstring.stringify = s => s;\n\nexport default string;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/attr-types/string.js","/** PURE_IMPORTS_START ._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var OuterSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=OuterSubscriber.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/OuterSubscriber.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArrayLike = (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArrayLike.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/isArrayLike.js","/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\nimport { root } from '../util/root';\nexport function symbolIteratorPonyfill(root) {\n    var Symbol = root.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexport var iterator = /*@__PURE__*/ symbolIteratorPonyfill(root);\n/**\n * @deprecated use iterator instead\n */\nexport var $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/symbol/iterator.js","/** PURE_IMPORTS_START ._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var InnerSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber));\n//# sourceMappingURL=InnerSubscriber.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/InnerSubscriber.js","// # src / url.js\n// Copyright 2013 Erik Arvidsson\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport let URL = window.URL;\n\nif (!URL || !URL.prototype || !(\"href\" in URL.prototype)) {\n  URL = function(url, base) {\n    if (!url) throw new TypeError(\"Invalid argument\");\n\n    var doc = document.implementation.createHTMLDocument(\"\");\n    if (base) {\n      var baseElement = doc.createElement(\"base\");\n      baseElement.href = base;\n      doc.head.appendChild(baseElement);\n    }\n    var anchorElement = doc.createElement(\"a\");\n    anchorElement.href = url;\n    doc.body.appendChild(anchorElement);\n\n    if (anchorElement.protocol === \":\" || !/:/.test(anchorElement.href))\n      throw new TypeError(\"Invalid URL\");\n\n    Object.defineProperty(this, \"_anchorElement\", { value: anchorElement });\n  };\n\n  URL.prototype = {\n    toString: function() {\n      return this.href;\n    },\n\n    get href() {\n      return this._anchorElement.href;\n    },\n    set href(value) {\n      this._anchorElement.href = value;\n    },\n\n    get protocol() {\n      return this._anchorElement.protocol;\n    },\n    set protocol(value) {\n      this._anchorElement.protocol = value;\n    },\n\n    /* NOT IMPLEMENTED\n    get username() {\n      return this._anchorElement.username;\n    },\n    set username(value) {\n      this._anchorElement.username = value;\n    },\n\n    get password() {\n      return this._anchorElement.password;\n    },\n    set password(value) {\n      this._anchorElement.password = value;\n    },\n\n    get origin() {\n      return this._anchorElement.origin;\n    }, */\n\n    get host() {\n      return this._anchorElement.host;\n    },\n    set host(value) {\n      this._anchorElement.host = value;\n    },\n\n    get hostname() {\n      return this._anchorElement.hostname;\n    },\n    set hostname(value) {\n      this._anchorElement.hostname = value;\n    },\n\n    get port() {\n      return this._anchorElement.port;\n    },\n    set port(value) {\n      this._anchorElement.port = value;\n    },\n\n    get pathname() {\n      return this._anchorElement.pathname;\n    },\n    set pathname(value) {\n      this._anchorElement.pathname = value;\n    },\n\n    get search() {\n      return this._anchorElement.search;\n    },\n    set search(value) {\n      this._anchorElement.search = value;\n    },\n\n    get hash() {\n      return this._anchorElement.hash;\n    },\n    set hash(value) {\n      this._anchorElement.hash = value;\n    }\n  };\n\n  var oldURL = window.URL || window.webkitURL || window.mozURL;\n\n  URL.createObjectURL = function(blob) {\n    return oldURL.createObjectURL.apply(oldURL, arguments);\n  };\n\n  URL.revokeObjectURL = function(url) {\n    return oldURL.revokeObjectURL.apply(oldURL, arguments);\n  };\n\n  Object.defineProperty(URL.prototype, \"toString\", { enumerable: false });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/url.js","// # src / mixin / constants.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// These are some 'types' that we use throught the component.\n// Going with strings here instead of classes + instanceof / dynamic dispatch for simplicity.\nexport const INIT = \"init\";\nexport const HINT = \"hint\";\nexport const PUSH = \"push\";\nexport const POP = \"pop\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/constants.js","/** PURE_IMPORTS_START .._Observable,.._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var DeferObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DeferObservable, _super);\n    function DeferObservable(observableFactory) {\n        _super.call(this);\n        this.observableFactory = observableFactory;\n    }\n    /**\n     * Creates an Observable that, on subscribe, calls an Observable factory to\n     * make an Observable for each new Observer.\n     *\n     * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n     * is subscribed.\n     * </span>\n     *\n     * <img src=\"./img/defer.png\" width=\"100%\">\n     *\n     * `defer` allows you to create the Observable only when the Observer\n     * subscribes, and create a fresh Observable for each Observer. It waits until\n     * an Observer subscribes to it, and then it generates an Observable,\n     * typically with an Observable factory function. It does this afresh for each\n     * subscriber, so although each subscriber may think it is subscribing to the\n     * same Observable, in fact each subscriber gets its own individual\n     * Observable.\n     *\n     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n     * var clicksOrInterval = Rx.Observable.defer(function () {\n     *   if (Math.random() > 0.5) {\n     *     return Rx.Observable.fromEvent(document, 'click');\n     *   } else {\n     *     return Rx.Observable.interval(1000);\n     *   }\n     * });\n     * clicksOrInterval.subscribe(x => console.log(x));\n     *\n     * // Results in the following behavior:\n     * // If the result of Math.random() is greater than 0.5 it will listen\n     * // for clicks anywhere on the \"document\"; when document is clicked it\n     * // will log a MouseEvent object to the console. If the result is less\n     * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n     *\n     * @see {@link create}\n     *\n     * @param {function(): SubscribableOrPromise} observableFactory The Observable\n     * factory function to invoke for each Observer that subscribes to the output\n     * Observable. May also return a Promise, which will be converted on the fly\n     * to an Observable.\n     * @return {Observable} An Observable whose Observers' subscriptions trigger\n     * an invocation of the given Observable factory function.\n     * @static true\n     * @name defer\n     * @owner Observable\n     */\n    DeferObservable.create = function (observableFactory) {\n        return new DeferObservable(observableFactory);\n    };\n    DeferObservable.prototype._subscribe = function (subscriber) {\n        return new DeferSubscriber(subscriber, this.observableFactory);\n    };\n    return DeferObservable;\n}(Observable));\nvar DeferSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DeferSubscriber, _super);\n    function DeferSubscriber(destination, factory) {\n        _super.call(this, destination);\n        this.factory = factory;\n        this.tryDefer();\n    }\n    DeferSubscriber.prototype.tryDefer = function () {\n        try {\n            this._callFactory();\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    DeferSubscriber.prototype._callFactory = function () {\n        var result = this.factory();\n        if (result) {\n            this.add(subscribeToResult(this, result));\n        }\n    };\n    return DeferSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=DeferObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/DeferObservable.js","/** PURE_IMPORTS_START ._DeferObservable PURE_IMPORTS_END */\nimport { DeferObservable } from './DeferObservable';\nexport var defer = DeferObservable.create;\n//# sourceMappingURL=defer.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/defer.js","/** PURE_IMPORTS_START ._FromEventObservable PURE_IMPORTS_END */\nimport { FromEventObservable } from './FromEventObservable';\nexport var fromEvent = FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/fromEvent.js","/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var ScalarObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable));\n//# sourceMappingURL=ScalarObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/ScalarObservable.js","/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var EmptyObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable));\n//# sourceMappingURL=EmptyObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/EmptyObservable.js","/** PURE_IMPORTS_START .._Observable,._ScalarObservable,._EmptyObservable,.._util_isScheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { isScheduler } from '../util/isScheduler';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var ArrayObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable));\n//# sourceMappingURL=ArrayObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/ArrayObservable.js","/** PURE_IMPORTS_START ._AjaxObservable PURE_IMPORTS_END */\nimport { AjaxObservable } from './AjaxObservable';\nexport var ajax = AjaxObservable.create;\n//# sourceMappingURL=ajax.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/dom/ajax.js","/** PURE_IMPORTS_START .._Subject,.._Observable,.._Subscriber,.._Subscription,.._operators_refCount PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { SubjectSubscriber } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n/**\n * @class ConnectableObservable<T>\n */\nexport var ConnectableObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        this._isComplete = false;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return higherOrderRefCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable));\nvar connectableProto = ConnectableObservable.prototype;\nexport var connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(SubjectSubscriber));\nvar RefCountOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/ConnectableObservable.js","/** PURE_IMPORTS_START ._ArrayObservable PURE_IMPORTS_END */\nimport { ArrayObservable } from './ArrayObservable';\nexport var of = ArrayObservable.of;\n//# sourceMappingURL=of.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/of.js","/** PURE_IMPORTS_START .._Observable,._ScalarObservable,._EmptyObservable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var ArrayLikeObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ArrayLikeObservable, _super);\n    function ArrayLikeObservable(arrayLike, scheduler) {\n        _super.call(this);\n        this.arrayLike = arrayLike;\n        this.scheduler = scheduler;\n        if (!scheduler && arrayLike.length === 1) {\n            this._isScalar = true;\n            this.value = arrayLike[0];\n        }\n    }\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\n        var length = arrayLike.length;\n        if (length === 0) {\n            return new EmptyObservable();\n        }\n        else if (length === 1) {\n            return new ScalarObservable(arrayLike[0], scheduler);\n        }\n        else {\n            return new ArrayLikeObservable(arrayLike, scheduler);\n        }\n    };\n    ArrayLikeObservable.dispatch = function (state) {\n        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;\n        if (subscriber.closed) {\n            return;\n        }\n        if (index >= length) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(arrayLike[index]);\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;\n        var length = arrayLike.length;\n        if (scheduler) {\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < length && !subscriber.closed; i++) {\n                subscriber.next(arrayLike[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayLikeObservable;\n}(Observable));\n//# sourceMappingURL=ArrayLikeObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/ArrayLikeObservable.js","/** PURE_IMPORTS_START ._Observable PURE_IMPORTS_END */\nimport { Observable } from './Observable';\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport var Notification = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable.of(this.value);\n            case 'E':\n                return Observable.throw(this.error);\n            case 'C':\n                return Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\n//# sourceMappingURL=Notification.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/Notification.js","/** PURE_IMPORTS_START .._Subscriber,.._Notification PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nexport var ObserveOnOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var ObserveOnSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber));\nexport var ObserveOnMessage = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\n//# sourceMappingURL=observeOn.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/operators/observeOn.js","/** PURE_IMPORTS_START .._util_isArray,.._util_isArrayLike,.._util_isPromise,._PromiseObservable,._IteratorObservable,._ArrayObservable,._ArrayLikeObservable,.._symbol_iterator,.._Observable,.._operators_observeOn,.._symbol_observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { isArray } from '../util/isArray';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { PromiseObservable } from './PromiseObservable';\nimport { IteratorObservable } from './IteratorObservable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { ArrayLikeObservable } from './ArrayLikeObservable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Observable } from '../Observable';\nimport { ObserveOnSubscriber } from '../operators/observeOn';\nimport { observable as Symbol_observable } from '../symbol/observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var FromObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        _super.call(this, null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 10 20 30\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 3 6 12 24 48 96 192 384 768 1536\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[Symbol_observable] === 'function') {\n                if (ish instanceof Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (isArray(ish)) {\n                return new ArrayObservable(ish, scheduler);\n            }\n            else if (isPromise(ish)) {\n                return new PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[Symbol_iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable(ish, scheduler);\n            }\n            else if (isArrayLike(ish)) {\n                return new ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n    };\n    FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[Symbol_observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[Symbol_observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable));\n//# sourceMappingURL=FromObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/FromObservable.js","/** PURE_IMPORTS_START ._FromObservable PURE_IMPORTS_END */\nimport { FromObservable } from './FromObservable';\nexport var from = FromObservable.create;\n//# sourceMappingURL=from.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/from.js","/** PURE_IMPORTS_START .._Observable,.._util_noop PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var NeverObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(NeverObservable, _super);\n    function NeverObservable() {\n        _super.call(this);\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer.\n     *\n     * <span class=\"informal\">An Observable that never emits anything.</span>\n     *\n     * <img src=\"./img/never.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that emits\n     * neither values nor errors nor the completion notification. It can be used\n     * for testing purposes or for composing with other Observables. Please note\n     * that by never emitting a complete notification, this Observable keeps the\n     * subscription from being disposed automatically. Subscriptions need to be\n     * manually disposed.\n     *\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n     * function info() {\n     *   console.log('Will not be called');\n     * }\n     * var result = Rx.Observable.never().startWith(7);\n     * result.subscribe(x => console.log(x), info, info);\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @return {Observable} A \"never\" Observable: never emits anything.\n     * @static true\n     * @name never\n     * @owner Observable\n     */\n    NeverObservable.create = function () {\n        return new NeverObservable();\n    };\n    NeverObservable.prototype._subscribe = function (subscriber) {\n        noop();\n    };\n    return NeverObservable;\n}(Observable));\n//# sourceMappingURL=NeverObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/NeverObservable.js","/** PURE_IMPORTS_START ._NeverObservable PURE_IMPORTS_END */\nimport { NeverObservable } from './NeverObservable';\nexport var never = NeverObservable.create;\n//# sourceMappingURL=never.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/never.js","// # src / mixin / operators.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { never } from \"rxjs/_esm5/observable/never\";\n\nimport { switchMap } from \"rxjs/_esm5/operators/switchMap\";\n\n// ### Observable extensions\n// #### Unsubscribe when\n// This operator unsubscribes from the source observable when `pauser$` emits a truthy value,\n// and re-subscribes when it emits a falsy value.\nexport const unsubscribeWhen = pauser$ => source => {\n  if (process.env.DEBUG && !pauser$) throw Error();\n  return pauser$.pipe(switchMap(paused => (paused ? never() : source)));\n};\n\n// #### Custom subscribe\n// A custom subscribe function that will `recover` from an error and log it to the console.\n// This is a line of last defense to make sure the entire pipeline/page doesn't crash.\n/*\nfunction subscribe(ne, er, co) {\n  let res = this;\n  if (process.env.DEBUG) res = this.pipe(tap({ error: e => console.error(e) }));\n  return res\n    .pipe(catchError((e, c) => c))\n    .subscribe(ne, er, co);\n}\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/operators.js","// # src / mixin / methods.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { isExternal, isHash } from \"../common\";\nimport { URL } from \"../url\";\n\nimport { PUSH, POP } from \"./constants\";\n\n// ## Functions\n// What you will notice about the following helper functions is that many make reference to `this`.\n// This is because they are invoked with the `::` operator, binding `this` to the component,\n// effectively turning them into (private) methods. Since the final export is a mixin,\n// we want to avoid potentially conflicting names as much as possible.\n\nexport const helperMixin = C =>\n  class extends C {\n    // Returns an identifier to mark frames on the history stack.\n    histId() {\n      return this.el.id || this.constructor.componentName;\n    }\n\n    // ### Event filters\n    shouldLoadAnchor(anchor, hrefRegex) {\n      return anchor && anchor.target === \"\" && (!hrefRegex || anchor.href.search(hrefRegex) !== -1);\n    }\n\n    isPushEvent({ url, anchor, event: { metaKey, ctrlKey } }) {\n      return (\n        !metaKey &&\n        !ctrlKey &&\n        this.shouldLoadAnchor(anchor, this.hrefRegex) &&\n        !isExternal(url, this)\n      );\n    }\n\n    isHintEvent({ url, anchor }) {\n      return (\n        this.shouldLoadAnchor(anchor, this.hrefRegex) &&\n        !isExternal(url, this) &&\n        !isHash(url, this)\n      );\n    }\n\n    // Determines if a pair of context's constitutes a hash change (vs. a page chagne)\n    // We take as a hash change when the pathname of the URLs is the same,\n    // and the `hash` isn't empty.\n    isHashChange([{ url: { pathname: prevPathname } }, { url: { pathname, hash }, type }]) {\n      return pathname === prevPathname && (type === POP || (type === PUSH && hash !== \"\"));\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/methods.js","// # src / mixin / scrolling.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { getScrollTop, getScrollHeight } from \"../common\";\n\nimport { PUSH, POP } from \"./constants\";\n\n// ### Managing scroll positions\n// The following functions deal with managing the scroll position of the site.\n\nexport const scrollMixin = C =>\n  class extends C {\n    // Given a hash, find the element of the same id on the page, and scroll it into view.\n    // If no hash is provided, scroll to the top instead.\n    scrollHashIntoView(hash) {\n      if (hash) {\n        const el = document.getElementById(hash.substr(1));\n        if (el) el.scrollIntoView();\n        else if (process.env.DEBUG) console.warn(`Can't find element with id ${hash}`);\n      } else window.scroll(window.pageXOffset, 0);\n    }\n\n    // Takes the current history state, and restores the scroll position.\n    restoreScrollPostion() {\n      const id = this.histId(); // TODO\n      const state = (window.history.state && window.history.state[id]) || {};\n\n      if (state.scrollTop != null) {\n        document.body.style.minHeight = state.scrollHeight;\n        window.scroll(window.pageXOffset, state.scrollTop);\n        /* document.body.style.minHeight = ''; */\n      } else if (state.hash) {\n        this.scrollHashIntoView(window.location.hash);\n      }\n    }\n\n    // TODO\n    manageScrollPostion({ type, url: { hash } }) {\n      if (type === PUSH) {\n        this.scrollHashIntoView(hash);\n      }\n\n      if (type === POP && this.scrollRestoration) {\n        this.restoreScrollPostion();\n      }\n    }\n\n    saveScrollPosition(state) {\n      const id = this.histId();\n      return Object.assign(state, {\n        [id]: Object.assign(state[id] || {}, {\n          scrollTop: getScrollTop(),\n          scrollHeight: getScrollHeight()\n        })\n      });\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/scrolling.js","// # src / mixin / history.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// ## Overview\n// This file contains helper funtions related to managing the History API.\n\n// ## Imports\nimport { isExternal } from \"../common\";\n\nimport { PUSH, INIT } from \"./constants\";\nimport { scrollMixin } from \"./scrolling\";\n\nexport const historyMixin = C =>\n  class extends scrollMixin(C) {\n    // ## Update History state\n    // add a new entry on the history stack, assuming the href is differnt.\n    updateHistoryState({ type, replace, url: { href, hash } }) {\n      if ((type === PUSH || type === INIT) && !isExternal(this)) {\n        const id = this.histId();\n        const method = replace || href === window.location.href ? \"replaceState\" : \"pushState\";\n        const state = Object.assign(window.history.state || {}, {\n          [id]: { hash: !!hash }\n        });\n        window.history[method](state, document.title, href);\n      }\n    }\n\n    updateHistoryStateHash({ type, url }) {\n      const { hash, href } = url;\n\n      if (type === PUSH && !isExternal(this)) {\n        const id = this.histId();\n        const currState = Object.assign(window.history.state, {\n          [id]: Object.assign(window.history.state[id], { hash: true })\n        });\n        const nextState = {\n          [id]: { hash: true }\n        };\n        window.history.replaceState(currState, document.title, window.location.href);\n        window.history.pushState(nextState, document.title, href);\n      }\n\n      this.scrollHashIntoView(hash);\n    }\n\n    updateHistoryTitle({ type, title }) {\n      document.title = title;\n\n      if (type === PUSH && !isExternal(this)) {\n        window.history.replaceState(window.history.state, title, window.location);\n      }\n    }\n\n    saveScrollHistoryState() {\n      if (isExternal(this)) return;\n\n      const state = this.saveScrollPosition(window.history.state || {});\n      window.history.replaceState(state, document.title, window.location);\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/history.js","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport var ArgumentOutOfRangeError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var err = _super.call(this, 'argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/util/ArgumentOutOfRangeError.js","// # src / mixin / fetching.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// ## Overview\n// This file contains helper functions related to fetching new content.\n\n// ## Imports\nimport { of } from \"rxjs/_esm5/observable/of\";\n\nimport { map } from \"rxjs/_esm5/operators/map\";\nimport { take } from \"rxjs/_esm5/operators/take\";\nimport { zip } from \"rxjs/_esm5/operators/zip\";\n\nexport const fetchMixin = C =>\n  class extends C {\n    // ## Fetching\n    // The `ajax` method will throw when it encoutners an a 400+ status code,\n    // however these are still valid responses from the server that can be shown using this component.\n    // This assumes error pages have the same HTML strcuture as the other pages though.\n    recoverIfResponse(context, error) {\n      const { status, xhr } = error;\n\n      // If we have a response, recover and continue with the pipeline.\n      if (xhr && xhr.response && status > 400) {\n        return of(Object.assign(context, { response: xhr.response }));\n      }\n\n      // If we don't have a response, this is an acutal error that should be dealt with.\n      return of(Object.assign(context, { error }));\n    }\n\n    // This function returns the request that matches a given URL.\n    // The way the pipeline is set up,\n    // it is either the `latestPrefetch` value (when the request is already completed),\n    // or the next value on the prefetch observable (when still in progress).\n    getFetch$({ url: { href } }, latestPrefetch, prefetch$) {\n      return href === latestPrefetch.url.href && latestPrefetch.error == null\n        ? of(latestPrefetch)\n        : prefetch$.pipe(take(1));\n    }\n\n    // Returns an observable that emits exactly one notice, which contains the response.\n    // It will not emit until an (optional) page transition animation completes.\n    getResponse(prefetch$, [context, latestPrefetch]) {\n      return this.getFetch$(context, latestPrefetch, prefetch$).pipe(\n        map(fetch => Object.assign(fetch, context)),\n        zip(this.animPromise, x => x)\n      );\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/fetching.js","// # src / mixin / script-hack.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Observable } from \"rxjs/_esm5/Observable\";\n\n// Importing the subset of RxJS functions that we are going to use.\nimport { from } from \"rxjs/_esm5/observable/from\";\nimport { of } from \"rxjs/_esm5/observable/of\";\n\nimport { catchError } from \"rxjs/_esm5/operators/catchError\";\nimport { tap } from \"rxjs/_esm5/operators/tap\";\nimport { concatMap } from \"rxjs/_esm5/operators/concatMap\";\n\n// ### Experimental script feature\n// TODO\nexport const scriptMixin = C =>\n  class extends C {\n    // This function removes all script tags (as query'ed by `scriptSelector`) from the response.\n    tempRemoveScriptTags(replaceEls) {\n      const scripts = [];\n\n      replaceEls.forEach(docfrag =>\n        Array.from(docfrag.querySelectorAll(this.scriptSelector)).forEach(script => {\n          const pair = [script, script.previousSibling];\n          script.parentNode.removeChild(script);\n          scripts.push(pair);\n        })\n      );\n\n      return scripts;\n    }\n\n    // Attempts to (synchronously) insert a `script` tag into the DOM, *before* a given `ref` element.\n    insertScript([script, ref]) {\n      // Temporarily overwrite `document.wirte` to simulate its behavior during the initial load.\n      // This only works because scripts are inserted one-at-a-time (via `concatMap`).\n      const originalWrite = document.write;\n\n      document.write = (...args) => {\n        const temp = document.createElement(\"div\");\n        temp.innerHTML = args.join();\n        Array.from(temp.childNodes).forEach(node => {\n          ref.parentNode.insertBefore(node, ref.nextSibling);\n        });\n      };\n\n      // If the script tag needs to fetch its source code, we insert it into the DOM,\n      // but we return an observable that only completes once the script has fired its `load` event.\n      return script.src !== \"\"\n        ? Observable.create(observer => {\n            script.addEventListener(\"load\", x => {\n              document.write = originalWrite;\n              observer.complete(x);\n            });\n\n            script.addEventListener(\"error\", x => {\n              document.write = originalWrite;\n              observer.error(x);\n            });\n\n            ref.parentNode.insertBefore(script, ref.nextSibling);\n          })\n        : // Otherwise we insert it into the DOM and reset the `document.write` function.\n          of({}).pipe(\n            tap(() => {\n              ref.parentNode.insertBefore(script, ref.nextSibling);\n              document.write = originalWrite;\n            })\n          );\n    }\n\n    // Takes a list of `script`--`ref` pairs, and inserts them into the DOM one-by-one.\n    reinsertScriptTags(context) {\n      if (!this.scriptSelector) return of(context);\n\n      const { scripts } = context;\n\n      return from(scripts)\n        .pipe(\n          concatMap(this.insertScript.bind(this)),\n          catchError(error => {\n            throw Object.assign(context, { error });\n          })\n        )\n        .toPromise()\n        .then(() => context);\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/script-hack.js","// # src / mixin / update.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { fragmentFromString, isExternal } from \"../common\";\n\nimport { PUSH } from \"./constants\";\nimport { scriptMixin } from \"./script-hack\";\n\nexport const updateMixin = C =>\n  class extends scriptMixin(C) {\n    // Extracts the title of the page\n    getTitle(fragment) {\n      return (fragment.querySelector(\"title\") || {}).textContent;\n    }\n\n    // Extracts the elements to be replaced\n    getReplaceElements(fragment) {\n      if (this.replaceIds.length > 0) {\n        return this.replaceIds.map(id => fragment.getElementById(id));\n      } else if (this.el.id) {\n        return [fragment.getElementById(this.el.id)];\n      } else {\n        const index = Array.from(document.getElementsByTagName(this.el.tagName)).indexOf(this.el);\n        return [fragment.querySelectorAll(this.el.tagName)[index]];\n      }\n    }\n\n    // Takes the response string and turns it into document fragments\n    // that can be inserted into the DOM.\n    responseToContent(context) {\n      const { response } = context;\n\n      const fragment = fragmentFromString(response);\n      const title = this.getTitle(fragment);\n      const replaceEls = this.getReplaceElements(fragment);\n\n      if (replaceEls.some(x => x == null)) {\n        throw Object.assign(context, { replaceElMissing: true });\n      }\n\n      const scripts = this.scriptSelector ? this.tempRemoveScriptTags(replaceEls) : [];\n\n      return Object.assign(context, { title, replaceEls, scripts });\n    }\n\n    // Replaces the old elments with the new one, one-by-one.\n    replaceContentByIds(elements) {\n      this.replaceIds.map(id => document.getElementById(id)).forEach((oldElement, i) => {\n        oldElement.parentNode.replaceChild(elements[i], oldElement);\n      });\n    }\n\n    // When no `relaceIds` are set, replace the entire content of the component (slow).\n    replaceContentWholesale([el]) {\n      this.el.innerHTML = el.innerHTML;\n    }\n\n    // TODO: doc\n    replaceContent(replaceEls) {\n      if (this.replaceIds.length > 0) {\n        this.replaceContentByIds(replaceEls);\n      } else {\n        this.replaceContentWholesale(replaceEls);\n      }\n    }\n\n    // TODO: doc\n    updateDOM(context) {\n      try {\n        const { replaceEls } = context;\n        this.updateHistoryTitle(context);\n        if (isExternal(this)) this.rewriteURLs(replaceEls);\n        this.replaceContent(replaceEls);\n      } catch (error) {\n        throw Object.assign(context, { error });\n      }\n    }\n\n    // When fetching documents from an external source,\n    // relative URLs will be resolved relative to the current `window.location`.\n    // We can rewrite URL to absolute urls\n    rewriteURLs(replaceEls) {\n      replaceEls.forEach(el => {\n        /* console.time(); */\n        el.querySelectorAll(\"[href]\").forEach(this.rewriteURL(\"href\"));\n        el.querySelectorAll(\"[src]\").forEach(this.rewriteURL(\"src\"));\n        el.querySelectorAll(\"img[srcset]\").forEach(this.rewriteURLSrcSet(\"srcset\"));\n        el.querySelectorAll(\"blockquote[cite]\").forEach(this.rewriteURL(\"cite\"));\n        el.querySelectorAll(\"del[cite]\").forEach(this.rewriteURL(\"cite\"));\n        el.querySelectorAll(\"ins[cite]\").forEach(this.rewriteURL(\"cite\"));\n        el.querySelectorAll(\"q[cite]\").forEach(this.rewriteURL(\"cite\"));\n        el.querySelectorAll(\"img[longdesc]\").forEach(this.rewriteURL(\"longdesc\"));\n        el.querySelectorAll(\"frame[longdesc]\").forEach(this.rewriteURL(\"longdesc\"));\n        el.querySelectorAll(\"iframe[longdesc]\").forEach(this.rewriteURL(\"longdesc\"));\n        el.querySelectorAll(\"img[usemap]\").forEach(this.rewriteURL(\"usemap\"));\n        el.querySelectorAll(\"input[usemap]\").forEach(this.rewriteURL(\"usemap\"));\n        el.querySelectorAll(\"object[usemap]\").forEach(this.rewriteURL(\"usemap\"));\n        el.querySelectorAll(\"form[action]\").forEach(this.rewriteURL(\"action\"));\n        el.querySelectorAll(\"button[formaction]\").forEach(this.rewriteURL(\"formaction\"));\n        el.querySelectorAll(\"input[formaction]\").forEach(this.rewriteURL(\"formaction\"));\n        el.querySelectorAll(\"video[poster]\").forEach(this.rewriteURL(\"poster\"));\n        el.querySelectorAll(\"object[data]\").forEach(this.rewriteURL(\"data\"));\n        el.querySelectorAll(\"object[codebase]\").forEach(this.rewriteURL(\"codebase\"));\n        el.querySelectorAll(\"object[archive]\").forEach(this.rewriteURLList(\"archive\"));\n        /* console.timeEnd(); */\n        /* el.querySelectorAll(\"command[icon]\").forEach(this.rewriteURL(\"icon\")); */ // obsolte\n      });\n    }\n\n    rewriteURL(attr) {\n      return el => {\n        try {\n          el.setAttribute(attr, new URL(el.getAttribute(attr), this.href).href);\n        } catch (e) {\n          if (process.env.DEBUG)\n            console.warn(`Couldn't rewrite URL in attribute ${attr} on element`, el);\n        }\n      };\n    }\n\n    rewriteURLSrcSet(attr) {\n      return el => {\n        try {\n          el.setAttribute(\n            attr,\n            el\n              .getAttribute(attr)\n              .split(/\\s*,\\s*/)\n              .map(str => {\n                const pair = str.split(/\\s+/);\n                pair[0] = new URL(pair[0], this.href).href;\n                return pair.join(\" \");\n              })\n              .join(\", \")\n          );\n        } catch (e) {\n          if (process.env.DEBUG)\n            console.warn(`Couldn't rewrite URLs in attribute ${attr} on element`, el);\n        }\n      };\n    }\n\n    rewriteURLList(attr) {\n      return el => {\n        try {\n          el.setAttribute(\n            attr,\n            el\n              .getAttribute(attr)\n              .split(/[\\s,]+/)\n              .map(str => new URL(str, this.href).href)\n              .join(\", \")\n          );\n        } catch (e) {\n          if (process.env.DEBUG)\n            console.warn(`Couldn't rewrite URLs in attribute ${attr} on element`, el);\n        }\n      };\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/update.js","/** PURE_IMPORTS_START .._Subscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscription } from '../Subscription';\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport var Action = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription));\n//# sourceMappingURL=Action.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/scheduler/Action.js","/** PURE_IMPORTS_START .._util_root,._Action PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { root } from '../util/root';\nimport { Action } from './Action';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var AsyncAction = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\n//# sourceMappingURL=AsyncAction.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/scheduler/AsyncAction.js","/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport var Scheduler = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\n//# sourceMappingURL=Scheduler.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/Scheduler.js","/** PURE_IMPORTS_START .._Scheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Scheduler } from '../Scheduler';\nexport var AsyncScheduler = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\n//# sourceMappingURL=AsyncScheduler.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/scheduler/AsyncScheduler.js","/** PURE_IMPORTS_START ._AsyncAction,._AsyncScheduler PURE_IMPORTS_END */\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexport var async = /*@__PURE__*/ new AsyncScheduler(AsyncAction);\n//# sourceMappingURL=async.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/scheduler/async.js","/** PURE_IMPORTS_START .._util_isNumeric,.._Observable,.._scheduler_async,.._util_isScheduler,.._util_isDate PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { isNumeric } from '../util/isNumeric';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isDate } from '../util/isDate';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var TimerObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) {\n            dueTime = 0;\n        }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler(scheduler)) {\n            scheduler = async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate(dueTime) ?\n            (+dueTime - this.scheduler.now()) :\n            dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) {\n            initialDelay = 0;\n        }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable));\n//# sourceMappingURL=TimerObservable.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/TimerObservable.js","/** PURE_IMPORTS_START ._TimerObservable PURE_IMPORTS_END */\nimport { TimerObservable } from './TimerObservable';\nexport var timer = TimerObservable.create;\n//# sourceMappingURL=timer.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/_esm5/observable/timer.js","// # src / mixin / events.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Observable } from \"rxjs/_esm5/Observable\";\nimport { timer } from \"rxjs/_esm5/observable/timer\";\n\n// ### Event functions\n// These functions are called at various points along the observable pipeline to fire events,\n// and cause other side effects.\nexport const eventMixin = C =>\n  class extends C {\n    // #### On start\n    onStart(context) {\n      // By default, hy-push-state will wait at least `duration` ms before replacing the content,\n      // so that animations have enough time to finish.\n      // The behavior is encoded with a promise that resolves after `duration` ms.\n      this.animPromise = timer(this.duration);\n\n      // The `waitUntil` function lets users of this component override the animation promise.\n      // This allows for event-based code execution, rather than timing-based, which prevents hiccups\n      // and glitches when, for example, painting takes longer than expected.\n      const waitUntil = promise => {\n        if (process.env.DEBUG && !(promise instanceof Promise || promise instanceof Observable)) {\n          console.warn(\"waitUntil expects a Promise as first argument.\");\n        }\n        this.animPromise = promise;\n      };\n\n      this.fireEvent(\"start\", {\n        detail: Object.assign(context, { waitUntil })\n      });\n    }\n\n    // Example usage of `waitUntil`:\n    //\n    // ```js\n    // hyPushStateEl.addEventListener('hy-push-state-start', ({ detail }) => {\n    //   const animPromise = new Promise((resolve) => {\n    //     const anim = myContent.animate(...);\n    //     anim.addEventListener('finish', resolve);\n    //   });\n    //   detail.waitUntil(animPromise);\n    // });\n    // ```\n    // {:style=\"font-style:italic\"}\n\n    // #### Error callbacks\n    // This function handles errors while trying to insert the new content into the document.\n    // If the retrieved documened doesn't contain the ids we are looking for\n    // we can't insert the content dynamically, so we tell the browser to open the link directly.\n    onDOMError(context) {\n      const { replaceElMissing, url } = context;\n\n      // Ideally you should prevent this situation by adding the\n      // `no-push-state` CSS class\n      // on links to documents that don't match the expected document layout.\n      // This only serves as a fallback.\n      if (replaceElMissing) {\n        if (process.env.DEBUG) {\n          const ids = this.replaceIds\n            .concat(this.el.id || [])\n            .map(x => `#${x}`)\n            .join(\", \");\n          console.warn(\n            `Couldn't find one or more ids of '${ids}' in the document at '${\n              window.location\n            }'. Opening the link directly.`\n          );\n        }\n\n        // To open the link directly, we first pop one entry off the browser history.\n        // We have to do this because (some) browsers won't handle the back button correctly otherwise.\n        // We then wait for a short time and change the document's location.\n        // TODO: If we didn't call `pushState` optimistically we wouldn't have to do this.\n        window.history.back();\n        setTimeout(() => {\n          document.location.href = url;\n        }, 100);\n\n        // If it's a different error, throw the generic `error` event.\n      } else {\n        if (process.env.DEBUG) console.error(context);\n        this.fireEvent(\"error\", { detail: context });\n      }\n    }\n\n    // If there is a network error during (pre-) fetching, fire `networkerror` event.\n    onNetworkError(context) {\n      if (process.env.DEBUG) console.error(context);\n      this.fireEvent(\"networkerror\", { detail: context });\n    }\n\n    // When using the experimental script feature,\n    // fire `scripterror` event if something goes wrong during script insertion.\n    onError(context) {\n      if (process.env.DEBUG) console.error(context);\n      this.fireEvent(\"error\", { detail: context });\n    }\n\n    // #### Others\n    // These event callbacks simply fire an event and pass the context as `detail`.\n    onReady(context) {\n      this.fireEvent(\"ready\", { detail: context });\n    }\n\n    onAfter(context) {\n      this.fireEvent(\"after\", { detail: context });\n    }\n\n    onProgress(context) {\n      this.fireEvent(\"progress\", { detail: context });\n    }\n\n    onLoad(context) {\n      this.fireEvent(\"load\", { detail: context });\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/events.js","// # src / mixin / setup.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Observable } from \"rxjs/_esm5/Observable\";\nimport { Subject } from \"rxjs/_esm5/Subject\";\n\n// Importing the subset of RxJS functions that we are going to use.\nimport { defer } from \"rxjs/_esm5/observable/defer\";\nimport { fromEvent } from \"rxjs/_esm5/observable/fromEvent\";\nimport { merge } from \"rxjs/_esm5/observable/merge\";\n\nimport { ajax } from \"rxjs/_esm5/observable/dom/ajax\";\n\nimport { catchError } from \"rxjs/_esm5/operators/catchError\";\nimport { tap } from \"rxjs/_esm5/operators/tap\";\nimport { distinctUntilChanged } from \"rxjs/_esm5/operators/distinctUntilChanged\";\nimport { filter } from \"rxjs/_esm5/operators/filter\";\nimport { map } from \"rxjs/_esm5/operators/map\";\nimport { mapTo } from \"rxjs/_esm5/operators/mapTo\";\nimport { partition } from \"rxjs/_esm5/operators/partition\";\nimport { pairwise } from \"rxjs/_esm5/operators/pairwise\";\nimport { share } from \"rxjs/_esm5/operators/share\";\nimport { startWith } from \"rxjs/_esm5/operators/startWith\";\nimport { switchMap } from \"rxjs/_esm5/operators/switchMap\";\nimport { takeUntil } from \"rxjs/_esm5/operators/takeUntil\";\nimport { withLatestFrom } from \"rxjs/_esm5/operators/withLatestFrom\";\n\nimport { isExternal, matches, matchesAncestors } from \"../common\";\nimport { URL } from \"../url\";\n\nimport { HINT, PUSH, POP } from \"./constants\";\nimport { unsubscribeWhen } from \"./operators\";\n\nimport { helperMixin } from \"./methods\";\nimport { historyMixin } from \"./history\";\nimport { fetchMixin } from \"./fetching\";\nimport { updateMixin } from \"./update\";\nimport { eventMixin } from \"./events\";\n\nexport const setupObservablesMixin = C =>\n  class extends eventMixin(updateMixin(fetchMixin(historyMixin(helperMixin(C))))) {\n    // A compare function for contexts, used in combination with `distinctUntilChanged`.\n    // We use `cacheNr` as it is a convenient (hacky) way of circumventing\n    // `distinctUntilChanged` when retrying requests.\n    compareContext(p, q) {\n      return p.url.href === q.url.href && p.error === q.error && p.cacheNr === q.cacheNr;\n    }\n\n    // ### Setup observable\n    // This functions sets up the core observable pipeline of this component.\n    setupObservables() {\n      this.cacheNr = 1;\n\n      // For now, we take for granted that we have a stream of all `PUSH` events (loading a new page by\n      // clicking on a link) and `HINT` events (probable click on a link) which are `pushSubject` and\n      // `hintSubject` respectively.\n      const pushSubject = new Subject();\n      const hintSubject = new Subject();\n\n      // TODO: doc\n      const push$ = pushSubject.pipe(\n        takeUntil(this.subjects.disconnect),\n        map(event => ({\n          type: PUSH,\n          url: new URL(event.currentTarget.href, this.href),\n          anchor: event.currentTarget,\n          event,\n          cacheNr: this.cacheNr\n        })),\n        filter(this.isPushEvent.bind(this)),\n        tap(({ event }) => {\n          event.preventDefault();\n          this.saveScrollHistoryState();\n        })\n      );\n\n      // In additon to `HINT` and `PUSH` events, there's also `POP` events, which are caused by\n      // modifying the browser history, e.g. clicking the back button, etc.\n      const pop$ = fromEvent(window, \"popstate\").pipe(\n        takeUntil(this.subjects.disconnect),\n        filter(() => window.history.state && window.history.state[this.histId()]),\n        map(event => ({\n          type: POP,\n          url: new URL(window.location, this.href),\n          event,\n          cacheNr: this.cacheNr\n        }))\n      );\n\n      const reload$ = this.reload$.pipe(takeUntil(this.subjects.disconnect));\n\n      // TODO: doc\n      const [hash$, page$] = merge(push$, pop$, reload$)\n        .pipe(\n          startWith({ url: new URL(this.initialHref) }),\n          tap(({ url }) => {\n            // HACK: make hy-push-state mimic window.location?\n            this._url = url;\n          }),\n          pairwise(),\n          share(),\n          partition(this.isHashChange)\n        )\n        .map(obs$ => obs$.pipe(map(([, x]) => x), share()));\n\n      // We don't want to prefetch (i.e. use bandwidth) for a _possible_ page load,\n      // while a _certain_ page load is going on.\n      // The `pauser$` observable let's us achieve this.\n      // Needs to be deferred b/c of \"cyclical\" dependency.\n      const pauser$ = defer(() =>\n        // A page change event means we want to pause prefetching, while\n        // a response event means we want to resume prefetching.\n        merge(page$.pipe(mapTo(true)), this.fetch$.pipe(mapTo(false)))\n      )\n        // Start with `false`, i.e. we want the prefetch pipelien to be active\n        .pipe(startWith(false), share());\n\n      // TODO: doc\n      const hint$ = hintSubject.pipe(\n        takeUntil(this.subjects.disconnect),\n        unsubscribeWhen(pauser$),\n        map(event => ({\n          type: HINT,\n          url: new URL(event.currentTarget.href, this.href),\n          anchor: event.currentTarget,\n          event,\n          cacheNr: this.cacheNr\n        })),\n        filter(this.isHintEvent.bind(this))\n      );\n\n      // The stream of (pre-)fetch events.\n      // Includes definitive page change events do deal with unexpected page changes.\n      const prefetch$ = merge(hint$, page$).pipe(\n        // Don't abort a request if the user \"jiggles\" over a link\n        distinctUntilChanged(this.compareContext.bind(this)),\n        switchMap(context =>\n          ajax({\n            method: \"GET\",\n            responseType: \"text\",\n            url: context.url,\n            crossDomain: isExternal(this)\n          }).pipe(\n            map(({ response }) => Object.assign(context, { response })),\n            catchError(error => this.recoverIfResponse(context, error))\n          )\n        ),\n        // Start with some value so `withLatestFrom` below doesn't \"block\"\n        startWith({ url: {} }),\n        share()\n      );\n\n      // TODO: doc\n      this.fetch$ = page$.pipe(\n        tap(context => {\n          this.updateHistoryState(context);\n          this.onStart(context);\n        }),\n        withLatestFrom(prefetch$),\n        switchMap(this.getResponse.bind(this, prefetch$)),\n        share()\n      );\n\n      // TODO: doc\n      const [fetchOk$, fetchError$] = this.fetch$.pipe(partition(({ error }) => !error));\n\n      // TODO: doc\n      const main$ = fetchOk$.pipe(\n        map(this.responseToContent.bind(this)),\n        tap(context => {\n          this.onReady(context);\n          this.updateDOM(context);\n          this.onAfter(context);\n          this.manageScrollPostion(context);\n        }),\n        tap({ error: e => this.onDOMError(e) }),\n        catchError((e, c) => c),\n\n        // If the experimental script feature is enabled,\n        // scripts tags have been stripped from the content,\n        // and this is where we insert them again.\n        switchMap(this.reinsertScriptTags.bind(this)),\n        tap({ error: e => this.onError(e) }),\n        catchError((e, c) => c)\n      );\n\n      // #### Subscriptions\n      // Subscribe to main and hash observables.\n      main$.subscribe(this.onLoad.bind(this));\n      hash$.subscribe(this.updateHistoryStateHash.bind(this));\n\n      // Subscribe to the fetch error branch.\n      fetchError$.subscribe(this.onNetworkError.bind(this));\n\n      // Fire `progress` event when fetching takes longer than expected.\n      page$\n        .pipe(\n          switchMap(context =>\n            defer(() => this.animPromise).pipe(takeUntil(this.fetch$), mapTo(context))\n          )\n        )\n        .subscribe(this.onProgress.bind(this));\n\n      // #### Keeping track of links\n      // We use a `MutationObserver` to keep track of all the links inside the component,\n      // and put events on the `pushSubject` and `hintSubject` observables,\n      // but first we need to check if `MutationObserver` is available.\n      if (\"MutationObserver\" in window && \"WeakSet\" in window) {\n        // A `Set` of `Element`s.\n        // We use this to keep track of which links already have their event listeners registered.\n        const links = new WeakSet();\n\n        // Binding `next` functions to their `Subject`s,\n        // so that we can pass them as callbacks directly. This is just for convenience.\n        const pushNext = pushSubject.next.bind(pushSubject);\n        const hintNext = hintSubject.next.bind(hintSubject);\n\n        // We don't use `Observable.fromEvent` here to avoid creating too many observables.\n        // Registering an unknown number of event listeners is somewhat debatable,\n        // but we certainly don't want to make it wrose.\n        // (The number could be brought down by using an `IntersectionObserver` in the future.\n        // Also note that typically there will be an animation playing while this is happening,\n        // so the effects are not easily noticed).\n        //\n        // In any case, `MutationObserver` and `Set` help us keep track of which links are children\n        // of this component, so that we can reliably add and remove the event listeners.\n        // The function to be called for every added node:\n        const addLink = link => {\n          if (!links.has(link)) {\n            links.add(link);\n            link.addEventListener(\"click\", pushNext);\n            link.addEventListener(\"mouseenter\", hintNext, { passive: true });\n            link.addEventListener(\"touchstart\", hintNext, { passive: true });\n            link.addEventListener(\"focus\", hintNext, { passive: true });\n\n            // When fetching resources from an external domain, rewrite the link's href,\n            // so that shift-click, etc works as expected.\n            // if (isExternal(this)) {\n            //   link.href = new URL(link.getAttribute(\"href\"), this.href).href;\n            // }\n          }\n        };\n\n        const addListeners = addedNode => {\n          if (addedNode instanceof Element) {\n            if (matches.call(addedNode, this.linkSelector)) {\n              addLink(addedNode);\n            } else {\n              Array.from(addedNode.querySelectorAll(this.linkSelector)).forEach(addLink);\n            }\n          }\n        };\n\n        // Next, The function to be called for every removed node.\n        // Usually the elments will be removed from the document altogher\n        // when they are removed from this component,\n        // but since we can't be sure, we remove the event listeners anyway.\n        const removeLink = link => {\n          links.delete(link);\n          link.removeEventListener(\"click\", pushNext);\n          link.removeEventListener(\"mouseenter\", hintNext, { passive: true });\n          link.removeEventListener(\"touchstart\", hintNext, { passive: true });\n          link.removeEventListener(\"focus\", hintNext, { passive: true });\n        };\n\n        const removeListeners = removedNode => {\n          if (removedNode instanceof Element) {\n            if (matches.call(removedNode, this.linkSelector)) {\n              removeLink(removedNode);\n            } else {\n              Array.from(removedNode.querySelectorAll(this.linkSelector)).forEach(removeLink);\n            }\n          }\n        };\n\n        // An observable wrapper around the mutation observer.\n        // We're only interested in nodes entering and leaving the entire subtree of this component,\n        // but not attribute changes.\n        Observable.create(obs => {\n          const next = obs.next.bind(obs);\n          this.mutationObserver = new MutationObserver(mutations =>\n            Array.from(mutations).forEach(next)\n          );\n          this.mutationObserver.observe(this.el, {\n            childList: true,\n            subtree: true\n          });\n        })\n          // For every mutation, we remove the event listeners of elements that go out of the component\n          // (if any), and add event listeners to all elements that make it into the compnent (if any).\n          .subscribe(({ addedNodes, removedNodes }) => {\n            Array.from(removedNodes).forEach(removeListeners.bind(this));\n            Array.from(addedNodes).forEach(addListeners.bind(this));\n          });\n\n        // TODO\n        this.subjects.linkSelector.subscribe(() => {\n          // TODO\n          Array.from(links).forEach(removeLink);\n\n          // The mutation observer does not pick up the links that are already on the page,\n          // so we add them manually here, once.\n          addListeners.call(this, this.el);\n        });\n\n        // If we don't have `MutationObserver` and `Set`, we just register a `click` event listener\n        // on the entire component, and check if a click occurred on one of our links.\n        // Note that we can't reliably generate hints this way, so we don't.\n      } else {\n        this.el.addEventListener(\"click\", event => {\n          const anchor = matchesAncestors.call(event.target, this.linkSelector);\n          if (anchor && anchor.href) {\n            event.currentTarget = anchor; // eslint-disable-line no-param-reassign\n            pushSubject.next(event);\n          }\n        });\n      }\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/setup.js","// # src / mixin / index.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// ## Overview\n// This component is written in [RxJS] and reading its code requires some basic understanding\n// of how RxJS works. It may also serve as an example of how to use RxJS.\n//\n// Other than RxJS, you should be familiar with [ES6 Mixin][esmixins],\n// which is a clever way of using the ES6 class syntax to achieve inheritance-based mixins.\n// The mixin in the main export of this file.\n\n// ## Imports\n// Including the patches for ES6+ functions, but\n// there is a -lite version of the component that comes without these.\n// import 'core-js/fn/array/for-each';\n// import 'core-js/fn/array/from';\n// import 'core-js/fn/function/bind';\n// import 'core-js/fn/object/assign';\n\n// Importing the hy-compontent base libary,\n// which helps with making multiple versions of the component (Vanilla JS, WebComponent, etc...).\nimport { componentMixin, COMPONENT_FEATURE_TESTS, Set } from \"hy-component/src/component\";\nimport { rxjsMixin } from \"hy-component/src/rxjs\";\nimport { array, bool, number, regex, string } from \"hy-component/src/types\";\n\nimport { Subject } from \"rxjs/_esm5/Subject\";\nimport { takeUntil } from \"rxjs/_esm5/operators/takeUntil\";\n\n// Partial polyfill of the URL class. Only provides the most basic funtionality of `URL`,\n// but sufficient for this compoennt.\nimport { URL } from \"../url\";\nimport { isExternal } from \"../common\";\n\nimport { INIT, HINT, PUSH, POP } from \"./constants\";\nimport { setupObservablesMixin } from \"./setup\";\n\nexport { INIT, HINT, PUSH, POP };\n\n// ## Constants\n// A set of [Modernizr] tests that are required to run this component.\n// These are the bare-minimum requirements, more ad-hoc features tests for optional behavior\n// is part of the code below.\nexport const MIXIN_FEATURE_TESTS = new Set([\n  ...COMPONENT_FEATURE_TESTS,\n  \"documentfragment\",\n  \"eventlistener\",\n  \"history\",\n  \"promises\",\n  \"queryselector\",\n  \"requestanimationframe\"\n]);\n\nexport { Set };\n\n// Patching the document fragment's `getElementById` function, which is\n// not implemented in all browsers, even some modern ones.\nDocumentFragment.prototype.getElementById =\n  DocumentFragment.prototype.getElementById ||\n  function getElementById(id) {\n    return this.querySelector(`#${id}`);\n  };\n\n// ## Push state mixin\nexport const pushStateMixin = C =>\n  class extends setupObservablesMixin(rxjsMixin(componentMixin(C))) {\n    // The name of the component (required by hy-component)\n    static get componentName() {\n      return \"hy-push-state\";\n    }\n\n    // ### Options\n    // The default values (and types) of the configuration options (required by hy-component)\n    // See [Options](../../options.md) for usage information.\n    static get types() {\n      return {\n        replaceIds: array,\n        linkSelector: string,\n        scrollRestoration: bool,\n        duration: number,\n        hrefRegex: regex,\n        scriptSelector: string,\n        initialHref: string\n      };\n    }\n\n    static get defaults() {\n      return {\n        replaceIds: [],\n        linkSelector: \"a[href]:not(.no-push-state)\",\n        scrollRestoration: false,\n        duration: 0,\n        hrefRegex: null,\n        scriptSelector: null,\n        initialHref: window.location.href\n      };\n    }\n\n    // ### Properties\n    // We expose the same properties as `window.location`\n    // (in many ways this component can be thought of as a \"replacement\" for the global `Location` object).\n    // Currently they are read-only.\n    get hash() {\n      return this._url.hash;\n    }\n\n    get host() {\n      return this._url.host;\n    }\n\n    get hostname() {\n      return this._url.hostname;\n    }\n\n    get href() {\n      return this._url.href;\n    }\n\n    get origin() {\n      return this._url.origin;\n    }\n\n    get pathname() {\n      return this._url.pathname;\n    }\n\n    get port() {\n      return this._url.port;\n    }\n\n    get protocol() {\n      return this._url.protocol;\n    }\n\n    get search() {\n      return this._url.search;\n    }\n\n    // ### Setup\n    setupComponent(el, props) {\n      super.setupComponent(el, props);\n\n      this.saveScrollHistoryState = this.saveScrollHistoryState.bind(this);\n\n      this.reload$ = new Subject();\n    }\n\n    // This component has no shadow DOM, so we just return the element.\n    setupShadowDOM(el) {\n      return el;\n    }\n\n    // Overriding the setup function.\n    connectComponent() {\n      if (process.env.DEBUG && !this.replaceIds && !this.el.id) {\n        console.warn(\"hy-push-state needs a 'replace-ids' or 'id' attribute.\");\n      }\n\n      // Setting up scroll restoration\n      if (\"scrollRestoration\" in window.history) {\n        const orig = window.history.scrollRestoration;\n\n        this.subjects.scrollRestoration\n          .pipe(takeUntil(this.subjects.disconnect))\n          .subscribe(scrollRestoration => {\n            window.history.scrollRestoration = scrollRestoration ? \"manual\" : orig;\n          });\n      }\n\n      // If restore the last scroll position, if any.\n      this.restoreScrollPostion();\n\n      // Remember the current scroll position (for F5/reloads).\n      window.addEventListener(\"beforeunload\", this.saveScrollHistoryState);\n\n      // Calling the [setup observables function](./setup.md) function.\n      this.setupObservables();\n      super.connectComponent();\n\n      // Setting the initial `history.state`.\n      const url = new URL(this.initialHref);\n      this.updateHistoryState({ type: INIT, replace: true, url });\n\n      const replaceEls = this.getReplaceElements(document);\n      if (isExternal(this)) this.rewriteURLs(replaceEls);\n\n      // After all this is done, we can fire the one-time `init` event...\n      this.fireEvent(\"init\");\n\n      // ...and our custom `load` event, which gets fired on every page change.\n      // We provide similar data as subsequent `load` events,\n      // however we can't provide an `anchor` or `event`,\n      // since this `load` event wasn't caused by a user interaction.\n      this.onLoad({\n        type: INIT,\n        title: this.getTitle(document),\n        replaceEls,\n        url,\n        cacheNr: this.cacheNr\n      });\n    }\n\n    disconnectComponent() {\n      super.disconnectComponent();\n      window.removeEventListener(\"beforeunload\", this.saveScrollHistoryState);\n    }\n\n    // ### Methods\n    // Public methods of this component. See [Methods](../../methods.md) for more.\n    assign(url) {\n      this.reload$.next({\n        type: PUSH,\n        url: new URL(url, this.href),\n        cacheNr: ++this.cacheNr // eslint-disable-line no-plusplus\n      });\n    }\n\n    reload() {\n      this.reload$.next({\n        type: PUSH,\n        cacheNr: ++this.cacheNr, // eslint-disable-line no-plusplus\n        url: new URL(this.href),\n        replace: true\n      });\n    }\n\n    replace(url) {\n      this.reload$.next({\n        type: PUSH,\n        url: new URL(url, this.href),\n        cacheNr: ++this.cacheNr, // eslint-disable-line no-plusplus\n        replace: true\n      });\n    }\n  };\n\n// [rxjs]: https://github.com/ReactiveX/rxjs\n// [esmixins]: http://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/\n// [modernizr]: https://modernizr.com/\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/index.js","// # src / webcomponent / index.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// import 'core-js/fn/array/from';\n\nimport {\n  customElementMixin,\n  CustomElement,\n  CUSTOM_ELEMENT_FEATURE_TESTS,\n  Set\n} from \"hy-component/src/custom-element\";\n\nimport { pushStateMixin, MIXIN_FEATURE_TESTS } from \"../mixin\";\n\nexport const WEBCOMPONENT_FEATURE_TESTS = new Set([\n  ...CUSTOM_ELEMENT_FEATURE_TESTS,\n  ...MIXIN_FEATURE_TESTS\n]);\n\nexport { Set };\n\nexport class HyPushStateElement extends customElementMixin(pushStateMixin(CustomElement)) {\n  static get observedAttributes() {\n    return this.getObservedAttributes();\n  }\n  getTemplate() {\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webcomponent/index.js","// # src / webcomponent / module.js\n// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// ## Overview\n// TODO\n\nimport { HyPushStateElement } from \"./index\";\n\nconst define = () => {\n  window.customElements.define(\"hy-push-state\", HyPushStateElement);\n};\n\n// Make sure the polyfills are ready (if they are being used).\nif (\"customElements\" in window || (window.WebComponents && window.WebComponents.ready)) {\n  define();\n} else if (window.WebComponents) {\n  window.addEventListener(\"WebComponentsReady\", define);\n} else if (process.env.DEBUG) {\n  console.warn(\"Couldn't register component. Did you forget to include a WebComponents polyfill?\");\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webcomponent/module.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/global.js"],"sourceRoot":""}